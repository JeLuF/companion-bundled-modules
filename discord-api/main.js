/*! For license information please see main.js.LICENSE.txt */
(()=>{var e={2351:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getActions=void 0,t.getActions=function(e){return{selfMute:{name:"Self - Mute",options:[{type:"dropdown",label:"Type",id:"type",default:"Toggle",choices:[{id:"Toggle",label:"Toggle"},{id:"Mute",label:"Mute"},{id:"Unmute",label:"Unmute"}]}],callback:t=>{if(null!==e.clientData.userVoiceSettings)if(e.clientData.userVoiceSettings.deaf)"Mute"!==t.options.type&&e.client.setVoiceSettings({mute:!1,deaf:!1});else{let a="Mute"===t.options.type;if("Toggle"===t.options.type&&(a=!e.clientData.userVoiceSettings.mute),a===e.clientData.userVoiceSettings.mute)return;e.client.setVoiceSettings({mute:a})}}},selfDeafen:{name:"Self - Deafen",options:[{type:"dropdown",label:"Type",id:"type",default:"Toggle",choices:[{id:"Toggle",label:"Toggle"},{id:"Deafen",label:"Deafen"},{id:"unDeafen",label:"unDeafen"}]}],callback:t=>{let a="Deafen"===t.options.type;"Toggle"===t.options.type&&(a=!e.clientData.userVoiceSettings.deaf),null!==e.clientData.userVoiceSettings&&a!==e.clientData.userVoiceSettings.deaf&&e.client.setVoiceSettings({deaf:a})}},selfInputVolume:{name:"Self - Input Volume",options:[{type:"dropdown",label:"Type",id:"type",default:"Set",choices:[{id:"Set",label:"Set"},{id:"Increase",label:"Increase"},{id:"Decrease",label:"Decrease"}]},{type:"number",label:"Volume",id:"volume",default:100,min:0,max:100}],callback:t=>{var a;if("Set"===t.options.type)e.client.setVoiceSettings({input:{volume:t.options.volume}});else{const i=null===(a=e.clientData.userVoiceSettings)||void 0===a?void 0:a.input.volume;if(void 0!==i){let a=i+("Increase"===t.options.type?t.options.volume:-t.options.volume);a<0&&(a=0),a>100&&(a=100),e.client.setVoiceSettings({input:{volume:a}})}}}},selfOutputVolume:{name:"Self - Output Volume",options:[{type:"dropdown",label:"Type",id:"type",default:"Set",choices:[{id:"Set",label:"Set"},{id:"Increase",label:"Increase"},{id:"Decrease",label:"Decrease"}]},{type:"number",label:"Volume",id:"volume",default:100,min:0,max:200}],callback:t=>{var a;if("Set"===t.options.type)e.client.setVoiceSettings({output:{volume:t.options.volume}});else{const i=null===(a=e.clientData.userVoiceSettings)||void 0===a?void 0:a.output.volume;if(void 0!==i){let a=i+("Increase"===t.options.type?t.options.volume:-t.options.volume);a<0&&(a=0),a>200&&(a=200),e.client.setVoiceSettings({output:{volume:a}})}}}},otherMute:{name:"Other - Mute",options:[{type:"dropdown",label:"Type",id:"type",default:"Toggle",choices:[{id:"Toggle",label:"Toggle"},{id:"Mute",label:"Mute"},{id:"Unmute",label:"Unmute"}]},{type:"textinput",label:"user",tooltip:"User ID, name#discriminator, nick",id:"user",default:""}],callback:async t=>{const a=await e.clientData.getUser(t.options.user);if(null===a||a.user.id===e.client.user.id)return;let i=a.mute;"Toggle"===t.options.type&&(i=!i),"Mute"===t.options.type&&(i=!0),"Unmute"===t.options.type&&(i=!1),await e.client.setUserVoiceSettings(a.user.id,{mute:i}),e.variables.updateVariables()}},otherVolume:{name:"Other - Volume",options:[{type:"dropdown",label:"Type",id:"type",default:"Set",choices:[{id:"Set",label:"Set"},{id:"Increase",label:"Increase"},{id:"Decrease",label:"Decrease"}]},{type:"number",label:"Volume",id:"volume",default:100,min:0,max:100},{type:"textinput",label:"user",tooltip:"User ID, name#discriminator, nick",id:"user",default:""}],callback:async t=>{const a=await e.clientData.getUser(t.options.user);if(null===a||a.user.id===e.client.user.id)return;let i=t.options.volume;"Set"!==t.options.type&&(i=a.volume+("Increase"===t.options.type?i:-i),i<0&&(i=0),i>200&&(i=200)),await e.client.setUserVoiceSettings(a.user.id,{volume:i}),e.variables.updateVariables()}},joinVoiceChannel:{name:"Join Channel - Voice",options:[{type:"dropdown",label:"Channel",id:"channel",default:"0",choices:[{id:"0",label:"Select Channel"},...e.clientData.sortedVoiceChannelChoices()]},{type:"checkbox",label:"Force",tooltip:"When enabled allows for changing voice channels while already connected to one",id:"force",default:!0},{type:"checkbox",label:"Leave if already joined",tooltip:"When enabled allows for changing voice channels while already connected to one",id:"leave",default:!0}],callback:t=>{var a;"0"!==t.options.channel&&(t.options.channel!==(null===(a=e.clientData.voiceChannel)||void 0===a?void 0:a.id)?e.client.selectVoiceChannel(t.options.channel,{force:t.options.force}):t.options.leave&&e.client.selectVoiceChannel(null,{force:t.options.force}))}},joinTextChannel:{name:"Join Channel - Text",options:[{type:"dropdown",label:"Channel",id:"channel",default:"0",choices:[{id:"0",label:"Select Channel"},...e.clientData.sortedTextChannelChoices()]}],callback:t=>{"0"!==t.options.channel&&e.client.selectTextChannel(t.options.channel)}},selectUser:{name:"Select User",options:[{type:"textinput",label:"User",tooltip:"User ID, name#discriminator, nick, or index",id:"user",default:""}],callback:async t=>{const a=e.clientData.sortedVoiceUsers().find(((e,a)=>{const i=e.user.id===t.options.user,p=`${e.user.username.toLowerCase()}#${e.user.discriminator}`===t.options.user.toLowerCase(),n=e.nick.toLowerCase()===t.options.user.toLowerCase(),s=!isNaN(parseInt(t.options.user,10))&&parseInt(t.options.user,10)===a;return i||p||n||s}));a&&(e.clientData.selectedUser=e.clientData.selectedUser===a.user.id?"":a.user.id),e.variables.updateVariables(),e.checkFeedbacks("selectedUser","otherMute")}}}}},2585:function(e,t,a){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.discordInit=void 0;const p=i(a(6277)),n=a(8049);t.discordInit=async e=>{if(!e.config.clientID||!e.config.clientSecret)return;if(e.client)return;e.log("debug","Initializing Discord client");const t=new p.default.Client({transport:"ipc"});e.client=t,e.clientData={accessToken:null,application:null,baseURL:"https://discord.com/api",channels:[],guilds:[],guildNames:new Map,reconnectTimer:null,scopes:["identify","rpc","rpc.voice.read","rpc.voice.write","guilds"],selectedUser:"",speaking:new Set,subscriptions:{SPEAKING_START:null,SPEAKING_STOP:null,VOICE_STATE_CREATE:null,VOICE_STATE_DELETE:null,VOICE_STATE_UPDATE:null},user:null,userVoiceSettings:null,voiceChannel:null,voiceStatus:{state:"DISCONNECTED",hostname:"",pings:[],average_ping:0},_destroying:!1,_expecting:new Map,_connectPromise:void 0};const a=async e=>{const{channels:a}=await t.request("GET_CHANNELS",{guild_id:e});return a.map((t=>({...t,guild_id:e})))};e.clientData.getUser=async t=>{var a;let i=await e.parseVariablesInString(t);return(null===(a=e.clientData.voiceChannel)||void 0===a?void 0:a.voice_states.find((e=>{const t=i.toLowerCase()===e.user.id,a=i.toLowerCase()===`${e.user.username.toLowerCase()}#${e.user.discriminator}`,p=i.toLowerCase()===e.nick.toLowerCase(),n=i.toLowerCase()===e.user.username.toLowerCase();return t||a||p||n})))||null},e.clientData.selectTextChannel=e=>t.request("SELECT_TEXT_CHANNEL",{channel_id:e}),e.clientData.selectVoiceChannel=(e,{timeout:a,force:i=!1}={})=>t.request("SELECT_VOICE_CHANNEL",{channel_id:e,timeout:a,force:i}),e.clientData.setUserVoiceSettings=(e,a)=>t.request("SET_USER_VOICE_SETTINGS",{user_id:e,mute:a.mute,volume:a.volume}),e.clientData.setVoiceSettings=a=>t.request("SET_VOICE_SETTINGS",a).then((t=>{e.clientData.userVoiceSettings=t,e.variables.updateVariables(),e.checkFeedbacks("selfMute","selfDeaf")})),e.clientData.sortedTextChannelChoices=()=>{const t=[];return e.clientData.channels.filter((e=>0===e.type)).forEach((a=>{t.push({id:a.id,label:`${e.clientData.guildNames.get(a.guild_id)} - ${a.name}`})})),t.sort(((e,t)=>e.label.localeCompare(t.label))),t},e.clientData.sortedVoiceChannelChoices=()=>{const t=[];return e.clientData.channels.filter((e=>2===e.type)).forEach((a=>{t.push({id:a.id,label:`${e.clientData.guildNames.get(a.guild_id)} - ${a.name}`})})),t.sort(((e,t)=>e.label.localeCompare(t.label))),t},e.clientData.sortedVoiceUsers=()=>{var t;if(!(null===(t=e.clientData.voiceChannel)||void 0===t?void 0:t.voice_states))return[];const a=[...e.clientData.voiceChannel.voice_states];return a.sort(((e,t)=>0!==e.nick.localeCompare(t.nick)?e.nick.localeCompare(t.nick):0)),a};const i=async()=>{e.clientData.guilds=await(async()=>{const{guilds:e}=await t.request("GET_GUILDS");return e})(),e.clientData.channels=await(async()=>{let t=[];const i=async p=>e.clientData.guilds[p]?(t=[...t,...await a(e.clientData.guilds[p].id)],await i(p+1)):Promise.resolve(t);return await i(0)})(),e.clientData.guilds.forEach((t=>{e.clientData.guildNames.set(t.id,t.name)})),e.updateInstance()};t.on("ready",(async()=>{e.log("debug","discord client ready"),e.updateStatus(n.InstanceStatus.Ok),e.clientData.access_token=t.accessToken;let a={...e.config,accessToken:e.clientData.access_token};e.saveConfig(a),await i(),e.clientData.userVoiceSettings=await t.request("GET_VOICE_SETTINGS");const p=await t.request("GET_SELECTED_VOICE_CHANNEL");null!==p&&(e.clientData.voiceChannel=p,e.clientData.voiceChannel.voice_states.sort(((e,t)=>e.nick<t.nick?-1:t.nick>e.nick?1:e.user.id<t.user.id?-1:1)),e.clientData.subscriptions.SPEAKING_START=await t.subscribe("SPEAKING_START",{channel_id:p.id}),e.clientData.subscriptions.SPEAKING_STOP=await t.subscribe("SPEAKING_STOP",{channel_id:p.id}),e.clientData.subscriptions.VOICE_STATE_CREATE=await t.subscribe("VOICE_STATE_CREATE",{channel_id:p.id}),e.clientData.subscriptions.VOICE_STATE_DELETE=await t.subscribe("VOICE_STATE_DELETE",{channel_id:p.id}),e.clientData.subscriptions.VOICE_STATE_UPDATE=await t.subscribe("VOICE_STATE_UPDATE",{channel_id:p.id})),await t.subscribe("CHANNEL_CREATE",{}),await t.subscribe("GUILD_CREATE",{}),await t.subscribe("VOICE_CHANNEL_SELECT",{}),await t.subscribe("VOICE_CONNECTION_STATUS",{}),await t.subscribe("VOICE_SETTINGS_UPDATE",{}),e.variables.updateVariables(),e.checkFeedbacks("selfMute","selfDeaf","voiceChannel","voiceStyling")})),t.on("disconnected",(()=>{e.log("warn","discord client disconnected"),e.updateStatus(n.InstanceStatus.Disconnected)})),t.on("error",(t=>{e.log("error",t)})),t.on("CHANNEL_CREATE",(e=>{i()})),t.on("GUILD_CREATE",(e=>{i()})),t.on("VOICE_CHANNEL_SELECT",(async a=>{null!==a.channel_id?(e.clientData.voiceChannel=await t.request("GET_SELECTED_VOICE_CHANNEL"),e.clientData.subscriptions.SPEAKING_START=await t.subscribe("SPEAKING_START",{channel_id:a.channel_id}),e.clientData.subscriptions.SPEAKING_STOP=await t.subscribe("SPEAKING_STOP",{channel_id:a.channel_id}),e.clientData.subscriptions.VOICE_STATE_CREATE=await t.subscribe("VOICE_STATE_CREATE",{channel_id:a.channel_id}),e.clientData.subscriptions.VOICE_STATE_DELETE=await t.subscribe("VOICE_STATE_DELETE",{channel_id:a.channel_id}),e.clientData.subscriptions.VOICE_STATE_UPDATE=await t.subscribe("VOICE_STATE_UPDATE",{channel_id:a.channel_id})):(e.clientData.voiceChannel=null,e.clientData.speaking.clear(),null!==e.clientData.subscriptions.SPEAKING_START&&(e.clientData.subscriptions.SPEAKING_START.unsubscribe(),e.clientData.subscriptions.SPEAKING_START=null),null!==e.clientData.subscriptions.SPEAKING_STOP&&(e.clientData.subscriptions.SPEAKING_STOP.unsubscribe(),e.clientData.subscriptions.SPEAKING_STOP=null),null!==e.clientData.subscriptions.VOICE_STATE_CREATE&&(e.clientData.subscriptions.VOICE_STATE_CREATE.unsubscribe(),e.clientData.subscriptions.VOICE_STATE_CREATE=null),null!==e.clientData.subscriptions.VOICE_STATE_DELETE&&(e.clientData.subscriptions.VOICE_STATE_DELETE.unsubscribe(),e.clientData.subscriptions.VOICE_STATE_DELETE=null),null!==e.clientData.subscriptions.VOICE_STATE_UPDATE&&(e.clientData.subscriptions.VOICE_STATE_UPDATE.unsubscribe(),e.clientData.subscriptions.VOICE_STATE_UPDATE=null)),e.variables.updateVariables(),e.checkFeedbacks("voiceChannel","voiceStyling")})),t.on("VOICE_CONNECTION_STATUS",(t=>{e.clientData.voiceStatus=t,e.variables.updateVariables()})),t.on("VOICE_SETTINGS_UPDATE",(t=>{e.clientData.userVoiceSettings=t,e.variables.updateVariables(),e.checkFeedbacks("selfMute","selfDeaf","voiceStyling")})),t.on("VOICE_STATE_CREATE",(t=>{var a,i;null!==e.clientData.voiceChannel&&(null===(a=e.clientData.voiceChannel.voice_states)||void 0===a||a.push(t),null===(i=e.clientData.voiceChannel.voice_states)||void 0===i||i.sort(((e,t)=>e.nick<t.nick?-1:t.nick>e.nick?1:e.user.id<t.user.id?-1:1)),e.variables.updateVariables(),e.checkFeedbacks("voiceStyling"))})),t.on("VOICE_STATE_DELETE",(t=>{var a,i;null!==e.clientData.voiceChannel&&(e.clientData.voiceChannel.voice_states=null===(i=null===(a=e.clientData.voiceChannel)||void 0===a?void 0:a.voice_states)||void 0===i?void 0:i.filter((e=>e.user.id!==t.user.id)),e.variables.updateVariables(),e.checkFeedbacks("voiceStyling"))})),t.on("VOICE_STATE_UPDATE",(t=>{if(null===e.clientData.voiceChannel)return;const a=e.clientData.voiceChannel.voice_states.findIndex((e=>e.user.id===t.user.id));-1!==a?e.clientData.voiceChannel.voice_states[a]=t:(e.clientData.voiceChannel.voice_states.push(t),e.clientData.voiceChannel.voice_states.sort(((e,t)=>e.nick<t.nick?-1:t.nick>e.nick?1:e.user.id<t.user.id?-1:1))),e.variables.updateVariables(),e.checkFeedbacks("otherMute","otherDeaf","voiceStyling")})),t.on("SPEAKING_START",(t=>{e.clientData.speaking.add(t.user_id),e.variables.updateVariables(),e.checkFeedbacks("voiceStyling")})),t.on("SPEAKING_STOP",(t=>{e.clientData.speaking.delete(t.user_id),e.variables.updateVariables(),e.checkFeedbacks("voiceStyling")})),await t.login({accessToken:e.config.accessToken,clientId:e.config.clientID,clientSecret:e.config.clientSecret,redirectUri:"http://localhost",scopes:e.clientData.scopes}).catch((t=>{e.log("warn",`Login err: ${JSON.stringify(t)}`),e.updateStatus(n.InstanceStatus.ConnectionFailure)}))}},1610:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getConfigFields=void 0,t.getConfigFields=()=>[{type:"static-text",id:"info",width:12,label:"Information",value:'This module is currently in early beta, as such it requires users to provide their own Discord App Client ID and Secret. Once Discord verify the Companion app, this wont be required.\n\t\t\t\t<br /><br />\n        1. Go to <a href="https://discord.com/developers/applications" target="_blank">https://discord.com/developers/applications</a> and create a \'New Application\'.\n\t\t\t\t<br />\n        2. Select the application created, and go to the OAuth2 tab in the menu on the left.\n        <br />\n        3. In the Redirects section, add http://localhost as a redirect URL.\n        <br />\n        4. Copy the Client ID, and Client Secret, and paste into the config below.'},{type:"textinput",label:"Client ID",id:"clientID",width:6,default:""},{type:"textinput",label:"Client Secret",id:"clientSecret",width:6,default:""}]},4499:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getFeedbacks=void 0;const i=a(6440),p=a(8049);t.getFeedbacks=function(e){return{selfMute:{type:"boolean",name:"Voice - Self Mute",description:"Indicates if you've muted yourself",options:[],defaultStyle:{color:(0,p.combineRgb)(0,0,0),bgcolor:(0,p.combineRgb)(255,0,0)},callback:()=>{var t,a;return(null===(t=e.clientData.userVoiceSettings)||void 0===t?void 0:t.mute)||(null===(a=e.clientData.userVoiceSettings)||void 0===a?void 0:a.deaf)||!1}},selfDeaf:{type:"boolean",name:"Voice - Self Deaf",description:"Indicates if you've deafened yourself",options:[],defaultStyle:{color:(0,p.combineRgb)(0,0,0),bgcolor:(0,p.combineRgb)(255,0,0)},callback:()=>{var t;return(null===(t=e.clientData.userVoiceSettings)||void 0===t?void 0:t.deaf)||!1}},otherMute:{type:"boolean",name:"Voice - Other Mute",description:"Indicates if another user is muted",options:[{type:"textinput",label:"user",tooltip:"User ID, name#discriminator, nick, or index",id:"user",default:""}],defaultStyle:{color:(0,p.combineRgb)(0,0,0),bgcolor:(0,p.combineRgb)(255,0,0)},callback:async(t,a)=>{let i=await a.parseVariablesInString(t.options.user);i||t.options.user;const p=e.clientData.sortedVoiceUsers().find(((e,t)=>!isNaN(parseInt(i,10))&&parseInt(i,10)===t||i===e.user.id||i===`${e.user.username}#${e.user.discriminator}`||i===e.nick));return(null==p?void 0:p.mute)||(null==p?void 0:p.voice_state.mute)||(null==p?void 0:p.voice_state.self_mute)||!1}},otherDeaf:{type:"boolean",name:"Voice - Other Deaf",description:"Indicates if another user is deafened",options:[{type:"textinput",label:"user",tooltip:"User ID, name#discriminator, nick, or index",id:"user",default:""}],defaultStyle:{color:(0,p.combineRgb)(0,0,0),bgcolor:(0,p.combineRgb)(255,0,0)},callback:async(t,a)=>{let i=await a.parseVariablesInString(t.options.user);i||t.options.user;const p=e.clientData.sortedVoiceUsers().find(((e,t)=>!isNaN(parseInt(i,10))&&parseInt(i,10)===t||i===e.user.id||i===`${e.user.username}#${e.user.discriminator}`||i===e.nick));return(null==p?void 0:p.voice_state.deaf)||(null==p?void 0:p.voice_state.self_deaf)||!1}},voiceChannel:{type:"boolean",name:"Voice - Channel",description:"Indicates if you're in the specified Voice Channel",options:[{type:"dropdown",label:"Channel",id:"channel",default:"0",choices:[{id:"0",label:"Select Channel"},...e.clientData.sortedVoiceChannelChoices()]}],defaultStyle:{color:(0,p.combineRgb)(0,0,0),bgcolor:(0,p.combineRgb)(0,255,0)},callback:t=>{var a;return t.options.channel===(null===(a=e.clientData.voiceChannel)||void 0===a?void 0:a.id)}},voiceStyling:{type:"advanced",name:"Voice - Styled Voice Status",description:"PNG styled mute/deaf/speaking status",options:[{type:"textinput",label:"user",tooltip:"User ID, name#discriminator, nick, or index",id:"user",default:"Self"}],callback:async(t,a)=>{let p=await a.parseVariablesInString(t.options.user);p||t.options.user;const n="self"===p.toLowerCase();let s="0",d="0";const r=await e.clientData.sortedVoiceUsers().find(((t,a)=>!isNaN(parseInt(p,10))&&parseInt(p,10)===a||(n&&(t.user.id,e.client.user.id),p===t.user.id||p===`${t.user.username}#${t.user.discriminator}`||p===t.nick)));if(r){(r.voice_state.self_mute||r.voice_state.suppress)&&(s="3"),r.mute&&(s="1"),e.clientData.speaking.has(r.user.id)&&(s="s"),r.voice_state.mute&&(s="2"),r.voice_state.self_deaf&&(d="3"),r.voice_state.deaf&&(d="2");const t=`m${s}d${d}`;if(i.voicePNG64[t])return{pngalignment:"center:bottom",png64:i.voicePNG64[t]}}return{}}},selectedUser:{type:"boolean",name:"Selected User",description:"Indicates currently selected user",options:[{type:"textinput",label:"user",tooltip:"User ID, name#discriminator, nick, or index",id:"user",default:""}],defaultStyle:{color:(0,p.combineRgb)(255,255,255),bgcolor:(0,p.combineRgb)(0,100,0)},callback:async(t,a)=>{let i=await a.parseVariablesInString(t.options.user);i||t.options.user;const p=e.clientData.sortedVoiceUsers().find(((e,t)=>!isNaN(parseInt(i,10))&&parseInt(i,10)===t||i===e.user.id||i===`${e.user.username}#${e.user.discriminator}`||i===e.nick));return(null==p?void 0:p.user.id)===e.clientData.selectedUser||!1}}}}},5590:(e,t,a)=>{"use strict";const i=a(8049),p=a(2351),n=a(2585),s=a(1610),d=a(4499),r=a(9671),o=a(2183),g=a(2181);class l extends i.InstanceBase{constructor(e){super(e),this.config={clientID:"",clientSecret:"",refreshToken:""},this.variables=new g.Variables(this),this.clientInit=()=>{this.config.clientID&&this.config.clientSecret?(0,n.discordInit)(this):this.log("info","Please configure the Discord module with a Client ID and Client Secret")},this.instanceOptions.disableVariableValidation=!0}async init(e){await this.configUpdated(e),this.updateInstance(),this.setPresetDefinitions((0,r.getPresets)()),this.clientInit()}async destroy(){this.log("debug",`Instance destroyed: ${this.id}`)}getConfigFields(){return(0,s.getConfigFields)()}async configUpdated(e){this.config.clientID!==e.clientID||this.config.clientSecret!==e.clientSecret?(this.config=e,this.clientInit()):this.config=e,this.updateInstance()}async updateInstance(){const e=(0,p.getActions)(this),t=(0,d.getFeedbacks)(this);this.setActionDefinitions(e),this.setFeedbackDefinitions(t),this.variables.updateVariables()}}(0,i.runEntrypoint)(l,(0,o.getUpgrades)()),e.exports=l},6440:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.voicePNG64=void 0,t.voicePNG64={m0d0:"iVBORw0KGgoAAAANSUhEUgAAAEgAAAA6CAYAAAATBx+NAAABhGlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TRZFKh3YQcchQnSz4hegmVSyChdJWaNXB5NIvaNKQpLg4Cq4FBz8Wqw4uzro6uAqC4AeIo5OToouU+L+k0CLGg+N+vLv3uHsHCI0KU82uMUDVLCMVj4nZ3KrY8wo/gghhHLMSM/VEejEDz/F1Dx9f76I8y/vcn6NfyZsM8InEc0w3LOIN4ulNS+e8TxxmJUkhPiceNeiCxI9cl11+41x0WOCZYSOTmicOE4vFDpY7mJUMlXiKOKKoGuULWZcVzluc1UqNte7JXxjIaytprtMcQhxLSCAJETJqKKMCC1FaNVJMpGg/5uEfdPxJcsnkKoORYwFVqJAcP/gf/O7WLExOuEmBGND9Ytsfw0DPLtCs2/b3sW03TwD/M3Cltf3VBjDzSXq9rUWOgOA2cHHd1uQ94HIHGHjSJUNyJD9NoVAA3s/om3JA6BboW3N7a+3j9AHIUFfLN8DBITBSpOx1j3f3dvb275lWfz/0MXLb05vHJQAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAWJQAAFiUBSVIk8AAAAAd0SU1FB+YDDxQAHWsjX8wAAAP1SURBVHja7ZhNaFxVFMd/507S1AYUAymCH0GJiIo7V01snZeZeXmhUtRMxCIKtbiTggtd+YFuXJZaXUjrrklsS0SsnczXe4hEhSKIixbUWq0GapVCF7UhM3OPi3m2EpM2yXykDfcHD4Z3P7jzn3P+95wBh8PhcDgcDofD4XA4HA6Hw+FwOBwOh8PhcDgcDofDsV6RRhbnoqgzUWWPoi8DGxB51SaYDJLJSru/SK4UdSbQfkVGUc0CffHQKVX9Qox8hPCrP+TNtUWgXKEsxsgnKDsW7HhsXtjxxJBn2yFMoRQlLGwV1XFgM2CWmFoDLmDYjZVjfjq5rPOZ1R7MiPSgpP83oCS7LLe3K3JUdUJUQ+AOQFEtgL6kyqAqg4ruUaUYT+/FMiXo5HL372jgbBuBTYu879b6WMvJF8MZYAugCgeNyLuZtHd6wbQZYF+uUL5HRF4X2K2QzRfDGT/tDbQsxfLF8E7g9yWG7/LT3mzL/CZfMsaYSSAL1LDs9H3v8LLOnQ/HMIwDCYEjiDybSSVrTU+xtcQY2Q48BbAScQB83zuMZWccdVnFbm2JB60V06XyRpADQALlwErE+a9ICvvrJibjnxfDznUjkCB9QA9Qw8g7Ddj7vvhm29wB/etGILW6C0ioSNlPJc+udp/h9NBPqoSAUavZ9RNBItsARPVoE8LxCIAYGW34ms+XwoMou6zVkcAfygFVoAIszN+K1MfI5cuBMXIcOOSnveeapNGD9XKLkw2bPZzU+se+hiNIlW/jG8SrH1AvAouF+M8qciH+ZUbidyeaGESdcX3ScDujV/do3KSV2qdx1GRzUdQ1nB6aszUZBL4BbBxN39maPO6nkpVcFHUJ+EBVVA7drM3qsgUK0ulZ0A+BPlPVieNh1BUMJ89Z1QGgG7jVqj4aDCfPfRZGHaaqE8D9oPszmeRfrfDrduyxokq6FIbdtRrfA/cifI3KqBrODw/VK9FcOUoYqz0IR1EeQzljsQ8EmVS1ie3F38AtwJ/APFAR0b21hHkvSF67Ac1FkUlU9U2F5+O02gD0Apf9tLep4V4s5XmXCoVwi4WPBbaB/iiWX/LF8AdgHqsPAfehdCNywlZ1exA0T5wF9F71R9mbqOptwNvXTJeKfUVF3mhJiv1LJuP9YbEplKeBWeBh4EngGeARhTMoL1qtDQSBd75t9VHd765XI4ytdN9VdfMj9ZSZAqbyxdLdYM4CWGv7Az91eo38tKMVvtVwoeinU79dMfK1E2ftb7EbCNvOtTdfLwZfLt6jXfnX8Fprv1qiCJ5utUDV+Gk9NRlTyAOX4+eiwgdq5a3rClSV1xTeB+bitZcUplF5AYfD4bgB+QcdKn/7Owt2QwAAAABJRU5ErkJggg==",m0d1:"iVBORw0KGgoAAAANSUhEUgAAAEgAAAA6CAYAAAATBx+NAAABhGlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TRZFKh3YQcchQnSz4hegmVSyChdJWaNXB5NIvaNKQpLg4Cq4FBz8Wqw4uzro6uAqC4AeIo5OToouU+L+k0CLGg+N+vLv3uHsHCI0KU82uMUDVLCMVj4nZ3KrY8wo/gghhHLMSM/VEejEDz/F1Dx9f76I8y/vcn6NfyZsM8InEc0w3LOIN4ulNS+e8TxxmJUkhPiceNeiCxI9cl11+41x0WOCZYSOTmicOE4vFDpY7mJUMlXiKOKKoGuULWZcVzluc1UqNte7JXxjIaytprtMcQhxLSCAJETJqKKMCC1FaNVJMpGg/5uEfdPxJcsnkKoORYwFVqJAcP/gf/O7WLExOuEmBGND9Ytsfw0DPLtCs2/b3sW03TwD/M3Cltf3VBjDzSXq9rUWOgOA2cHHd1uQ94HIHGHjSJUNyJD9NoVAA3s/om3JA6BboW3N7a+3j9AHIUFfLN8DBITBSpOx1j3f3dvb275lWfz/0MXLb05vHJQAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAWJQAAFiUBSVIk8AAAAAd0SU1FB+YDDxQIIPuSmdUAAASYSURBVHja7ZhNbFRVFIC/84ZSpBEyNf5sSKPWGDW6AIzYFspM580fGKOAJsRogsYdwbjQnS7cuDT+bAy4Q1BJjdEwrzPTeakCgg3EsMAEKCiEBFBpSgIUZuYeF/Oqk9KhLdOZSHO/ZJLJu+/d9+Z755x7z4DFYrFYLBaLxWKxWCwWi8VisVgsFovFYrFYLBaLxWKZr0g9F2d8vyVUYpuiW4GFiLxjQuxORSLFZv+QTN5vCaGdimxEdRPQEQz9pqpD4sgXOPyRiEbHJ64Zdd2WcC5XbIigTHZQHEe+RXl+0ow/3BCef64vapohJpv3QwbWiOqXwH2AU+PUMsrw2btD3W8822sux+MPG5F+UV2zNJsdqzW/c7sP5oi0o7g3DSiRVkO4WZGjqrtEtQA8ACiqWdA3VelRpUfRbarkUE6pkXWBnE4jcgh4SkV+HHXdllrzL6jj2RYBi6c43qaVsYYzkCvsB7oAVdjhiHwYd6Mjk07bD3z8yUdDsvWtXg3k7APuAf5WkQ23SrMFd2LhzAzkHcdxdgdyyhg2JxPRr291zSQ59wMXVKQn7Hknb5kpd6Igx5H1wIsAGDYnppEDENScg1VyVoc97+T2fUPOvBLk5QcXgWwHQijbZyHncFVa9YQ974RX8NuXjZd/2psrtMwbQYJ0AO1AGUc+mKGcI8BSYExFngl73snMkN8qRg+hrApB57wRpEa3ACEVGUzEImemkdNpRIaBJcBlFVkR9rwRgFRv5LoaTgOOGt00fyJIpBdAVPfMQM4BIAyMqsjyCTlV4fgNgDiyse5VbCBf2IGyxRhNpxJ9GaAEFIHJ+VuUyhiZgcGU48heYGfCjb4yR44eq2y3ODaNnH3AvcCfKtJ1k5xKdBzTyteOuiNIlcPBChKtPKCOAVOF+CkVuRS8mXRwbHgOg6glaAGK00TOxGrVXWsp1//mqL9IK+XvgqjZlPH91qTbN27K0gMcBEwQTb+asqxNxCLFjO+3CiSAkqjsbEb6BQX5l6rIWR32vBN1bSlmemLKdc+Bfg50OCXdtbfgt6aSkfNGtRtoA5YY1ZWpZOT89wV/gVPSXcAjoJ/G45G/miTnSFXN6ZqBHJ3Tbj5fKLSVyxwFHkT4GZWN6nAx2RcpA2QG/ZBjtB1hD8pqlNMG82gqHivNYXtxFbgL5WC5JGvT6cj1qn3O0mC1Wj5Vzcn4vhMq6fsKrwZptTCItmsJN7q47lYjFo1eyWYLXQa+EugFPSGG3wdyhePADYw+DjyE0obIsCnp+lRq7uRUvfcRNbIukNMZ7JAn9jkrppID4BTN2yryXkNSbIJ4PHrBYGIoG4BzwBPAC8DLwJMKp1FeN1ruTqWiFxsg57gaeTqZjFyaovGsKSfYI7w029vdVrOarqRMP9A/kMsvA+cMgDGmM5WIjTSy1pRL0pVOR67WaDxH6q05c75RTLixs/8W8gbLAQjkTNl4NuJ+d9zfHaOu22JE+ic1njOVY5oeQc0mnMsVVWQNcFRFVs0mchQO1NgEe40WVAo+zZHkeWNqzMrZppWW5F2Fz4Bx4BpwRcFD5TUsFovlf8g/1W0XwGYNlt0AAAAASUVORK5CYII=",m0d2:"",m1d0:"iVBORw0KGgoAAAANSUhEUgAAAEgAAAA6CAYAAAATBx+NAAABhGlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TRZFKh3YQcchQnSz4hegmVSyChdJWaNXB5NIvaNKQpLg4Cq4FBz8Wqw4uzro6uAqC4AeIo5OToouU+L+k0CLGg+N+vLv3uHsHCI0KU82uMUDVLCMVj4nZ3KrY8wo/gghhHLMSM/VEejEDz/F1Dx9f76I8y/vcn6NfyZsM8InEc0w3LOIN4ulNS+e8TxxmJUkhPiceNeiCxI9cl11+41x0WOCZYSOTmicOE4vFDpY7mJUMlXiKOKKoGuULWZcVzluc1UqNte7JXxjIaytprtMcQhxLSCAJETJqKKMCC1FaNVJMpGg/5uEfdPxJcsnkKoORYwFVqJAcP/gf/O7WLExOuEmBGND9Ytsfw0DPLtCs2/b3sW03TwD/M3Cltf3VBjDzSXq9rUWOgOA2cHHd1uQ94HIHGHjSJUNyJD9NoVAA3s/om3JA6BboW3N7a+3j9AHIUFfLN8DBITBSpOx1j3f3dvb275lWfz/0MXLb05vHJQAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAWJQAAFiUBSVIk8AAAAAd0SU1FB+YDDxQBO6A163AAAASbSURBVHja7ZhdiFRlGMd/zzmzalrKCHoTJIRd2AcS3siuH8zZHc+ZwRDKXUjCQIXACiGprqzIi7yUzaJCgwJXUTEibc7s7MygthqBRBArRBpGXUSUWCayO+d9upizOq0f+zFn1or3dzXMOeedM//3ef7P87xgsVgsFovFYrFYLBaLxWKxWCwWi8VisVgsFovFYrFY/q9IMw8XqtU2t8Y2RV8EZiDyinE5mMtkRqb7jxQGqm0uuliR9ah2A4viS+dU9YQ48iHCRb/TuzYtAhX6y+I48gnKujErHhsW1j3R6ZnRry4FwVxR3aki29NhWEtSmP6Bqmtglaj2AQsB5za3RsDvOGzByDE/mzETWT811RdzROajZG+6oGRmKmngt1icOaJ6ElgqqgDbkhRIVQ8IdF8XQbUf4YiqDNU3TJehslYED1iA4aigR4GelgoEzAJm3+p7VdpicWaL6glgKfCNiuxIUpxiqTIItAOqsM8R2bUm650fc9sg0FvoLz8gIjsEtih0F0uVQT/rdbQsxYqlyv3AT2PDWA3PBb63L46cE8Ay4KyKrE6H4V+J+E1xwHEc5yD1yIkwbPB979CE3rtY6cGhD3AFDiPy9JquTHTbTElwQyM1PB+Lc5+oDjaIsyopcQAcR9YCTwJMRhwA3/cOYdgQR123Ylbd8bcSFGdr4HvvXwqCeaL6ZUNarU6H4dWkxAkHyrNA9gIuyt7JiNMoksKeuolJ3/FSpa2VAkVq2Bz43gdxtToDPAwMqcjKJCOn7gmyCJgPRDiyswl7740r28IULG6VQEYNGwPf++hSENwbp9US4JyKtKfD8M+k+x01uglwVaTsd2V+nOo6Qbbze1UqgKNGu5MXSIlQXoiG3QNxtToJPAp8qyLL02F4uSWdrcjqevXWIwmE42EAcWR902W+OFDZh7LJGM3n/M5CVJNfDM57He/uuicW53Hg69iQr9SrTTnnOPI5sN/Pes8kpNGS+v4w1LTZw5DWPy5qOoJUORtXkC6AfD6jHb1vzRFjvmioVitGxYl3Jh9H2+kEg6gt7k+aHmf0xhrNm7QSfQpcU8N3DePDmTGRc7VhTpsp4AO1qCYf/1eH1QkLlMtmf9bIPDKmlI96zj/E+axSTTk1PQA8BLonn89cacG763SsMalRIwi6LsRN4OmGatVx3XPKVdcxOh+jR4CVKBcM+nKLNvd4sVQZBkZEdHfkOm/nMnceQAvVquPW9HWFjXFazUhUoHh8ONXQ57Snw/CPsL/cIyJPYXQJ8CDKHES+imq6Np/rqrVIoAU3/FF2uzWdB7x5x3QZMS+pyGstSbFbDJ7L02F4OSxVtopIXzwdP6bwA8pmo9GKfM77dbq8Qut+N16P0DPZdVOTiJybBs9CoSpCdBycdwCMMYtzftf5u+SnqVb4VmoC4swdPc9pGDyvAuRyGQUuFkuVupHfPXHuXhUT1Z2tGjynOt5M57PjCqQi24HepI8smvCaU7ee0ShN4NnTt2mCwymnWHyGPN4xaW3aFIqkR109LDB6jjOssF+NvDGuQDV5lZTOFNgc+5FROIXKs1gsFsu/kL8BqNMNd1i/mH0AAAAASUVORK5CYII=",m1d1:"iVBORw0KGgoAAAANSUhEUgAAAEgAAAA6CAYAAAATBx+NAAABhGlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TRZFKh3YQcchQnSz4hegmVSyChdJWaNXB5NIvaNKQpLg4Cq4FBz8Wqw4uzro6uAqC4AeIo5OToouU+L+k0CLGg+N+vLv3uHsHCI0KU82uMUDVLCMVj4nZ3KrY8wo/gghhHLMSM/VEejEDz/F1Dx9f76I8y/vcn6NfyZsM8InEc0w3LOIN4ulNS+e8TxxmJUkhPiceNeiCxI9cl11+41x0WOCZYSOTmicOE4vFDpY7mJUMlXiKOKKoGuULWZcVzluc1UqNte7JXxjIaytprtMcQhxLSCAJETJqKKMCC1FaNVJMpGg/5uEfdPxJcsnkKoORYwFVqJAcP/gf/O7WLExOuEmBGND9Ytsfw0DPLtCs2/b3sW03TwD/M3Cltf3VBjDzSXq9rUWOgOA2cHHd1uQ94HIHGHjSJUNyJD9NoVAA3s/om3JA6BboW3N7a+3j9AHIUFfLN8DBITBSpOx1j3f3dvb275lWfz/0MXLb05vHJQAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAWJQAAFiUBSVIk8AAAAAd0SU1FB+YDDxQECoycHw8AAAU6SURBVHja7ZhbiJRlGICf95/d1jSVf6W6CqO2CyuQstB2dbcZd5x/RkPIw4WEgQaBJUZSXVUXXuRdtR2o0KCilBIjqt3PPQ27rocUjUJW0F3DIkhClvWEuvN/bxf7r07rnndmifieq2HmP83zv997+MDhcDgcDofD4XA4HA6Hw+FwOBwOh8PhcDgcDofD4XD8X5HJnNyQzZbGcmxRdDNwGyKv2hi70/F431T/kYbmbGkMrVBkNaprgLnRTydVtU08+RSPs6lE4urAOT3JZKnf1NRXFEENjS3iefItyspBV/zhurDyqaUJe+NBgmCWqG5Tka2+MblCimlszsYsVIvqV8BdgDfMoSHK0T9mxqqee6LGXli27H4rsldUq2c3NvYOd/2SiT6YJ1KOkrzlByVepvjA+UjODFFtB+aLKsCWQgpS1V0Ca25K0EaEParS2f/CdAEqKwTuVSvLIzkVVuQwMEdF2nuSyceGi6SSSTzbNGD6UN+rUhrJmS6qbcB84BcVeb2QcvY1tR4AKgFV2OmJbF+WTHQPOuwAUPfeO22y+aUajeR0AHOA8yqyaqRlVlLgVBCq5fkglfgripw2YAFwTEVqfGMuFyTf7Gv2PM/bHckJsawLUomvRzpnkJy7gXMqstg3pmvElVJgOS8EqcTOniCYKaoH8uRUF0oOgOfJCuBpACzrUqPIAYhyzuE8OUt8Y7p2dLR5UyEoVMumIJX4uCcIZovq4bxlVeMbc6VQckxzyzSQHUAMZcc45BzLW1aLfWNOm9Zs+T1Xw/31Ta2lxRQUqmVjkEp8ElWrQ8CDQGf0li4Xcg0LMhcoB0I82TZGOceB2UCviiz0jelqaMuWidWfUBbFoKJYgqxa1gepxGc9QXBHtKzmASdVpNI35mKh+x21ugGIqUhLqjb++yhyKqzIUWAWcEFFFvjGdAOka+LX1PIb4KnVNYUXpIQoL4bXY7uiatUOPAycUJFFvjG9RelsRWr6q7fuGYOcg4AP9KjIowNy8sLxGwDxZPWkq9i+5tadKBus1Uw6tbQhzMk5i/dR1Yfbb4/kPAL8HCXkS/3VpiXteVIPfJlKJp4pkKN5/e+HzlHkdAB3An9H0dw9RHR0av/HuZOOIFWORRWkFiCTiWtV3VszxNqOvGq1eEBO9GYyUbQdLGAQlUYjQN8okTNQraqGK+V68xqTT9JK+B1wVS2n8saHQ4Mi50renFYmkAJyYU4+n4p5LErIR/IiZ4lvzOlJtRRjPTCdTP6poX1oUCkfyDn/kvN9a7bEy+ku4AHQ9zOZ+KUpknM8L+dUjkGOjnbdcXXSQVB7JmoCD+ZVq6obOaclG/OslmN1D7AE5YxFXymKEeXd+vrsk5lM/FpenzNQrR4fKuc0ZLNeLKdvKqyPltVtBRUUjQ/78/qcSt+YC6axZa2IrMLqPOA+lBmIHAlzuiKTrs0VQU63WlkeyRkYPAf6nAVDyQHw+uzLKvLGeG5VMg45gwfPJb4xF01T6yaBOiAWxewJUd62hF9k0rV9RZBzSq3EgyDeM8TguXA4OVGPsHa8tysZR+TcMng2NGRFCH8E7wMAa21FOlXbXcxcE+akMpOJXxlm8OyebM4Zt6CoWrVHkXMsPyGn03EFzu5rau1P5EWWE7UXV/IGzzn5g2cx7jeqIFHdVqzBcyL0JJOlVmTvoMFzrHJswcu8imwF6gq9ZTFR/KamPhWpBn6NRpqusaevoRtWVcyEIyjaQx5tmzQ3pZKM6R1pm3RYQTl5jRItE9gY5SOrsB+VZ3E4HI7/IP8AYhKj4ilxXxsAAAAASUVORK5CYII=",m1d2:"",m1d3:"",m2d0:"",m2d1:"",m2d2:"",m2d3:",",m3d0:"",m3d2:"",m3d3:"",msd0:"iVBORw0KGgoAAAANSUhEUgAAAEgAAAA6CAYAAAATBx+NAAABhGlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TRZFKh3YQcchQnSz4hegmVSyChdJWaNXB5NIvaNKQpLg4Cq4FBz8Wqw4uzro6uAqC4AeIo5OToouU+L+k0CLGg+N+vLv3uHsHCI0KU82uMUDVLCMVj4nZ3KrY8wo/gghhHLMSM/VEejEDz/F1Dx9f76I8y/vcn6NfyZsM8InEc0w3LOIN4ulNS+e8TxxmJUkhPiceNeiCxI9cl11+41x0WOCZYSOTmicOE4vFDpY7mJUMlXiKOKKoGuULWZcVzluc1UqNte7JXxjIaytprtMcQhxLSCAJETJqKKMCC1FaNVJMpGg/5uEfdPxJcsnkKoORYwFVqJAcP/gf/O7WLExOuEmBGND9Ytsfw0DPLtCs2/b3sW03TwD/M3Cltf3VBjDzSXq9rUWOgOA2cHHd1uQ94HIHGHjSJUNyJD9NoVAA3s/om3JA6BboW3N7a+3j9AHIUFfLN8DBITBSpOx1j3f3dvb275lWfz/0MXLb05vHJQAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAWJQAAFiUBSVIk8AAAAAd0SU1FB+YDDxUIG0tbGsYAAAWhSURBVHja7ZhtbFRVGsd/z70znbZAp51WFORFg1HXyJou0SASXFrLaMAVjW0i6yoh8GX9YvYDLrtRd91EjZvdVFYJ7rLrO2qXsGQjaUvbQSVVdEkMUAoa2axdaHkrnSm0nZd777MfOtWu4aVMZ1qt55dMcu7Mec7c+7/P+Z/zHDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAYR2TUA8QeFtVOARdfQY86gU91IglkjSZ4afcj04AVQC2wHvQn1SlKJ5JAvkwD/7j3nhsO9HfW2FOcpQ56PYglyaKbimPhH9buLfjHozdta/v+CqSlsu9IasFJv7tKcWYOfe25/oVdPrnKDTnHVvava3+l8BlvrB6kvnmn30avUeR+VKuB2emfDqrq+2LJ3xC+DFdWxHPuQRKtLFBYCzxxjmnqgfUUMuM5gi8P5FqYHc07bQ8WiepmYOoFbMMFTmOxGk/eDVct9nKWQQo2EDjPzVjgBdD/2mOROar6lkD1VyKo7kDYoirtg29T56GyTIQK4DI8tgq6FajJqQeNSMYc09gUaQUWAKrwV0vk2SVVFYe/0a0VWF+/o2WWiDwusFqhurEp0hquqrhtHAXKod80NluWZb2dFsfFY8Wd4Yq6C8XctaSyA1jT2BhpwmIzsGBHU6QOkQeW3LHYzckyP257E0uWAfelHW9F+CLiDCccrqjDY0U666oVb1HO9kHjQUNzSz7IJsBG2XQp4gwXSeGFQSeQzdubIv4JI5Ags4EQ4GLJ70bhkevTK9tUH1wzDgLlxqTV01WArSIt4TsWd2Q6zp1VlV+oEgEs9bQ6Y5N+uu2+glMFzowtof4pHRI4guafhqheWAFRKFS6q31YAyFkYCZwBjhCcUv/qDJI5PbBf9AtWUjHvwNVYsn9wFMZZVDS78xM+Jy1LrwD3nJwgnM8dWxIplP0HBsyK4F1tUPe2WLs5L3AO8CvgVlZSKIfpPOzPQuF6NAYszOeYrtmf97/cdmJrlPiFUHqR6X0lRwORRIhlePA8W+I5AJd4HZRtD5RVvh5SAInbkG0COQoSF8WBPKnS4BUFkwgNXzMjAT67cFDp6ui3r8mgyvoreWuOx0gRWg7BP4AHAYSQBz4EgLPI6X1AOWxaZdbiWA5KikI7kKuOznhitWF5fT/8njqUCrQ+zHJKQvabevBpd23R7eX1O0juvwtSLQDJenuMcjbS7Du6G3dP557QOwHPfWm2YHeVsT/mZv/Yjybfj0WY4xoJ72nrKPz1uQVr+1myrWdwtKKeAHPHbj31bXB4EfItobhfVcqcn3b8vn74vGVrZPsZRaTuot9Z14J+BqOdWb35W5vbIokgZSI1rq29ae7Fl+4AK3fudOyHX1S4aH0tMrLikDNdqzv9f3lkb0z8t+IiT7QY8vy3aF4mcTONF4RrTx5As4IeNOh6M0YZXeHEuG4P7UIv3cSp+yNOT3T3/tk6p7+LGf/ZV8XrFJrOxo830r0lZ+kvF+oyBM5OQ/62dVLei2vb2OhdyhWnx+/2yM1D3RRF8SGzLoDLsdOlWydzECh7eyfXnD0nz19c1/7xF/cl2uvUAhfTCBEai513JFvFCf/Shd6yehDqf5N0+TKx6Bw0yRoLwVb4GZgPpAneb1t5PPydc6162qd6MaVxKOUPK7fBj/NxLcuqZr/oPj3+gEkZ8V+3o5Y//5p0v3LcUsqG2zrpcRglydxfU34pddWf6Im71gKXuS7TEbHHR3BDQ5w9s9w9saeiv8kYcgcv9DCPZ0Ae2jO1T17Yxk76lqsTcQZlrfOGHjNrnPXaDSNIPbDc59K0pDLYlXO084NrtQoNAID6U9MYYN68puLCuTIYzo45+Pp2D6FBlQeHsnDZUa0cj7Qkr6qpLhlNxOIbBy5nkoXo0NtjED/n4OHUdak2x6G7xf/A9MKHm95X8D1AAAAAElFTkSuQmCC",msd2:""}},9671:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getPresets=void 0;const i=a(8049);t.getPresets=function(){const e=[{category:"Voice Control",name:"Self Mute",type:"button",style:{bgcolor:(0,i.combineRgb)(0,0,0),color:(0,i.combineRgb)(255,255,255),text:"Self\\nMute",size:"18"},steps:[{down:[{actionId:"selfMute",options:{type:"Toggle"}}],up:[]}],feedbacks:[{feedbackId:"selfMute",options:{},style:{color:(0,i.combineRgb)(255,255,255),bgcolor:(0,i.combineRgb)(255,0,0)}}]},{category:"Voice Control",name:"Self Deafen",type:"button",style:{bgcolor:(0,i.combineRgb)(0,0,0),color:(0,i.combineRgb)(255,255,255),text:"Self\\nDeafen",size:"18"},steps:[{down:[{actionId:"selfDeafen",options:{type:"Toggle"}}],up:[]}],feedbacks:[{feedbackId:"selfDeaf",options:{},style:{color:(0,i.combineRgb)(255,255,255),bgcolor:(0,i.combineRgb)(255,0,0)}}]},{category:"Voice Control",name:"Self Increase Input Volume",type:"button",style:{bgcolor:(0,i.combineRgb)(0,0,0),color:(0,i.combineRgb)(255,255,255),text:"Self\\nIn Vol\\n+10",size:"18"},steps:[{down:[{actionId:"selfInputVolume",options:{type:"Increase",volume:10}}],up:[]}],feedbacks:[]},{category:"Voice Control",name:"Self Decrease Input Volume",type:"button",style:{bgcolor:(0,i.combineRgb)(0,0,0),color:(0,i.combineRgb)(255,255,255),text:"Self\\nIn Vol\\n-10",size:"18"},steps:[{down:[{actionId:"selfInputVolume",options:{type:"Decrease",volume:10}}],up:[]}],feedbacks:[]},{category:"Voice Control",name:"Self Increase Input Volume",type:"button",style:{bgcolor:(0,i.combineRgb)(0,0,0),color:(0,i.combineRgb)(255,255,255),text:"Self\\nOut Vol\\n+10",size:"18"},steps:[{down:[{actionId:"selfOutputVolume",options:{type:"Increase",volume:10}}],up:[]}],feedbacks:[]},{category:"Voice Control",name:"Self Decrease Input Volume",type:"button",style:{bgcolor:(0,i.combineRgb)(0,0,0),color:(0,i.combineRgb)(255,255,255),text:"Self\\nOut Vol\\n-10",size:"18"},steps:[{down:[{actionId:"selfOutputVolume",options:{type:"Decrease",volume:10}}],up:[]}],feedbacks:[]},{category:"Voice Control",name:"Selected User Mute",type:"button",style:{bgcolor:(0,i.combineRgb)(0,0,0),color:(0,i.combineRgb)(255,255,255),text:"Toggle\\nUser\\nMute",size:"18"},steps:[{down:[{actionId:"otherMute",options:{type:"Toggle",user:"$(label}:voice_user_selected_id)"}}],up:[]}],feedbacks:[{feedbackId:"otherMute",options:{user:""},style:{color:(0,i.combineRgb)(255,255,255),bgcolor:(0,i.combineRgb)(255,0,0)}}]},{category:"Voice Control",name:"Increase Selected User Volume",type:"button",style:{bgcolor:(0,i.combineRgb)(0,0,0),color:(0,i.combineRgb)(255,255,255),text:"Vol\\n+10",size:"18"},steps:[{down:[{actionId:"otherVolume",options:{type:"Increase",volume:10,user:"$(label}:voice_user_selected_id)"}}],up:[]}],feedbacks:[]},{category:"Voice Control",name:"Decrease Selected User Volume",type:"button",style:{bgcolor:(0,i.combineRgb)(0,0,0),color:(0,i.combineRgb)(255,255,255),text:"Vol\\n-10",size:"18"},steps:[{down:[{actionId:"otherVolume",options:{type:"Decrease",volume:10,user:"$(label}:voice_user_selected_id)"}}],up:[]}],feedbacks:[]},{category:"Voice Status & User Selection",name:"Mic Volume",type:"button",style:{bgcolor:(0,i.combineRgb)(0,0,0),color:(0,i.combineRgb)(255,255,255),text:"Mic\\n$(label:voice_self_input_volume)",size:"18"},steps:[{down:[],up:[]}],feedbacks:[]},{category:"Voice Status & User Selection",name:"Headset Volume",type:"button",style:{bgcolor:(0,i.combineRgb)(0,0,0),color:(0,i.combineRgb)(255,255,255),text:"Headset\\n$(label:voice_self_output_volume)",size:"18"},steps:[{down:[],up:[]}],feedbacks:[]},{category:"Voice Status & User Selection",name:"Selected User",type:"button",style:{bgcolor:(0,i.combineRgb)(0,0,0),color:(0,i.combineRgb)(255,255,255),text:"User\\n$(label:voice_user_selected_nick)",size:"18"},steps:[{down:[],up:[]}],feedbacks:[]},{category:"Voice Status & User Selection",name:"Selected User Volume",type:"button",style:{bgcolor:(0,i.combineRgb)(0,0,0),color:(0,i.combineRgb)(255,255,255),text:"Vol\\n$(label:voice_user_selected_volume)",size:"18"},steps:[{down:[],up:[]}],feedbacks:[]},{category:"Discord Status",name:"Voice Ping",type:"button",style:{bgcolor:(0,i.combineRgb)(0,0,0),color:(0,i.combineRgb)(255,255,255),text:"Ping\\n$(label:voice_connection_ping)",size:"18"},steps:[{down:[],up:[]}],feedbacks:[]},{category:"Discord Status",name:"Voice Avg, Min, Max, Ping",type:"button",style:{bgcolor:(0,i.combineRgb)(0,0,0),color:(0,i.combineRgb)(255,255,255),text:"Avg: $(label:voice_connection_ping_avg)\\nMin: $(label:voice_connection_ping_min)\\nMax: $(label:voice_connection_ping_max)",size:"18"},steps:[{down:[],up:[]}],feedbacks:[]},{category:"Discord Status",name:"Voice Connection",type:"button",style:{bgcolor:(0,i.combineRgb)(0,0,0),color:(0,i.combineRgb)(255,255,255),text:"$(label:voice_connection_status)",size:"18"},steps:[{down:[],up:[]}],feedbacks:[]}];for(let t=0;t<10;t++)e.push({category:"Voice Status & User Selection",name:`User ${t}`,type:"button",style:{alignment:"center:top",bgcolor:(0,i.combineRgb)(0,0,0),color:(0,i.combineRgb)(255,255,255),pngalignment:"center:bottom",text:`$(label:voice_user_${t}_nick)`,size:"18"},steps:[{down:[{actionId:"selectUser",options:{user:`${t}`}}],up:[]}],feedbacks:[{feedbackId:"voiceStyling",options:{user:`${t}`}},{feedbackId:"selectedUser",options:{user:`${t}`},style:{color:(0,i.combineRgb)(255,255,255),bgcolor:(0,i.combineRgb)(0,100,0)}}]});return e}},2183:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getUpgrades=void 0,t.getUpgrades=()=>[]},2181:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Variables=void 0,t.Variables=class{constructor(e){this.set=e=>{var t;const a={};for(const i in e)a[i]=null===(t=e[i])||void 0===t?void 0:t.toString();this.instance.setVariableValues(a)},this.updateDefinitions=()=>{const e=new Set([]);e.add({name:"Voice Connection Status",variableId:"voice_connection_status"}),e.add({name:"Voice Connection Hostname",variableId:"voice_connection_hostname"}),e.add({name:"Voice Connection Ping",variableId:"voice_connection_ping"}),e.add({name:"Voice Connection Ping Avg",variableId:"voice_connection_ping_avg"}),e.add({name:"Voice Connection Ping Min",variableId:"voice_connection_ping_min"}),e.add({name:"Voice Connection Ping Max",variableId:"voice_connection_ping_max"}),e.add({name:"Voice Self Input Volume",variableId:"voice_self_input_volume"}),e.add({name:"Voice Self Output Volume",variableId:"voice_self_output_volume"});for(let t=0;t<this.instance.clientData.sortedVoiceUsers().length;t++)e.add({name:`Voice User ${t} Nick`,variableId:`voice_user_${t}_nick`});e.add({name:"Voice User Selected ID",variableId:"voice_user_selected_id"}),e.add({name:"Voice User Selected Nick",variableId:"voice_user_selected_nick"}),e.add({name:"Voice User Selected Volume",variableId:"voice_user_selected_volume"}),this.instance.setVariableDefinitions([...e])},this.updateVariables=()=>{var e,t,a;const i={};if(this.instance.clientData){i.voice_connection_status=this.instance.clientData.voiceStatus.state,i.voice_connection_hostname=this.instance.clientData.voiceStatus.hostname||"",i.voice_connection_ping=this.instance.clientData.voiceStatus.last_ping||"",i.voice_connection_ping_avg=this.instance.clientData.voiceStatus.last_ping||"",i.voice_connection_ping_min=this.instance.clientData.voiceStatus.pings.length>0?Math.min(...this.instance.clientData.voiceStatus.pings.map((e=>e.value))):"",i.voice_connection_ping_max=this.instance.clientData.voiceStatus.pings.length>0?Math.max(...this.instance.clientData.voiceStatus.pings.map((e=>e.value))):"",i.voice_self_input_volume=null===(e=this.instance.clientData.userVoiceSettings)||void 0===e?void 0:e.input.volume.toFixed(2),i.voice_self_output_volume=null===(t=this.instance.clientData.userVoiceSettings)||void 0===t?void 0:t.output.volume.toFixed(2);for(let e=0;e<200;e++)i[`voice_user_${e}_nick`]=(null===(a=this.instance.clientData.sortedVoiceUsers()[e])||void 0===a?void 0:a.nick)||"";i.voice_user_selected_id=this.instance.clientData.selectedUser;const p=this.instance.clientData.sortedVoiceUsers().find((e=>e.user.id===this.instance.clientData.selectedUser));i.voice_user_selected_nick=(null==p?void 0:p.nick)||"",i.voice_user_selected_volume=(null==p?void 0:p.volume.toFixed(2))||""}this.set(i),this.updateDefinitions()},this.instance=e}}},7056:(e,t,a)=>{"use strict";const i=a(4063);i.code='require("ajv/dist/runtime/equal").default',t.Z=i},1460:(e,t,a)=>{"use strict";a.r(t),a.d(t,{__assign:()=>n,__asyncDelegator:()=>_,__asyncGenerator:()=>v,__asyncValues:()=>y,__await:()=>f,__awaiter:()=>g,__classPrivateFieldGet:()=>T,__classPrivateFieldIn:()=>D,__classPrivateFieldSet:()=>N,__createBinding:()=>A,__decorate:()=>d,__exportStar:()=>c,__extends:()=>p,__generator:()=>l,__importDefault:()=>E,__importStar:()=>S,__makeTemplateObject:()=>b,__metadata:()=>o,__param:()=>r,__read:()=>C,__rest:()=>s,__spread:()=>m,__spreadArray:()=>h,__spreadArrays:()=>u,__values:()=>I});var i=function(e,t){return i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])},i(e,t)};function p(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function a(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}var n=function(){return n=Object.assign||function(e){for(var t,a=1,i=arguments.length;a<i;a++)for(var p in t=arguments[a])Object.prototype.hasOwnProperty.call(t,p)&&(e[p]=t[p]);return e},n.apply(this,arguments)};function s(e,t){var a={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.indexOf(i)<0&&(a[i]=e[i]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var p=0;for(i=Object.getOwnPropertySymbols(e);p<i.length;p++)t.indexOf(i[p])<0&&Object.prototype.propertyIsEnumerable.call(e,i[p])&&(a[i[p]]=e[i[p]])}return a}function d(e,t,a,i){var p,n=arguments.length,s=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,a):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,a,i);else for(var d=e.length-1;d>=0;d--)(p=e[d])&&(s=(n<3?p(s):n>3?p(t,a,s):p(t,a))||s);return n>3&&s&&Object.defineProperty(t,a,s),s}function r(e,t){return function(a,i){t(a,i,e)}}function o(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function g(e,t,a,i){return new(a||(a=Promise))((function(p,n){function s(e){try{r(i.next(e))}catch(e){n(e)}}function d(e){try{r(i.throw(e))}catch(e){n(e)}}function r(e){var t;e.done?p(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(s,d)}r((i=i.apply(e,t||[])).next())}))}function l(e,t){var a,i,p,n,s={label:0,sent:function(){if(1&p[0])throw p[1];return p[1]},trys:[],ops:[]};return n={next:d(0),throw:d(1),return:d(2)},"function"==typeof Symbol&&(n[Symbol.iterator]=function(){return this}),n;function d(d){return function(r){return function(d){if(a)throw new TypeError("Generator is already executing.");for(;n&&(n=0,d[0]&&(s=0)),s;)try{if(a=1,i&&(p=2&d[0]?i.return:d[0]?i.throw||((p=i.return)&&p.call(i),0):i.next)&&!(p=p.call(i,d[1])).done)return p;switch(i=0,p&&(d=[2&d[0],p.value]),d[0]){case 0:case 1:p=d;break;case 4:return s.label++,{value:d[1],done:!1};case 5:s.label++,i=d[1],d=[0];continue;case 7:d=s.ops.pop(),s.trys.pop();continue;default:if(!((p=(p=s.trys).length>0&&p[p.length-1])||6!==d[0]&&2!==d[0])){s=0;continue}if(3===d[0]&&(!p||d[1]>p[0]&&d[1]<p[3])){s.label=d[1];break}if(6===d[0]&&s.label<p[1]){s.label=p[1],p=d;break}if(p&&s.label<p[2]){s.label=p[2],s.ops.push(d);break}p[2]&&s.ops.pop(),s.trys.pop();continue}d=t.call(e,s)}catch(e){d=[6,e],i=0}finally{a=p=0}if(5&d[0])throw d[1];return{value:d[0]?d[1]:void 0,done:!0}}([d,r])}}}var A=Object.create?function(e,t,a,i){void 0===i&&(i=a);var p=Object.getOwnPropertyDescriptor(t,a);p&&!("get"in p?!t.__esModule:p.writable||p.configurable)||(p={enumerable:!0,get:function(){return t[a]}}),Object.defineProperty(e,i,p)}:function(e,t,a,i){void 0===i&&(i=a),e[i]=t[a]};function c(e,t){for(var a in e)"default"===a||Object.prototype.hasOwnProperty.call(t,a)||A(t,e,a)}function I(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],i=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&i>=e.length&&(e=void 0),{value:e&&e[i++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function C(e,t){var a="function"==typeof Symbol&&e[Symbol.iterator];if(!a)return e;var i,p,n=a.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(i=n.next()).done;)s.push(i.value)}catch(e){p={error:e}}finally{try{i&&!i.done&&(a=n.return)&&a.call(n)}finally{if(p)throw p.error}}return s}function m(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(C(arguments[t]));return e}function u(){for(var e=0,t=0,a=arguments.length;t<a;t++)e+=arguments[t].length;var i=Array(e),p=0;for(t=0;t<a;t++)for(var n=arguments[t],s=0,d=n.length;s<d;s++,p++)i[p]=n[s];return i}function h(e,t,a){if(a||2===arguments.length)for(var i,p=0,n=t.length;p<n;p++)!i&&p in t||(i||(i=Array.prototype.slice.call(t,0,p)),i[p]=t[p]);return e.concat(i||Array.prototype.slice.call(t))}function f(e){return this instanceof f?(this.v=e,this):new f(e)}function v(e,t,a){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,p=a.apply(e,t||[]),n=[];return i={},s("next"),s("throw"),s("return"),i[Symbol.asyncIterator]=function(){return this},i;function s(e){p[e]&&(i[e]=function(t){return new Promise((function(a,i){n.push([e,t,a,i])>1||d(e,t)}))})}function d(e,t){try{(a=p[e](t)).value instanceof f?Promise.resolve(a.value.v).then(r,o):g(n[0][2],a)}catch(e){g(n[0][3],e)}var a}function r(e){d("next",e)}function o(e){d("throw",e)}function g(e,t){e(t),n.shift(),n.length&&d(n[0][0],n[0][1])}}function _(e){var t,a;return t={},i("next"),i("throw",(function(e){throw e})),i("return"),t[Symbol.iterator]=function(){return this},t;function i(i,p){t[i]=e[i]?function(t){return(a=!a)?{value:f(e[i](t)),done:"return"===i}:p?p(t):t}:p}}function y(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,a=e[Symbol.asyncIterator];return a?a.call(e):(e=I(e),t={},i("next"),i("throw"),i("return"),t[Symbol.asyncIterator]=function(){return this},t);function i(a){t[a]=e[a]&&function(t){return new Promise((function(i,p){!function(e,t,a,i){Promise.resolve(i).then((function(t){e({value:t,done:a})}),t)}(i,p,(t=e[a](t)).done,t.value)}))}}}function b(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}var w=Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t};function S(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)"default"!==a&&Object.prototype.hasOwnProperty.call(e,a)&&A(t,e,a);return w(t,e),t}function E(e){return e&&e.__esModule?e:{default:e}}function T(e,t,a,i){if("a"===a&&!i)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!i:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===a?i:"a"===a?i.call(e):i?i.value:t.get(e)}function N(e,t,a,i,p){if("m"===i)throw new TypeError("Private method is not writable");if("a"===i&&!p)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!p:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===i?p.call(e,a):p?p.value=a:t.set(e,a),a}function D(e,t){if(null===t||"object"!=typeof t&&"function"!=typeof t)throw new TypeError("Cannot use 'in' operator on non-object");return"function"==typeof e?t===e:e.has(t)}},5659:(e,t,a)=>{"use strict";a.d(t,{Gd:()=>I,Xb:()=>l,cu:()=>A,j0:()=>u,pj:()=>c,vi:()=>m});var i=a(2844),p=a(1170),n=a(2343),s=a(1235),d=a(2176),r=a(350),o=a(9015);const g=100;class l{__init(){this._stack=[{}]}constructor(e,t=new r.s,a=4){this._version=a,l.prototype.__init.call(this),this.getStackTop().scope=t,e&&this.bindClient(e)}isOlderThan(e){return this._version<e}bindClient(e){this.getStackTop().client=e,e&&e.setupIntegrations&&e.setupIntegrations()}pushScope(){const e=r.s.clone(this.getScope());return this.getStack().push({client:this.getClient(),scope:e}),e}popScope(){return!(this.getStack().length<=1||!this.getStack().pop())}withScope(e){const t=this.pushScope();try{e(t)}finally{this.popScope()}}getClient(){return this.getStackTop().client}getScope(){return this.getStackTop().scope}getStack(){return this._stack}getStackTop(){return this._stack[this._stack.length-1]}captureException(e,t){const a=this._lastEventId=t&&t.event_id?t.event_id:(0,i.DM)(),p=new Error("Sentry syntheticException");return this._withClient(((i,n)=>{i.captureException(e,{originalException:e,syntheticException:p,...t,event_id:a},n)})),a}captureMessage(e,t,a){const p=this._lastEventId=a&&a.event_id?a.event_id:(0,i.DM)(),n=new Error(e);return this._withClient(((i,s)=>{i.captureMessage(e,t,{originalException:e,syntheticException:n,...a,event_id:p},s)})),p}captureEvent(e,t){const a=t&&t.event_id?t.event_id:(0,i.DM)();return e.type||(this._lastEventId=a),this._withClient(((i,p)=>{i.captureEvent(e,{...t,event_id:a},p)})),a}lastEventId(){return this._lastEventId}addBreadcrumb(e,t){const{scope:a,client:i}=this.getStackTop();if(!a||!i)return;const{beforeBreadcrumb:s=null,maxBreadcrumbs:d=g}=i.getOptions&&i.getOptions()||{};if(d<=0)return;const r={timestamp:(0,p.yW)(),...e},o=s?(0,n.Cf)((()=>s(r,t))):r;null!==o&&a.addBreadcrumb(o,d)}setUser(e){const t=this.getScope();t&&t.setUser(e)}setTags(e){const t=this.getScope();t&&t.setTags(e)}setExtras(e){const t=this.getScope();t&&t.setExtras(e)}setTag(e,t){const a=this.getScope();a&&a.setTag(e,t)}setExtra(e,t){const a=this.getScope();a&&a.setExtra(e,t)}setContext(e,t){const a=this.getScope();a&&a.setContext(e,t)}configureScope(e){const{scope:t,client:a}=this.getStackTop();t&&a&&e(t)}run(e){const t=c(this);try{e(this)}finally{c(t)}}getIntegration(e){const t=this.getClient();if(!t)return null;try{return t.getIntegration(e)}catch(t){return("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&n.kg.warn(`Cannot retrieve integration ${e.id} from the current Hub`),null}}startTransaction(e,t){return this._callExtensionMethod("startTransaction",e,t)}traceHeaders(){return this._callExtensionMethod("traceHeaders")}captureSession(e=!1){if(e)return this.endSession();this._sendSessionUpdate()}endSession(){const e=this.getStackTop(),t=e&&e.scope,a=t&&t.getSession();a&&(0,o.RJ)(a),this._sendSessionUpdate(),t&&t.setSession()}startSession(e){const{scope:t,client:a}=this.getStackTop(),{release:i,environment:p}=a&&a.getOptions()||{},{userAgent:n}=s.n2.navigator||{},d=(0,o.Hv)({release:i,environment:p,...t&&{user:t.getUser()},...n&&{userAgent:n},...e});if(t){const e=t.getSession&&t.getSession();e&&"ok"===e.status&&(0,o.CT)(e,{status:"exited"}),this.endSession(),t.setSession(d)}return d}shouldSendDefaultPii(){const e=this.getClient(),t=e&&e.getOptions();return Boolean(t&&t.sendDefaultPii)}_sendSessionUpdate(){const{scope:e,client:t}=this.getStackTop();if(!e)return;const a=e.getSession();a&&t&&t.captureSession&&t.captureSession(a)}_withClient(e){const{scope:t,client:a}=this.getStackTop();a&&e(a,t)}_callExtensionMethod(e,...t){const a=A().__SENTRY__;if(a&&a.extensions&&"function"==typeof a.extensions[e])return a.extensions[e].apply(this,t);("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&n.kg.warn(`Extension method ${e} couldn't be found, doing nothing.`)}}function A(){return s.n2.__SENTRY__=s.n2.__SENTRY__||{extensions:{},hub:void 0},s.n2}function c(e){const t=A(),a=m(t);return u(t,e),a}function I(){const e=A();return C(e)&&!m(e).isOlderThan(4)||u(e,new l),(0,d.KV)()?function(e){try{const t=A().__SENTRY__,a=t&&t.extensions&&t.extensions.domain&&t.extensions.domain.active;if(!a)return m(e);if(!C(a)||m(a).isOlderThan(4)){const t=m(e).getStackTop();u(a,new l(t.client,r.s.clone(t.scope)))}return m(a)}catch(t){return m(e)}}(e):m(e)}function C(e){return!!(e&&e.__SENTRY__&&e.__SENTRY__.hub)}function m(e){return(0,s.YO)("hub",(()=>new l),e)}function u(e,t){return!!e&&((e.__SENTRY__=e.__SENTRY__||{}).hub=t,!0)}},350:(e,t,a)=>{"use strict";a.d(t,{c:()=>A,s:()=>g});var i=a(7597),p=a(1170),n=a(6893),s=a(2343),d=a(2844),r=a(1235),o=a(9015);class g{constructor(){this._notifyingListeners=!1,this._scopeListeners=[],this._eventProcessors=[],this._breadcrumbs=[],this._attachments=[],this._user={},this._tags={},this._extra={},this._contexts={},this._sdkProcessingMetadata={}}static clone(e){const t=new g;return e&&(t._breadcrumbs=[...e._breadcrumbs],t._tags={...e._tags},t._extra={...e._extra},t._contexts={...e._contexts},t._user=e._user,t._level=e._level,t._span=e._span,t._session=e._session,t._transactionName=e._transactionName,t._fingerprint=e._fingerprint,t._eventProcessors=[...e._eventProcessors],t._requestSession=e._requestSession,t._attachments=[...e._attachments],t._sdkProcessingMetadata={...e._sdkProcessingMetadata}),t}addScopeListener(e){this._scopeListeners.push(e)}addEventProcessor(e){return this._eventProcessors.push(e),this}setUser(e){return this._user=e||{},this._session&&(0,o.CT)(this._session,{user:e}),this._notifyScopeListeners(),this}getUser(){return this._user}getRequestSession(){return this._requestSession}setRequestSession(e){return this._requestSession=e,this}setTags(e){return this._tags={...this._tags,...e},this._notifyScopeListeners(),this}setTag(e,t){return this._tags={...this._tags,[e]:t},this._notifyScopeListeners(),this}setExtras(e){return this._extra={...this._extra,...e},this._notifyScopeListeners(),this}setExtra(e,t){return this._extra={...this._extra,[e]:t},this._notifyScopeListeners(),this}setFingerprint(e){return this._fingerprint=e,this._notifyScopeListeners(),this}setLevel(e){return this._level=e,this._notifyScopeListeners(),this}setTransactionName(e){return this._transactionName=e,this._notifyScopeListeners(),this}setContext(e,t){return null===t?delete this._contexts[e]:this._contexts[e]=t,this._notifyScopeListeners(),this}setSpan(e){return this._span=e,this._notifyScopeListeners(),this}getSpan(){return this._span}getTransaction(){const e=this.getSpan();return e&&e.transaction}setSession(e){return e?this._session=e:delete this._session,this._notifyScopeListeners(),this}getSession(){return this._session}update(e){if(!e)return this;if("function"==typeof e){const t=e(this);return t instanceof g?t:this}return e instanceof g?(this._tags={...this._tags,...e._tags},this._extra={...this._extra,...e._extra},this._contexts={...this._contexts,...e._contexts},e._user&&Object.keys(e._user).length&&(this._user=e._user),e._level&&(this._level=e._level),e._fingerprint&&(this._fingerprint=e._fingerprint),e._requestSession&&(this._requestSession=e._requestSession)):(0,i.PO)(e)&&(this._tags={...this._tags,...e.tags},this._extra={...this._extra,...e.extra},this._contexts={...this._contexts,...e.contexts},e.user&&(this._user=e.user),e.level&&(this._level=e.level),e.fingerprint&&(this._fingerprint=e.fingerprint),e.requestSession&&(this._requestSession=e.requestSession)),this}clear(){return this._breadcrumbs=[],this._tags={},this._extra={},this._user={},this._contexts={},this._level=void 0,this._transactionName=void 0,this._fingerprint=void 0,this._requestSession=void 0,this._span=void 0,this._session=void 0,this._notifyScopeListeners(),this._attachments=[],this}addBreadcrumb(e,t){const a="number"==typeof t?t:100;if(a<=0)return this;const i={timestamp:(0,p.yW)(),...e};return this._breadcrumbs=[...this._breadcrumbs,i].slice(-a),this._notifyScopeListeners(),this}getLastBreadcrumb(){return this._breadcrumbs[this._breadcrumbs.length-1]}clearBreadcrumbs(){return this._breadcrumbs=[],this._notifyScopeListeners(),this}addAttachment(e){return this._attachments.push(e),this}getAttachments(){return this._attachments}clearAttachments(){return this._attachments=[],this}applyToEvent(e,t={}){if(this._extra&&Object.keys(this._extra).length&&(e.extra={...this._extra,...e.extra}),this._tags&&Object.keys(this._tags).length&&(e.tags={...this._tags,...e.tags}),this._user&&Object.keys(this._user).length&&(e.user={...this._user,...e.user}),this._contexts&&Object.keys(this._contexts).length&&(e.contexts={...this._contexts,...e.contexts}),this._level&&(e.level=this._level),this._transactionName&&(e.transaction=this._transactionName),this._span){e.contexts={trace:this._span.getTraceContext(),...e.contexts};const t=this._span.transaction&&this._span.transaction.name;t&&(e.tags={transaction:t,...e.tags})}return this._applyFingerprint(e),e.breadcrumbs=[...e.breadcrumbs||[],...this._breadcrumbs],e.breadcrumbs=e.breadcrumbs.length>0?e.breadcrumbs:void 0,e.sdkProcessingMetadata={...e.sdkProcessingMetadata,...this._sdkProcessingMetadata},this._notifyEventProcessors([...l(),...this._eventProcessors],e,t)}setSDKProcessingMetadata(e){return this._sdkProcessingMetadata={...this._sdkProcessingMetadata,...e},this}_notifyEventProcessors(e,t,a,p=0){return new n.cW(((n,d)=>{const r=e[p];if(null===t||"function"!=typeof r)n(t);else{const o=r({...t},a);("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&r.id&&null===o&&s.kg.log(`Event processor "${r.id}" dropped event`),(0,i.J8)(o)?o.then((t=>this._notifyEventProcessors(e,t,a,p+1).then(n))).then(null,d):this._notifyEventProcessors(e,o,a,p+1).then(n).then(null,d)}}))}_notifyScopeListeners(){this._notifyingListeners||(this._notifyingListeners=!0,this._scopeListeners.forEach((e=>{e(this)})),this._notifyingListeners=!1)}_applyFingerprint(e){e.fingerprint=e.fingerprint?(0,d.lE)(e.fingerprint):[],this._fingerprint&&(e.fingerprint=e.fingerprint.concat(this._fingerprint)),e.fingerprint&&!e.fingerprint.length&&delete e.fingerprint}}function l(){return(0,r.YO)("globalEventProcessors",(()=>[]))}function A(e){l().push(e)}},9015:(e,t,a)=>{"use strict";a.d(t,{CT:()=>d,Hv:()=>s,RJ:()=>r});var i=a(1170),p=a(2844),n=a(535);function s(e){const t=(0,i.ph)(),a={sid:(0,p.DM)(),init:!0,timestamp:t,started:t,duration:0,status:"ok",errors:0,ignoreDuration:!1,toJSON:()=>function(e){return(0,n.Jr)({sid:`${e.sid}`,init:e.init,started:new Date(1e3*e.started).toISOString(),timestamp:new Date(1e3*e.timestamp).toISOString(),status:e.status,errors:e.errors,did:"number"==typeof e.did||"string"==typeof e.did?`${e.did}`:void 0,duration:e.duration,attrs:{release:e.release,environment:e.environment,ip_address:e.ipAddress,user_agent:e.userAgent}})}(a)};return e&&d(a,e),a}function d(e,t={}){if(t.user&&(!e.ipAddress&&t.user.ip_address&&(e.ipAddress=t.user.ip_address),e.did||t.did||(e.did=t.user.id||t.user.email||t.user.username)),e.timestamp=t.timestamp||(0,i.ph)(),t.ignoreDuration&&(e.ignoreDuration=t.ignoreDuration),t.sid&&(e.sid=32===t.sid.length?t.sid:(0,p.DM)()),void 0!==t.init&&(e.init=t.init),!e.did&&t.did&&(e.did=`${t.did}`),"number"==typeof t.started&&(e.started=t.started),e.ignoreDuration)e.duration=void 0;else if("number"==typeof t.duration)e.duration=t.duration;else{const t=e.timestamp-e.started;e.duration=t>=0?t:0}t.release&&(e.release=t.release),t.environment&&(e.environment=t.environment),!e.ipAddress&&t.ipAddress&&(e.ipAddress=t.ipAddress),!e.userAgent&&t.userAgent&&(e.userAgent=t.userAgent),"number"==typeof t.errors&&(e.errors=t.errors),t.status&&(e.status=t.status)}function r(e,t){let a={};t?a={status:t}:"ok"===e.status&&(a={status:"exited"}),d(e,a)}},6453:(e,t,a)=>{"use strict";a.r(t),a.d(t,{DEFAULT_USER_INCLUDES:()=>st,Handlers:()=>n,Hub:()=>C.Xb,Integrations:()=>Pt,NodeClient:()=>ce,SDK_VERSION:()=>m,Scope:()=>K.s,addBreadcrumb:()=>_,addGlobalEventProcessor:()=>K.c,addRequestDataToEvent:()=>ot,captureEvent:()=>f,captureException:()=>u,captureMessage:()=>h,close:()=>St,configureScope:()=>v,createTransport:()=>Q,deepReadDirSync:()=>Dt,defaultIntegrations:()=>_t,defaultStackParser:()=>Nt,extractRequestData:()=>rt,flush:()=>wt,getCurrentHub:()=>C.Gd,getHubFromCarrier:()=>C.vi,getSentryRelease:()=>Tt,init:()=>yt,lastEventId:()=>bt,makeMain:()=>C.pj,makeNodeTransport:()=>ve,setContext:()=>y,setExtra:()=>w,setExtras:()=>b,setTag:()=>E,setTags:()=>S,setUser:()=>T,startTransaction:()=>D,withScope:()=>N});var i={};a.r(i),a.d(i,{FunctionToString:()=>r,InboundFilters:()=>c});var p={};a.r(p),a.d(p,{Console:()=>we,Context:()=>Qe,ContextLines:()=>Me,Http:()=>ke,LinkedErrors:()=>Fe,LocalVariables:()=>mt,Modules:()=>Je,OnUncaughtException:()=>Be,OnUnhandledRejection:()=>Ue,RequestData:()=>lt});var n={};a.r(n),a.d(n,{errorHandler:()=>Ut,extractRequestData:()=>Ot,parseRequest:()=>kt,requestHandler:()=>xt,tracingHandler:()=>Vt});var s=a(535);let d;class r{constructor(){r.prototype.__init.call(this)}static __initStatic(){this.id="FunctionToString"}__init(){this.name=r.id}setupOnce(){d=Function.prototype.toString,Function.prototype.toString=function(...e){const t=(0,s.HK)(this)||this;return d.apply(t,e)}}}r.__initStatic();var o=a(2343),g=a(2844),l=a(7321);const A=[/^Script error\.?$/,/^Javascript error: Script error\.? on line 0$/];class c{static __initStatic(){this.id="InboundFilters"}__init(){this.name=c.id}constructor(e={}){this._options=e,c.prototype.__init.call(this)}setupOnce(e,t){const a=e=>{const a=t();if(a){const t=a.getIntegration(c);if(t){const i=a.getClient(),p=i?i.getOptions():{},n=function(e={},t={}){return{allowUrls:[...e.allowUrls||[],...t.allowUrls||[]],denyUrls:[...e.denyUrls||[],...t.denyUrls||[]],ignoreErrors:[...e.ignoreErrors||[],...t.ignoreErrors||[],...A],ignoreInternal:void 0===e.ignoreInternal||e.ignoreInternal}}(t._options,p);return function(e,t){return t.ignoreInternal&&function(e){try{return"SentryError"===e.exception.values[0].type}catch(e){}return!1}(e)?(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.warn(`Event dropped due to being internal Sentry Error.\nEvent: ${(0,g.jH)(e)}`),!0):function(e,t){return!(!t||!t.length)&&function(e){if(e.message)return[e.message];if(e.exception)try{const{type:t="",value:a=""}=e.exception.values&&e.exception.values[0]||{};return[`${a}`,`${t}: ${a}`]}catch(t){return("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.error(`Cannot extract message for event ${(0,g.jH)(e)}`),[]}return[]}(e).some((e=>(0,l.U0)(e,t)))}(e,t.ignoreErrors)?(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.warn(`Event dropped due to being matched by \`ignoreErrors\` option.\nEvent: ${(0,g.jH)(e)}`),!0):function(e,t){if(!t||!t.length)return!1;const a=I(e);return!!a&&(0,l.U0)(a,t)}(e,t.denyUrls)?(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.warn(`Event dropped due to being matched by \`denyUrls\` option.\nEvent: ${(0,g.jH)(e)}.\nUrl: ${I(e)}`),!0):!function(e,t){if(!t||!t.length)return!0;const a=I(e);return!a||(0,l.U0)(a,t)}(e,t.allowUrls)&&(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.warn(`Event dropped due to not being matched by \`allowUrls\` option.\nEvent: ${(0,g.jH)(e)}.\nUrl: ${I(e)}`),!0)}(e,n)?null:e}}return e};a.id=this.name,e(a)}}function I(e){try{let t;try{t=e.exception.values[0].stacktrace.frames}catch(e){}return t?function(e=[]){for(let t=e.length-1;t>=0;t--){const a=e[t];if(a&&"<anonymous>"!==a.filename&&"[native code]"!==a.filename)return a.filename||null}return null}(t):null}catch(t){return("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.error(`Cannot extract url for event ${(0,g.jH)(e)}`),null}}c.__initStatic();var C=a(5659);const m="7.30.0";function u(e,t){return(0,C.Gd)().captureException(e,{captureContext:t})}function h(e,t){const a="string"==typeof t?t:void 0,i="string"!=typeof t?{captureContext:t}:void 0;return(0,C.Gd)().captureMessage(e,a,i)}function f(e,t){return(0,C.Gd)().captureEvent(e,t)}function v(e){(0,C.Gd)().configureScope(e)}function _(e){(0,C.Gd)().addBreadcrumb(e)}function y(e,t){(0,C.Gd)().setContext(e,t)}function b(e){(0,C.Gd)().setExtras(e)}function w(e,t){(0,C.Gd)().setExtra(e,t)}function S(e){(0,C.Gd)().setTags(e)}function E(e,t){(0,C.Gd)().setTag(e,t)}function T(e){(0,C.Gd)().setUser(e)}function N(e){(0,C.Gd)().withScope(e)}function D(e,t){return(0,C.Gd)().startTransaction({...e},t)}class R extends Error{constructor(e,t="warn"){super(e),this.message=e,this.name=new.target.prototype.constructor.name,Object.setPrototypeOf(this,new.target.prototype),this.logLevel=t}}var O=a(6893);const k=/^(?:(\w+):)\/\/(?:(\w+)(?::(\w+)?)?@)([\w.-]+)(?::(\d+))?\/(.+)/;function V(e,t=!1){const{host:a,path:i,pass:p,port:n,projectId:s,protocol:d,publicKey:r}=e;return`${d}://${r}${t&&p?`:${p}`:""}@${a}${n?`:${n}`:""}/${i?`${i}/`:i}${s}`}function x(e){return{protocol:e.protocol,publicKey:e.publicKey||"",pass:e.pass||"",host:e.host,port:e.port||"",path:e.path||"",projectId:e.projectId}}var B=a(7597),U=a(360);function P(e,t=1/0,a=1/0){try{return G("",e,t,a)}catch(e){return{ERROR:`**non-serializable** (${e})`}}}function L(e,t=3,a=102400){const i=P(e,t);return p=i,function(e){return~-encodeURI(e).split(/%..|./).length}(JSON.stringify(p))>a?L(e,t-1,a):i;var p}function G(e,t,a=1/0,i=1/0,p=function(){const e="function"==typeof WeakSet,t=e?new WeakSet:[];return[function(a){if(e)return!!t.has(a)||(t.add(a),!1);for(let e=0;e<t.length;e++)if(t[e]===a)return!0;return t.push(a),!1},function(a){if(e)t.delete(a);else for(let e=0;e<t.length;e++)if(t[e]===a){t.splice(e,1);break}}]}()){const[n,d]=p;if(null===t||["number","boolean","string"].includes(typeof t)&&!(0,B.i2)(t))return t;const r=function(e,t){try{return"domain"===e&&t&&"object"==typeof t&&t._events?"[Domain]":"domainEmitter"===e?"[DomainEmitter]":"undefined"!=typeof global&&t===global?"[Global]":"undefined"!=typeof window&&t===window?"[Window]":"undefined"!=typeof document&&t===document?"[Document]":(0,B.Cy)(t)?"[SyntheticEvent]":"number"==typeof t&&t!=t?"[NaN]":void 0===t?"[undefined]":"function"==typeof t?`[Function: ${(0,U.$P)(t)}]`:"symbol"==typeof t?`[${String(t)}]`:"bigint"==typeof t?`[BigInt: ${String(t)}]`:`[object ${Object.getPrototypeOf(t).constructor.name}]`}catch(e){return`**non-serializable** (${e})`}}(e,t);if(!r.startsWith("[object "))return r;if(t.__sentry_skip_normalization__)return t;if(0===a)return r.replace("object ","");if(n(t))return"[Circular ~]";const o=t;if(o&&"function"==typeof o.toJSON)try{return G("",o.toJSON(),a-1,i,p)}catch(e){}const g=Array.isArray(t)?[]:{};let l=0;const A=(0,s.Sh)(t);for(const e in A){if(!Object.prototype.hasOwnProperty.call(A,e))continue;if(l>=i){g[e]="[MaxProperties ~]";break}const t=A[e];g[e]=G(e,t,a-1,i,p),l++}return d(t),g}function M(e,t=[]){return[e,t]}function j(e,t){const[a,i]=e;return[a,[...i,t]]}function F(e,t){e[1].forEach((e=>{const a=e[0].type;t(e,a)}))}function Y(e,t){return(t||new TextEncoder).encode(e)}function W(e,t){const[a,i]=e;let p=JSON.stringify(a);function n(e){"string"==typeof p?p="string"==typeof e?p+e:[Y(p,t),e]:p.push("string"==typeof e?Y(e,t):e)}for(const e of i){const[t,a]=e;if(n(`\n${JSON.stringify(t)}\n`),"string"==typeof a||a instanceof Uint8Array)n(a);else{let e;try{e=JSON.stringify(a)}catch(t){e=JSON.stringify(P(a))}n(e)}}return"string"==typeof p?p:function(e){const t=e.reduce(((e,t)=>e+t.length),0),a=new Uint8Array(t);let i=0;for(const t of e)a.set(t,i),i+=t.length;return a}(p)}function J(e,t){const a="string"==typeof e.data?Y(e.data,t):e.data;return[(0,s.Jr)({type:"attachment",length:a.length,filename:e.filename,content_type:e.contentType,attachment_type:e.attachmentType}),a]}const H={session:"session",sessions:"session",attachment:"attachment",transaction:"transaction",event:"error",client_report:"internal",user_report:"default",profile:"profile",replay_event:"replay_event",replay_recording:"replay_recording"};function Z(e){return H[e]}function z(e){if(!e||!e.sdk)return;const{name:t,version:a}=e.sdk;return{name:t,version:a}}function Q(e,t,a=function(e){const t=[];function a(e){return t.splice(t.indexOf(e),1)[0]}return{$:t,add:function(i){if(!(void 0===e||t.length<e))return(0,O.$2)(new R("Not adding Promise because buffer limit was reached."));const p=i();return-1===t.indexOf(p)&&t.push(p),p.then((()=>a(p))).then(null,(()=>a(p).then(null,(()=>{})))),p},drain:function(e){return new O.cW(((a,i)=>{let p=t.length;if(!p)return a(!0);const n=setTimeout((()=>{e&&e>0&&a(!1)}),e);t.forEach((e=>{(0,O.WD)(e).then((()=>{--p||(clearTimeout(n),a(!0))}),i)}))}))}}}(e.bufferSize||30)){let i={};return{send:function(p){const n=[];if(F(p,((t,a)=>{const p=Z(a);if(function(e,t,a=Date.now()){return function(e,t){return e[t]||e.all||0}(e,t)>a}(i,p)){const i=q(t,a);e.recordDroppedEvent("ratelimit_backoff",p,i)}else n.push(t)})),0===n.length)return(0,O.WD)();const s=M(p[0],n),d=t=>{F(s,((a,i)=>{const p=q(a,i);e.recordDroppedEvent(t,Z(i),p)}))};return a.add((()=>t({body:W(s,e.textEncoder)}).then((e=>(void 0!==e.statusCode&&(e.statusCode<200||e.statusCode>=300)&&("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.warn(`Sentry responded with status code ${e.statusCode} to sent event.`),i=function(e,{statusCode:t,headers:a},i=Date.now()){const p={...e},n=a&&a["x-sentry-rate-limits"],s=a&&a["retry-after"];if(n)for(const e of n.trim().split(",")){const[t,a]=e.split(":",2),n=parseInt(t,10),s=1e3*(isNaN(n)?60:n);if(a)for(const e of a.split(";"))p[e]=i+s;else p.all=i+s}else s?p.all=i+function(e,t=Date.now()){const a=parseInt(`${e}`,10);if(!isNaN(a))return 1e3*a;const i=Date.parse(`${e}`);return isNaN(i)?6e4:i-t}(s,i):429===t&&(p.all=i+6e4);return p}(i,e),e)),(e=>{throw d("network_error"),e})))).then((e=>e),(e=>{if(e instanceof R)return("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.error("Skipped sending event because buffer is full."),d("queue_overflow"),(0,O.WD)();throw e}))},flush:e=>a.drain(e)}}function q(e,t){if("event"===t||"transaction"===t)return Array.isArray(e)?e[1]:void 0}var K=a(350),X=a(4307);const $=[];function ee(e){const t=e.defaultIntegrations||[],a=e.integrations;let i;t.forEach((e=>{e.isDefaultInstance=!0})),i=Array.isArray(a)?[...t,...a]:"function"==typeof a?(0,g.lE)(a(t)):t;const p=function(e){const t={};return e.forEach((e=>{const{name:a}=e,i=t[a];i&&!i.isDefaultInstance&&e.isDefaultInstance||(t[a]=e)})),Object.values(t)}(i),n=p.findIndex((e=>"Debug"===e.name));if(-1!==n){const[e]=p.splice(n,1);p.push(e)}return p}function te(e,t){t[e.name]=e,-1===$.indexOf(e.name)&&(e.setupOnce(K.c,C.Gd),$.push(e.name),("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.log(`Integration installed: ${e.name}`))}var ae=a(9015),ie=a(1170);const pe="Not capturing exception because it's already been captured.";class ne{__init(){this._integrations={}}__init2(){this._integrationsInitialized=!1}__init3(){this._numProcessing=0}__init4(){this._outcomes={}}constructor(e){if(ne.prototype.__init.call(this),ne.prototype.__init2.call(this),ne.prototype.__init3.call(this),ne.prototype.__init4.call(this),this._options=e,e.dsn){this._dsn=function(e){const t="string"==typeof e?function(e){const t=k.exec(e);if(!t)throw new R(`Invalid Sentry Dsn: ${e}`);const[a,i,p="",n,s="",d]=t.slice(1);let r="",o=d;const g=o.split("/");if(g.length>1&&(r=g.slice(0,-1).join("/"),o=g.pop()),o){const e=o.match(/^\d+/);e&&(o=e[0])}return x({host:n,pass:p,path:r,projectId:o,port:s,protocol:a,publicKey:i})}(e):x(e);return function(e){if("undefined"!=typeof __SENTRY_DEBUG__&&!__SENTRY_DEBUG__)return;const{port:t,projectId:a,protocol:i}=e;if(["protocol","publicKey","host","projectId"].forEach((t=>{if(!e[t])throw new R(`Invalid Sentry Dsn: ${t} missing`)})),!a.match(/^\d+$/))throw new R(`Invalid Sentry Dsn: Invalid projectId ${a}`);if(!function(e){return"http"===e||"https"===e}(i))throw new R(`Invalid Sentry Dsn: Invalid protocol ${i}`);if(t&&isNaN(parseInt(t,10)))throw new R(`Invalid Sentry Dsn: Invalid port ${t}`)}(t),t}(e.dsn);const t=function(e,t={}){const a="string"==typeof t?t:t.tunnel,i="string"!=typeof t&&t._metadata?t._metadata.sdk:void 0;return a||`${function(e){return`${function(e){const t=e.protocol?`${e.protocol}:`:"",a=e.port?`:${e.port}`:"";return`${t}//${e.host}${a}${e.path?`/${e.path}`:""}/api/`}(e)}${e.projectId}/envelope/`}(e)}?${function(e,t){return(0,s._j)({sentry_key:e.publicKey,sentry_version:"7",...t&&{sentry_client:`${t.name}/${t.version}`}})}(e,i)}`}(this._dsn,e);this._transport=e.transport({recordDroppedEvent:this.recordDroppedEvent.bind(this),...e.transportOptions,url:t})}else("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.warn("No DSN provided, client will not do anything.")}captureException(e,t,a){if((0,g.YO)(e))return void(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.log(pe));let i=t&&t.event_id;return this._process(this.eventFromException(e,t).then((e=>this._captureEvent(e,t,a))).then((e=>{i=e}))),i}captureMessage(e,t,a,i){let p=a&&a.event_id;const n=(0,B.pt)(e)?this.eventFromMessage(String(e),t,a):this.eventFromException(e,a);return this._process(n.then((e=>this._captureEvent(e,a,i))).then((e=>{p=e}))),p}captureEvent(e,t,a){if(t&&t.originalException&&(0,g.YO)(t.originalException))return void(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.log(pe));let i=t&&t.event_id;return this._process(this._captureEvent(e,t,a).then((e=>{i=e}))),i}captureSession(e){this._isEnabled()?"string"!=typeof e.release?("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.warn("Discarded session because of missing or non-string release"):(this.sendSession(e),(0,ae.CT)(e,{init:!1})):("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.warn("SDK not enabled, will not capture session.")}getDsn(){return this._dsn}getOptions(){return this._options}getSdkMetadata(){return this._options._metadata}getTransport(){return this._transport}flush(e){const t=this._transport;return t?this._isClientDoneProcessing(e).then((a=>t.flush(e).then((e=>a&&e)))):(0,O.WD)(!0)}close(e){return this.flush(e).then((e=>(this.getOptions().enabled=!1,e)))}setupIntegrations(){this._isEnabled()&&!this._integrationsInitialized&&(this._integrations=function(e){const t={};return e.forEach((e=>{te(e,t)})),t}(this._options.integrations),this._integrationsInitialized=!0)}getIntegrationById(e){return this._integrations[e]}getIntegration(e){try{return this._integrations[e.id]||null}catch(t){return("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.warn(`Cannot retrieve integration ${e.id} from the current Client`),null}}addIntegration(e){te(e,this._integrations)}sendEvent(e,t={}){if(this._dsn){let a=function(e,t,a,i){const p=z(a),n=e.type&&"replay_event"!==e.type?e.type:"event";!function(e,t){t&&(e.sdk=e.sdk||{},e.sdk.name=e.sdk.name||t.name,e.sdk.version=e.sdk.version||t.version,e.sdk.integrations=[...e.sdk.integrations||[],...t.integrations||[]],e.sdk.packages=[...e.sdk.packages||[],...t.packages||[]])}(e,a&&a.sdk);const d=function(e,t,a,i){const p=e.sdkProcessingMetadata&&e.sdkProcessingMetadata.dynamicSamplingContext;return{event_id:e.event_id,sent_at:(new Date).toISOString(),...t&&{sdk:t},...!!a&&{dsn:V(i)},..."transaction"===e.type&&p&&{trace:(0,s.Jr)({...p})}}}(e,p,i,t);return delete e.sdkProcessingMetadata,M(d,[[{type:n},e]])}(e,this._dsn,this._options._metadata,this._options.tunnel);for(const e of t.attachments||[])a=j(a,J(e,this._options.transportOptions&&this._options.transportOptions.textEncoder));this._sendEnvelope(a)}}sendSession(e){if(this._dsn){const t=function(e,t,a,i){const p=z(a);return M({sent_at:(new Date).toISOString(),...p&&{sdk:p},...!!i&&{dsn:V(t)}},["aggregates"in e?[{type:"sessions"},e]:[{type:"session"},e]])}(e,this._dsn,this._options._metadata,this._options.tunnel);this._sendEnvelope(t)}}recordDroppedEvent(e,t,a){if(this._options.sendClientReports){const a=`${e}:${t}`;("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.log(`Adding outcome: "${a}"`),this._outcomes[a]=this._outcomes[a]+1||1}}_updateSessionFromEvent(e,t){let a=!1,i=!1;const p=t.exception&&t.exception.values;if(p){i=!0;for(const e of p){const t=e.mechanism;if(t&&!1===t.handled){a=!0;break}}}const n="ok"===e.status;(n&&0===e.errors||n&&a)&&((0,ae.CT)(e,{...a&&{status:"crashed"},errors:e.errors||Number(i||a)}),this.captureSession(e))}_isClientDoneProcessing(e){return new O.cW((t=>{let a=0;const i=setInterval((()=>{0==this._numProcessing?(clearInterval(i),t(!0)):(a+=1,e&&a>=e&&(clearInterval(i),t(!1)))}),1)}))}_isEnabled(){return!1!==this.getOptions().enabled&&void 0!==this._dsn}_prepareEvent(e,t,a){return function(e,t,a,i){const{normalizeDepth:p=3,normalizeMaxBreadth:n=1e3}=e,s={...t,event_id:t.event_id||a.event_id||(0,g.DM)(),timestamp:t.timestamp||(0,ie.yW)()};!function(e,t){const{environment:a,release:i,dist:p,maxValueLength:n=250}=t;"environment"in e||(e.environment="environment"in t?a:"production"),void 0===e.release&&void 0!==i&&(e.release=i),void 0===e.dist&&void 0!==p&&(e.dist=p),e.message&&(e.message=(0,l.$G)(e.message,n));const s=e.exception&&e.exception.values&&e.exception.values[0];s&&s.value&&(s.value=(0,l.$G)(s.value,n));const d=e.request;d&&d.url&&(d.url=(0,l.$G)(d.url,n))}(s,e),function(e,t){t.length>0&&(e.sdk=e.sdk||{},e.sdk.integrations=[...e.sdk.integrations||[],...t])}(s,e.integrations.map((e=>e.name)));let d=i;a.captureContext&&(d=K.s.clone(d).update(a.captureContext));let r=(0,O.WD)(s);if(d){if(d.getAttachments){const e=[...a.attachments||[],...d.getAttachments()];e.length&&(a.attachments=e)}r=d.applyToEvent(s,a)}return r.then((e=>"number"==typeof p&&p>0?function(e,t,a){if(!e)return null;const i={...e,...e.breadcrumbs&&{breadcrumbs:e.breadcrumbs.map((e=>({...e,...e.data&&{data:P(e.data,t,a)}})))},...e.user&&{user:P(e.user,t,a)},...e.contexts&&{contexts:P(e.contexts,t,a)},...e.extra&&{extra:P(e.extra,t,a)}};return e.contexts&&e.contexts.trace&&i.contexts&&(i.contexts.trace=e.contexts.trace,e.contexts.trace.data&&(i.contexts.trace.data=P(e.contexts.trace.data,t,a))),e.spans&&(i.spans=e.spans.map((e=>(e.data&&(e.data=P(e.data,t,a)),e)))),i}(e,p,n):e))}(this.getOptions(),e,t,a)}_captureEvent(e,t={},a){return this._processEvent(e,t,a).then((e=>e.event_id),(e=>{if("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__){const t=e;"log"===t.logLevel?o.kg.log(t.message):o.kg.warn(t)}}))}_processEvent(e,t,a){const i=this.getOptions(),{sampleRate:p}=i;if(!this._isEnabled())return(0,O.$2)(new R("SDK not enabled, will not capture event.","log"));const n=de(e),s=se(e),d=e.type||"error",r=`before send for type \`${d}\``;return s&&"number"==typeof p&&Math.random()>p?(this.recordDroppedEvent("sample_rate","error",e),(0,O.$2)(new R(`Discarding event because it's not included in the random sample (sampling rate = ${p})`,"log"))):this._prepareEvent(e,t,a).then((a=>{if(null===a)throw this.recordDroppedEvent("event_processor",d,e),new R("An event processor returned `null`, will not send event.","log");if(t.data&&!0===t.data.__sentry__)return a;const p=function(e,t,a){const{beforeSend:i,beforeSendTransaction:p}=e;return se(t)&&i?i(t,a):de(t)&&p?p(t,a):t}(i,a,t);return function(e,t){const a=`${t} must return \`null\` or a valid event.`;if((0,B.J8)(e))return e.then((e=>{if(!(0,B.PO)(e)&&null!==e)throw new R(a);return e}),(e=>{throw new R(`${t} rejected with ${e}`)}));if(!(0,B.PO)(e)&&null!==e)throw new R(a);return e}(p,r)})).then((i=>{if(null===i)throw this.recordDroppedEvent("before_send",e.type||"error",e),new R(`${r} returned \`null\`, will not send event.`,"log");const p=a&&a.getSession();!n&&p&&this._updateSessionFromEvent(p,i);const s=i.transaction_info;if(n&&s&&i.transaction!==e.transaction){const e="custom";i.transaction_info={...s,source:e,changes:[...s.changes,{source:e,timestamp:i.timestamp,propagations:s.propagations}]}}return this.sendEvent(i,t),i})).then(null,(e=>{if(e instanceof R)throw e;throw this.captureException(e,{data:{__sentry__:!0},originalException:e}),new R(`Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\nReason: ${e}`)}))}_process(e){this._numProcessing++,e.then((e=>(this._numProcessing--,e)),(e=>(this._numProcessing--,e)))}_sendEnvelope(e){this._transport&&this._dsn?this._transport.send(e).then(null,(e=>{("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.error("Error while sending event:",e)})):("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.error("Transport disabled")}_clearOutcomes(){const e=this._outcomes;return this._outcomes={},Object.keys(e).map((t=>{const[a,i]=t.split(":");return{reason:a,category:i,quantity:e[t]}}))}}function se(e){return void 0===e.type}function de(e){return"transaction"===e.type}class re{__init(){this.flushTimeout=60}__init2(){this._pendingAggregates={}}__init3(){this._isEnabled=!0}constructor(e,t){re.prototype.__init.call(this),re.prototype.__init2.call(this),re.prototype.__init3.call(this),this._client=e,this._intervalId=setInterval((()=>this.flush()),1e3*this.flushTimeout),this._sessionAttrs=t}flush(){const e=this.getSessionAggregates();0!==e.aggregates.length&&(this._pendingAggregates={},this._client.sendSession(e))}getSessionAggregates(){const e=Object.keys(this._pendingAggregates).map((e=>this._pendingAggregates[parseInt(e)])),t={attrs:this._sessionAttrs,aggregates:e};return(0,s.Jr)(t)}close(){clearInterval(this._intervalId),this._isEnabled=!1,this.flush()}incrementSessionStatusCount(){if(!this._isEnabled)return;const e=(0,C.Gd)().getScope(),t=e&&e.getRequestSession();t&&t.status&&(this._incrementSessionStatusCount(t.status,new Date),e&&e.setRequestSession(void 0))}_incrementSessionStatusCount(e,t){const a=new Date(t).setSeconds(0,0);this._pendingAggregates[a]=this._pendingAggregates[a]||{};const i=this._pendingAggregates[a];switch(i.started||(i.started=new Date(a).toISOString()),e){case"errored":return i.errored=(i.errored||0)+1,i.errored;case"ok":return i.exited=(i.exited||0)+1,i.exited;default:return i.crashed=(i.crashed||0)+1,i.crashed}}}var oe=a(2037),ge=a(3837);function le(e,t){return e(t.stack||"",1)}function Ae(e,t){const a={type:t.name||t.constructor.name,value:t.message},i=le(e,t);return i.length&&(a.stacktrace={frames:i}),a}class ce extends ne{constructor(e){e._metadata=e._metadata||{},e._metadata.sdk=e._metadata.sdk||{name:"sentry.javascript.node",packages:[{name:"npm:@sentry/node",version:m}],version:m},e.transportOptions={textEncoder:new ge.TextEncoder,...e.transportOptions},super(e)}captureException(e,t,a){if(this._options.autoSessionTracking&&this._sessionFlusher&&a){const e=a.getRequestSession();e&&"ok"===e.status&&(e.status="errored")}return super.captureException(e,t,a)}captureEvent(e,t,a){if(this._options.autoSessionTracking&&this._sessionFlusher&&a&&"exception"===(e.type||"exception")&&e.exception&&e.exception.values&&e.exception.values.length>0){const e=a.getRequestSession();e&&"ok"===e.status&&(e.status="errored")}return super.captureEvent(e,t,a)}close(e){return(0,X.x)([this,"access",e=>e._sessionFlusher,"optionalAccess",e=>e.close,"call",e=>e()]),super.close(e)}initSessionFlusher(){const{release:e,environment:t}=this._options;e?this._sessionFlusher=new re(this,{release:e,environment:t}):("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.warn("Cannot initialise an instance of SessionFlusher if no release is provided!")}eventFromException(e,t){return(0,O.WD)(function(e,t,a){let i=t;const p=a&&a.data&&a.data.mechanism||{handled:!0,type:"generic"};if(!(0,B.VZ)(t)){if((0,B.PO)(t)){const e=`Non-Error exception captured with keys: ${(0,s.zf)(t)}`,p=(0,C.Gd)(),n=p.getClient(),d=n&&n.getOptions().normalizeDepth;p.configureScope((e=>{e.setExtra("__serialized__",L(t,d))})),i=a&&a.syntheticException||new Error(e),i.message=e}else i=a&&a.syntheticException||new Error(t),i.message=t;p.synthetic=!0}const n={exception:{values:[Ae(e,i)]}};return(0,g.Db)(n,void 0,void 0),(0,g.EG)(n,p),{...n,event_id:a&&a.event_id}}(this._options.stackParser,e,t))}eventFromMessage(e,t="info",a){return(0,O.WD)(function(e,t,a="info",i,p){const n={event_id:i&&i.event_id,level:a,message:t};if(p&&i&&i.syntheticException){const a=le(e,i.syntheticException);a.length&&(n.exception={values:[{value:t,stacktrace:{frames:a}}]})}return n}(this._options.stackParser,e,t,a,this._options.attachStacktrace))}_prepareEvent(e,t,a){return e.platform=e.platform||"node",e.contexts={...e.contexts,runtime:(0,X.x)([e,"access",e=>e.contexts,"optionalAccess",e=>e.runtime])||{name:"node",version:global.process.version}},e.server_name=e.server_name||this.getOptions().serverName||global.process.env.SENTRY_NAME||oe.hostname(),super._prepareEvent(e,t,a)}_captureRequestSession(){this._sessionFlusher?this._sessionFlusher.incrementSessionStatusCount():("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.warn("Discarded request mode session because autoSessionTracking option was disabled")}}var Ie=a(5375),Ce=a(3685),me=a(5687),ue=a(2781),he=a(7310),fe=a(9796);function ve(e){let t;try{t=new he.URL(e.url)}catch(t){return console.warn("[@sentry/node]: Invalid dsn or tunnel option, will not send any events. The tunnel option must be a full URL when used."),Q(e,(()=>Promise.resolve({})))}const i="https:"===t.protocol,p=function(e,t){const{no_proxy:a}=process.env;return a&&a.split(",").some((t=>e.host.endsWith(t)||e.hostname.endsWith(t)))?void 0:t}(t,e.proxy||(i?process.env.https_proxy:void 0)||process.env.http_proxy),n=i?me:Ce,s=void 0!==e.keepAlive&&e.keepAlive,d=p?new(a(6018))(p):new n.Agent({keepAlive:s,maxSockets:30,timeout:2e3}),r=function(e,t,a){const{hostname:i,pathname:p,port:n,protocol:s,search:d}=new he.URL(e.url);return function(r){return new Promise(((o,g)=>{let l=function(e){return new ue.Readable({read(){this.push(e),this.push(null)}})}(r.body);const A={...e.headers};r.body.length>32768&&(A["content-encoding"]="gzip",l=l.pipe((0,fe.createGzip)()));const c=t.request({method:"POST",agent:a,headers:A,hostname:i,path:`${p}${d}`,port:n,protocol:s,ca:e.caCerts},(e=>{e.on("data",(()=>{})),e.on("end",(()=>{})),e.setEncoding("utf8");const t=(0,Ie.h)(e.headers["retry-after"],(()=>null)),a=(0,Ie.h)(e.headers["x-sentry-rate-limits"],(()=>null));o({statusCode:e.statusCode,headers:{"retry-after":t,"x-sentry-rate-limits":Array.isArray(a)?a[0]:a}})}));c.on("error",g),l.pipe(c)}))}}(e,(0,Ie.h)(e.httpModule,(()=>n)),d);return Q(e,r)}var _e=a(1235);const ye=require("domain"),be=["fatal","error","warning","log","info","debug"];class we{constructor(){we.prototype.__init.call(this)}static __initStatic(){this.id="Console"}__init(){this.name=we.id}setupOnce(){for(const e of["debug","info","warn","error","log"])(0,s.hl)(console,e,Se(e))}}function Se(e){return function(t){const a=function(e){return"warn"===e?"warning":be.includes(e)?e:"log"}(e);return function(){(0,C.Gd)().getIntegration(we)&&(0,C.Gd)().addBreadcrumb({category:"console",level:a,message:ge.format.apply(void 0,arguments)},{input:[...arguments],level:e}),t.apply(this,arguments)}}}we.__initStatic();var Ee=a(9181);const Te=(0,g.J4)(process.versions.node);function Ne(e){return`${e.protocol||""}//${e.hostname||e.host||""}${e.port&&80!==e.port&&443!==e.port?`:${e.port}`:""}${e.path?e.path:"/"}`}function De(e,t,a){if(!e)return e;let[i,p]=e.split(" ");return t.host&&!t.protocol&&(t.protocol=(0,X.x)([a,"optionalAccess",e=>e.agent,"optionalAccess",e=>e.protocol]),p=Ne(t)),(0,X.x)([p,"optionalAccess",e=>e.startsWith,"call",e=>e("///")])&&(p=p.slice(2)),`${i} ${p}`}function Re(e){const t={protocol:e.protocol,hostname:"string"==typeof e.hostname&&e.hostname.startsWith("[")?e.hostname.slice(1,-1):e.hostname,hash:e.hash,search:e.search,pathname:e.pathname,path:`${e.pathname||""}${e.search||""}`,href:e.href};return""!==e.port&&(t.port=Number(e.port)),(e.username||e.password)&&(t.auth=`${e.username}:${e.password}`),t}const Oe=(0,g.J4)(process.versions.node);class ke{static __initStatic(){this.id="Http"}__init(){this.name=ke.id}constructor(e={}){ke.prototype.__init.call(this),this._breadcrumbs=void 0===e.breadcrumbs||e.breadcrumbs,this._tracing=e.tracing?!0===e.tracing?{}:e.tracing:void 0}setupOnce(e,t){if(!this._breadcrumbs&&!this._tracing)return;const i=(0,X.x)([t,"call",e=>e(),"access",e=>e.getClient,"call",e=>e(),"optionalAccess",e=>e.getOptions,"call",e=>e()]);if(i&&"sentry"!==i.instrumenter)return void(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.log("HTTP Integration is skipped because of instrumenter configuration."));const p=this._tracing?{...i,...this._tracing}:void 0,n=function(e,t){const a={},i={};return function(p){return function(...n){const s=function(e,t){let a,i;return"function"==typeof t[t.length-1]&&(a=t.pop()),i="string"==typeof t[0]?Re(new he.URL(t[0])):t[0]instanceof he.URL?Re(t[0]):t[0],2===t.length&&(i={...i,...t[1]}),void 0===i.protocol&&(Te.major&&Te.major>8?i.protocol=(0,X.x)([(0,X.x)([e,"optionalAccess",e=>e.globalAgent]),"optionalAccess",e=>e.protocol])||(0,X.x)([i.agent,"optionalAccess",e=>e.protocol])||(0,X.x)([i._defaultAgent,"optionalAccess",e=>e.protocol]):i.protocol=(0,X.x)([i.agent,"optionalAccess",e=>e.protocol])||(0,X.x)([i._defaultAgent,"optionalAccess",e=>e.protocol])||(0,X.x)([(0,X.x)([e,"optionalAccess",e=>e.globalAgent]),"optionalAccess",e=>e.protocol])),a?[i,a]:[i]}(this,n),d=s[0],r=Ne(d);if(function(e){const t=(0,X.x)([C.Gd,"call",e=>e(),"access",e=>e.getClient,"call",e=>e(),"optionalAccess",e=>e.getDsn,"call",e=>e()]);return!!t&&e.includes(t.host)}(r))return p.apply(this,s);let g,A;const c=(0,C.Gd)().getScope();if(c&&t&&(e=>void 0===(0,X.x)([t,"optionalAccess",e=>e.shouldCreateSpanForRequest])||(a[e]||(a[e]=t.shouldCreateSpanForRequest(e)),a[e]))(r)&&(A=c.getSpan(),A)){if(g=A.startChild({description:`${d.method||"GET"} ${r}`,op:"http.client"}),(e=>void 0===(0,X.x)([t,"optionalAccess",e=>e.tracePropagationTargets])||(i[e]||(i[e]=(0,l.U0)(e,t.tracePropagationTargets)),i[e]))(r)){const e=g.toTraceparent();if(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.log(`[Tracing] Adding sentry-trace header ${e} to outgoing request to "${r}": `),d.headers={...d.headers,"sentry-trace":e},A.transaction){const e=A.transaction.getDynamicSamplingContext(),t=(0,Ee.IQ)(e);let a;a=d.headers&&d.headers.baggage?t?Array.isArray(d.headers.baggage)?[...d.headers.baggage,t]:[d.headers.baggage,t]:d.headers.baggage:t,d.headers={...d.headers,...a&&{baggage:a}}}}else("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.log(`[Tracing] Not adding sentry-trace header to outgoing request (${r}) due to mismatching tracePropagationTargets option.`);const e=A.transaction;e&&e.metadata.propagations++}return p.apply(this,s).once("response",(function(t){e&&Ve("response",r,this,t),g&&(t.statusCode&&g.setHttpStatus(t.statusCode),g.description=De(g.description,d,this),g.finish())})).once("error",(function(){e&&Ve("error",r,this),g&&(g.setHttpStatus(500),g.description=De(g.description,d,this),g.finish())}))}}}(this._breadcrumbs,p),d=a(3685);if((0,s.hl)(d,"get",n),(0,s.hl)(d,"request",n),Oe.major&&Oe.major>8){const e=a(5687);(0,s.hl)(e,"get",n),(0,s.hl)(e,"request",n)}}}function Ve(e,t,a,i){(0,C.Gd)().getIntegration(ke)&&(0,C.Gd)().addBreadcrumb({category:"http",data:{method:a.method,status_code:i&&i.statusCode,url:t},type:"http"},{event:e,request:a,response:i})}function xe(e){console.error(e&&e.stack?e.stack:e);const t=(0,C.Gd)().getClient();void 0===t&&(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.warn("No NodeClient was defined, we are exiting the process now."),global.process.exit(1));const a=t.getOptions(),i=a&&a.shutdownTimeout&&a.shutdownTimeout>0&&a.shutdownTimeout||2e3;t.close(i).then((e=>{e||("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.warn("We reached the timeout for emptying the request buffer, still exiting now!"),global.process.exit(1)}),(e=>{("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.error(e)}))}ke.__initStatic();class Be{static __initStatic(){this.id="OnUncaughtException"}__init(){this.name=Be.id}__init2(){this.handler=this._makeErrorHandler()}constructor(e={}){Be.prototype.__init.call(this),Be.prototype.__init2.call(this),this._options={exitEvenIfOtherHandlersAreRegistered:!0,...e}}setupOnce(){global.process.on("uncaughtException",this.handler)}_makeErrorHandler(){let e,t=!1,a=!1,i=!1;return p=>{let n=xe;const s=(0,C.Gd)().getClient();this._options.onFatalError?n=this._options.onFatalError:s&&s.getOptions().onFatalError&&(n=s.getOptions().onFatalError);const d=0===global.process.listeners("uncaughtException").reduce(((e,t)=>"domainUncaughtExceptionClear"===t.name||t===this.handler?e:e+1),0),r=this._options.exitEvenIfOtherHandlersAreRegistered||d;if(t)r&&(i?(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.warn("uncaught exception after calling fatal error shutdown callback - this is bad! forcing shutdown"),xe(p)):a||(a=!0,setTimeout((()=>{i||(i=!0,n(e,p))}),2e3)));else{const a=(0,C.Gd)();e=p,t=!0,a.getIntegration(Be)?a.withScope((e=>{e.setLevel("fatal"),a.captureException(p,{originalException:p,data:{mechanism:{handled:!1,type:"onuncaughtexception"}}}),!i&&r&&(i=!0,n(p))})):!i&&r&&(i=!0,n(p))}}}}Be.__initStatic();class Ue{static __initStatic(){this.id="OnUnhandledRejection"}__init(){this.name=Ue.id}constructor(e={mode:"warn"}){this._options=e,Ue.prototype.__init.call(this)}setupOnce(){global.process.on("unhandledRejection",this.sendUnhandledPromise.bind(this))}sendUnhandledPromise(e,t){const a=(0,C.Gd)();a.getIntegration(Ue)&&a.withScope((i=>{i.setExtra("unhandledPromiseRejection",!0),a.captureException(e,{originalException:t,data:{mechanism:{handled:!1,type:"onunhandledrejection"}}})})),this._handleRejection(e)}_handleRejection(e){const t="This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). The promise rejected with the reason:";"warn"===this._options.mode?(0,o.Cf)((()=>{console.warn(t),console.error(e&&e.stack?e.stack:e)})):"strict"===this._options.mode&&((0,o.Cf)((()=>{console.warn(t)})),xe(e))}}Ue.__initStatic();var Pe=a(7147),Le=a(7612);const Ge=new Le.LRUMap(100);class Me{static __initStatic(){this.id="ContextLines"}__init(){this.name=Me.id}constructor(e={}){this._options=e,Me.prototype.__init.call(this)}get _contextLines(){return void 0!==this._options.frameContextLines?this._options.frameContextLines:7}setupOnce(e){e((e=>this.addSourceContext(e)))}async addSourceContext(e){if(this._contextLines>0&&(0,X.x)([e,"access",e=>e.exception,"optionalAccess",e=>e.values]))for(const t of e.exception.values)(0,X.x)([t,"access",e=>e.stacktrace,"optionalAccess",e=>e.frames])&&await this.addSourceContextToFrames(t.stacktrace.frames);return e}async addSourceContextToFrames(e){const t=this._contextLines;for(const a of e)if(a.filename&&void 0===a.context_line){const e=await je(a.filename);if(e)try{const i=e.split("\n");(0,g.go)(i,a,t)}catch(e){}}}}async function je(e){const t=Ge.get(e);if(void 0!==t)return t;let a=null;try{a=await(i=e,new Promise(((e,t)=>{(0,Pe.readFile)(i,"utf8",((a,i)=>{a?t(a):e(i)}))})))}catch(e){}var i;return Ge.set(e,a),a}Me.__initStatic();class Fe{static __initStatic(){this.id="LinkedErrors"}__init(){this.name=Fe.id}constructor(e={}){Fe.prototype.__init.call(this),this._key=e.key||"cause",this._limit=e.limit||5}setupOnce(){(0,K.c)((async(e,t)=>{const a=(0,C.Gd)(),i=a.getIntegration(Fe),p=a.getClient();return p&&i&&i._handler&&"function"==typeof i._handler&&await i._handler(p.getOptions().stackParser,e,t),e}))}_handler(e,t,a){return t.exception&&t.exception.values&&(0,B.V9)(a.originalException,Error)?new O.cW((i=>{this._walkErrorTree(e,a.originalException,this._key).then((e=>{t&&t.exception&&t.exception.values&&(t.exception.values=[...e,...t.exception.values]),i(t)})).then(null,(()=>{i(t)}))})):(0,O.WD)(t)}async _walkErrorTree(e,t,a,i=[]){if(!(0,B.V9)(t[a],Error)||i.length+1>=this._limit)return Promise.resolve(i);const p=Ae(e,t[a]),n=(0,C.Gd)().getIntegration(Me);return n&&(0,X.x)([p,"access",e=>e.stacktrace,"optionalAccess",e=>e.frames])&&await n.addSourceContextToFrames(p.stacktrace.frames),new Promise(((n,s)=>{this._walkErrorTree(e,t[a],a,[p,...i]).then(n).then(null,(()=>{s()}))}))}}Fe.__initStatic();var Ye=a(1017);let We;class Je{constructor(){Je.prototype.__init.call(this)}static __initStatic(){this.id="Modules"}__init(){this.name=Je.id}setupOnce(e,t){e((e=>t().getIntegration(Je)?{...e,modules:{...e.modules,...this._getModules()}}:e))}_getModules(){return We||(We=function(){const e=a.c[a.s]&&a.c[a.s].paths||[],t=function(){try{return a.c?Object.keys(a.c):[]}catch(e){return[]}}(),i={},p={};return t.forEach((t=>{let a=t;const n=()=>{const t=a;if(a=(0,Ye.dirname)(t),!a||t===a||p[t])return;if(e.indexOf(a)<0)return n();const s=(0,Ye.join)(t,"package.json");if(p[t]=!0,!(0,Pe.existsSync)(s))return n();try{const e=JSON.parse((0,Pe.readFileSync)(s,"utf8"));i[e.name]=e.version}catch(e){}};n()})),i}()),We}}Je.__initStatic();const He=require("child_process"),Ze=(0,ge.promisify)(Pe.readFile),ze=(0,ge.promisify)(Pe.readdir);class Qe{static __initStatic(){this.id="Context"}__init(){this.name=Qe.id}constructor(e={app:!0,os:!0,device:!0,culture:!0}){this._options=e,Qe.prototype.__init.call(this)}setupOnce(e){e((e=>this.addContext(e)))}async addContext(e){void 0===this._cachedContext&&(this._cachedContext=this._getContexts());const t=this._updateContext(await this._cachedContext);return e.contexts={...e.contexts,app:{...t.app,...(0,X.x)([e,"access",e=>e.contexts,"optionalAccess",e=>e.app])},os:{...t.os,...(0,X.x)([e,"access",e=>e.contexts,"optionalAccess",e=>e.os])},device:{...t.device,...(0,X.x)([e,"access",e=>e.contexts,"optionalAccess",e=>e.device])},culture:{...t.culture,...(0,X.x)([e,"access",e=>e.contexts,"optionalAccess",e=>e.culture])}},e}_updateContext(e){return(0,X.x)([e,"optionalAccess",e=>e.app,"optionalAccess",e=>e.app_memory])&&(e.app.app_memory=process.memoryUsage().rss),(0,X.x)([e,"optionalAccess",e=>e.device,"optionalAccess",e=>e.free_memory])&&(e.device.free_memory=oe.freemem()),e}async _getContexts(){const e={};if(this._options.os&&(e.os=await async function(){const e=oe.platform();switch(e){case"darwin":return async function(){const e={kernel_version:oe.release(),name:"Mac OS X",version:"10."+(Number(oe.release().split(".")[0])-4)};try{const t=await new Promise(((e,t)=>{(0,He.execFile)("/usr/bin/sw_vers",((a,i)=>{a?t(a):e(i)}))}));e.name=$e(/^ProductName:\s+(.*)$/m,t),e.version=$e(/^ProductVersion:\s+(.*)$/m,t),e.build=$e(/^BuildVersion:\s+(.*)$/m,t)}catch(e){}return e}();case"linux":return async function(){const e={kernel_version:oe.release(),name:"Linux"};try{const t=await ze("/etc"),a=Ke.find((e=>t.includes(e.name)));if(!a)return e;const i=(0,Ye.join)("/etc",a.name),p=(await Ze(i,{encoding:"utf-8"})).toLowerCase(),{distros:n}=a;e.name=n.find((e=>p.indexOf(et(e))>=0))||n[0];const s=et(e.name);e.version=Xe[s](p)}catch(e){}return e}();default:return{name:qe[e]||e,version:oe.release()}}}()),this._options.app&&(e.app=function(){const e=process.memoryUsage().rss;return{app_start_time:new Date(Date.now()-1e3*process.uptime()).toISOString(),app_memory:e}}()),this._options.device&&(e.device=function(e){const t={},a=oe.uptime&&oe.uptime();if("number"==typeof a&&(t.boot_time=new Date(Date.now()-1e3*a).toISOString()),t.arch=oe.arch(),(!0===e||e.memory)&&(t.memory_size=oe.totalmem(),t.free_memory=oe.freemem()),!0===e||e.cpu){const e=oe.cpus();if(e&&e.length){const a=e[0];t.processor_count=e.length,t.cpu_description=a.model,t.processor_frequency=a.speed}}return t}(this._options.device)),this._options.culture){const t=function(){try{if("string"!=typeof process.versions.icu)return;const e=new Date(9e8);if("enero"===new Intl.DateTimeFormat("es",{month:"long"}).format(e)){const e=Intl.DateTimeFormat().resolvedOptions();return{locale:e.locale,timezone:e.timeZone}}}catch(e){}}();t&&(e.culture=t)}return e}}Qe.__initStatic();const qe={aix:"IBM AIX",freebsd:"FreeBSD",openbsd:"OpenBSD",sunos:"SunOS",win32:"Windows"},Ke=[{name:"fedora-release",distros:["Fedora"]},{name:"redhat-release",distros:["Red Hat Linux","Centos"]},{name:"redhat_version",distros:["Red Hat Linux"]},{name:"SuSE-release",distros:["SUSE Linux"]},{name:"lsb-release",distros:["Ubuntu Linux","Arch Linux"]},{name:"debian_version",distros:["Debian"]},{name:"debian_release",distros:["Debian"]},{name:"arch-release",distros:["Arch Linux"]},{name:"gentoo-release",distros:["Gentoo Linux"]},{name:"novell-release",distros:["SUSE Linux"]},{name:"alpine-release",distros:["Alpine Linux"]}],Xe={alpine:e=>e,arch:e=>$e(/distrib_release=(.*)/,e),centos:e=>$e(/release ([^ ]+)/,e),debian:e=>e,fedora:e=>$e(/release (..)/,e),mint:e=>$e(/distrib_release=(.*)/,e),red:e=>$e(/release ([^ ]+)/,e),suse:e=>$e(/VERSION = (.*)\n/,e),ubuntu:e=>$e(/distrib_release=(.*)/,e)};function $e(e,t){const a=e.exec(t);return a?a[1]:void 0}function et(e){return e.split(" ")[0].toLowerCase()}var tt=a(442),at=a(6956),it=a(6489);const pt={ip:!1,request:!0,transaction:!0,user:!0},nt=["cookies","data","headers","method","query_string","url"],st=["id","username","email"];function dt(e,t={}){const a=e.method&&e.method.toUpperCase();let i="",p="url";t.customRoute||e.route?(i=t.customRoute||`${e.baseUrl||""}${e.route&&e.route.path}`,p="route"):(e.originalUrl||e.url)&&(i=(0,at.rt)(e.originalUrl||e.url||""));let n="";return t.method&&a&&(n+=a),t.method&&t.path&&(n+=" "),t.path&&i&&(n+=i),[n,p]}function rt(e,t){const{include:a=nt}=t||{},i={},p=e.headers||{},n=e.method,s=e.hostname||e.host||p.host||"<no host>",d="https"===e.protocol||e.socket&&e.socket.encrypted?"https":"http",r=e.originalUrl||e.url||"",o=r.startsWith(d)?r:`${d}://${s}${r}`;return a.forEach((t=>{switch(t){case"headers":i.headers=p,a.includes("cookies")||delete i.headers.cookie;break;case"method":i.method=n;break;case"url":i.url=o;break;case"cookies":i.cookies=e.cookies||p.cookie&&it.Q(p.cookie)||{};break;case"query_string":i.query_string=function(e){let t=e.originalUrl||e.url||"";if(t)return t.startsWith("/")&&(t=`http://dogs.are.great${t}`),e.query||void 0!==typeof URL&&new URL(t).search.replace("?","")||he.parse(t).query||void 0}(e);break;case"data":if("GET"===n||"HEAD"===n)break;void 0!==e.body&&(i.data=(0,B.HD)(e.body)?e.body:JSON.stringify(P(e.body)));break;default:({}).hasOwnProperty.call(e,t)&&(i[t]=e[t])}})),i}function ot(e,t,a){const i={...pt,...(0,X.x)([a,"optionalAccess",e=>e.include])};if(i.request){const a=Array.isArray(i.request)?rt(t,{include:i.request}):rt(t);e.request={...e.request,...a}}if(i.user){const a=t.user&&(0,B.PO)(t.user)?function(e,t){const a={};return(Array.isArray(t)?t:st).forEach((t=>{e&&t in e&&(a[t]=e[t])})),a}(t.user,i.user):{};Object.keys(a).length&&(e.user={...e.user,...a})}if(i.ip){const a=t.ip||t.socket&&t.socket.remoteAddress;a&&(e.user={...e.user,ip_address:a})}return i.transaction&&!e.transaction&&(e.transaction=function(e,t){switch(t){case"path":return dt(e,{path:!0})[0];case"handler":return e.route&&e.route.stack&&e.route.stack[0]&&e.route.stack[0].name||"<anonymous>";default:return dt(e,{path:!0,method:!0})[0]}}(t,i.transaction)),e}const gt={include:{cookies:!0,data:!0,headers:!0,ip:!1,query_string:!0,url:!0,user:{id:!0,username:!0,email:!0}},transactionNamingScheme:"methodPath"};class lt{static __initStatic(){this.id="RequestData"}__init(){this.name=lt.id}constructor(e={}){lt.prototype.__init.call(this),this._addRequestData=ot,this._options={...gt,...e,include:{method:!0,...gt.include,...e.include,user:e.include&&"boolean"==typeof e.include.user?e.include.user:{...gt.include.user,...(e.include||{}).user}}}}setupOnce(e,t){const{transactionNamingScheme:a}=this._options;e((e=>{const i=t(),p=i.getIntegration(lt),{sdkProcessingMetadata:n={}}=e,s=n.request;if(!p||!s)return e;const d=n.requestDataOptionsFromExpressHandler||n.requestDataOptionsFromGCPWrapper||function(e){const{transactionNamingScheme:t,include:{ip:a,user:i,...p}}=e,n=[];for(const[e,t]of Object.entries(p))t&&n.push(e);let s;if(void 0===i)s=!0;else if("boolean"==typeof i)s=i;else{const e=[];for(const[t,a]of Object.entries(i))a&&e.push(t);s=e}return{include:{ip:a,user:s,request:0!==n.length?n:void 0,transaction:t}}}(this._options),r=this._addRequestData(e,s,d);if("transaction"===e.type||"handler"===a)return r;const o=s._sentryTransaction;if(o){const e="sentry.javascript.nextjs"===function(e){try{return e.getClient().getOptions()._metadata.sdk.name}catch(e){return}}(i)?o.name.startsWith("/api"):"path"!==a,[t]=(0,tt.oA)(s,{path:!0,method:e,customRoute:o.name});r.transaction=t}return r}))}}lt.__initStatic();const At=require("inspector");class ct extends At.Session{configureAndConnect(e){this.connect(),this.on("Debugger.paused",e),this.post("Debugger.enable"),this.post("Debugger.setPauseOnExceptions",{state:"uncaught"})}async getLocalVariables(e){const t=await this._getProperties(e),a={};for(const e of t)(0,X.x)([e,"optionalAccess",e=>e.value,"optionalAccess",e=>e.objectId])&&"Array"===(0,X.x)([e,"optionalAccess",e=>e.value,"access",e=>e.className])?a[e.name]=await this._unrollArray(e.value.objectId):(0,X.x)([e,"optionalAccess",e=>e.value,"optionalAccess",e=>e.objectId])&&"Object"===(0,X.x)([e,"optionalAccess",e=>e.value,"optionalAccess",e=>e.className])?a[e.name]=await this._unrollObject(e.value.objectId):((0,X.x)([e,"optionalAccess",e=>e.value,"optionalAccess",e=>e.value])||(0,X.x)([e,"optionalAccess",e=>e.value,"optionalAccess",e=>e.description]))&&(a[e.name]=e.value.value||`<${e.value.description}>`);return a}_getProperties(e){return new Promise(((t,a)=>{this.post("Runtime.getProperties",{objectId:e,ownProperties:!0},((e,i)=>{e?a(e):t(i.result)}))}))}async _unrollArray(e){return(await this._getProperties(e)).filter((e=>"length"!==e.name&&!isNaN(parseInt(e.name,10)))).sort(((e,t)=>parseInt(e.name,10)-parseInt(t.name,10))).map((e=>(0,X.x)([e,"optionalAccess",e=>e.value,"optionalAccess",e=>e.value])))}async _unrollObject(e){return(await this._getProperties(e)).map((e=>[e.name,(0,X.x)([e,"optionalAccess",e=>e.value,"optionalAccess",e=>e.value])])).reduce(((e,[t,a])=>(e[t]=a,e)),{})}}function It(e){return void 0!==e&&["","?","<anonymous>"].includes(e)}function Ct(e){if(void 0!==e)return e.slice(-10).reduce(((e,t)=>`${e},${t.function},${t.lineno},${t.colno}`),"")}class mt{static __initStatic(){this.id="LocalVariables"}__init(){this.name=mt.id}__init2(){this._cachedFrames=new Le.LRUMap(20)}constructor(e={},t=new ct){this._session=t,mt.prototype.__init.call(this),mt.prototype.__init2.call(this)}setupOnce(e,t){this._setup(e,(0,X.x)([t,"call",e=>e(),"access",e=>e.getClient,"call",e=>e(),"optionalAccess",e=>e.getOptions,"call",e=>e()]))}_setup(e,t){(0,X.x)([t,"optionalAccess",e=>e._experiments,"optionalAccess",e=>e.includeStackLocals])&&(this._session.configureAndConnect((e=>this._handlePaused(t.stackParser,e))),e((async e=>this._addLocalVariables(e))))}async _handlePaused(e,{params:{reason:t,data:a,callFrames:i}}){if("exception"!==t&&"promiseRejection"!==t)return;const p=function(e,t){if(void 0!==t)return Ct(e(t,1))}(e,(0,X.x)([a,"optionalAccess",e=>e.description]));if(null==p)return;const n=i.map((async({scopeChain:e,functionName:t,this:a})=>{const i=e.find((e=>"local"===e.type)),p="global"===a.className?t:`${a.className}.${t}`;return void 0===(0,X.x)([i,"optionalAccess",e=>e.object,"access",e=>e.objectId])?{function:p}:{function:p,vars:await this._session.getLocalVariables(i.object.objectId)}}));this._cachedFrames.set(p,Promise.all(n))}async _addLocalVariables(e){for(const t of(0,X.x)([e,"optionalAccess",e=>e.exception,"optionalAccess",e=>e.values])||[])await this._addLocalVariablesToException(t);return e}async _addLocalVariablesToException(e){const t=Ct((0,X.x)([e,"optionalAccess",e=>e.stacktrace,"optionalAccess",e=>e.frames]));if(void 0===t)return;const a=await this._cachedFrames.delete(t);if(void 0===a)return;const i=(0,X.x)([e,"access",e=>e.stacktrace,"optionalAccess",e=>e.frames,"optionalAccess",e=>e.length])||0;for(let t=0;t<i;t++){const s=i-t-1;if(!(0,X.x)([e,"optionalAccess",e=>e.stacktrace,"optionalAccess",e=>e.frames,"optionalAccess",e=>e[s]])||!a[t])break;void 0!==a[t].vars&&!1!==e.stacktrace.frames[s].in_app&&((p=e.stacktrace.frames[s].function)===(n=a[t].function)||It(p)&&It(n))&&(e.stacktrace.frames[s].vars=a[t].vars)}var p,n}}mt.__initStatic();const ut=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^/]+?|)(\.[^./]*|))(?:[/]*)$/;function ht(e){const t=ut.exec(e);return t?t.slice(1):[]}function ft(e){const t=ht(e),a=t[0];let i=t[1];return a||i?(i&&(i=i.substr(0,i.length-1)),a+i):"."}function vt(e){return e.replace(/^[A-Z]:/,"").replace(/\\/g,"/")}const _t=[new c,new r,new we,new ke,new Be,new Ue,new Me,new mt,new Qe,new Je,new lt,new Fe];function yt(e={}){const t=(0,C.cu)(),a=(0,X.x)([t,"access",e=>e.__SENTRY__,"optionalAccess",e=>e.integrations])||[];if(e.defaultIntegrations=!1===e.defaultIntegrations?[]:[...Array.isArray(e.defaultIntegrations)?e.defaultIntegrations:_t,...a],void 0===e.dsn&&process.env.SENTRY_DSN&&(e.dsn=process.env.SENTRY_DSN),void 0===e.tracesSampleRate&&process.env.SENTRY_TRACES_SAMPLE_RATE){const t=parseFloat(process.env.SENTRY_TRACES_SAMPLE_RATE);isFinite(t)&&(e.tracesSampleRate=t)}if(void 0===e.release){const t=Tt();void 0!==t?e.release=t:e.autoSessionTracking=!1}void 0===e.environment&&process.env.SENTRY_ENVIRONMENT&&(e.environment=process.env.SENTRY_ENVIRONMENT),void 0===e.autoSessionTracking&&void 0!==e.dsn&&(e.autoSessionTracking=!0),void 0===e.instrumenter&&(e.instrumenter="sentry"),ye.active&&(0,C.j0)(t,(0,C.Gd)());const i={...e,stackParser:(0,U.Sq)(e.stackParser||Nt),integrations:ee(e),transport:e.transport||ve};!function(e,t){!0===t.debug&&("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__?o.kg.enable():console.warn("[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle."));const a=(0,C.Gd)(),i=a.getScope();i&&i.update(t.initialScope);const p=new e(t);a.bindClient(p)}(ce,i),e.autoSessionTracking&&function(){const e=(0,C.Gd)();e.startSession(),process.on("beforeExit",(()=>{const t=(0,X.x)([e,"access",e=>e.getScope,"call",e=>e(),"optionalAccess",e=>e.getSession,"call",e=>e()]);t&&!["exited","crashed"].includes(t.status)&&e.endSession()}))}()}function bt(){return(0,C.Gd)().lastEventId()}async function wt(e){const t=(0,C.Gd)().getClient();return t?t.flush(e):(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.warn("Cannot flush events. No client defined."),Promise.resolve(!1))}async function St(e){const t=(0,C.Gd)().getClient();return t?t.close(e):(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.warn("Cannot flush events and disable SDK. No client defined."),Promise.resolve(!1))}function Et(e){if(void 0===e)return!1;const t=e&&e.getOptions();return!(!t||void 0===t.autoSessionTracking)&&t.autoSessionTracking}function Tt(e){return process.env.SENTRY_RELEASE?process.env.SENTRY_RELEASE:_e.n2.SENTRY_RELEASE&&_e.n2.SENTRY_RELEASE.id?_e.n2.SENTRY_RELEASE.id:process.env.GITHUB_SHA||process.env.COMMIT_REF||process.env.VERCEL_GIT_COMMIT_SHA||process.env.VERCEL_GITHUB_COMMIT_SHA||process.env.VERCEL_GITLAB_COMMIT_SHA||process.env.VERCEL_BITBUCKET_COMMIT_SHA||process.env.ZEIT_GITHUB_COMMIT_SHA||process.env.ZEIT_GITLAB_COMMIT_SHA||process.env.ZEIT_BITBUCKET_COMMIT_SHA||e}const Nt=(0,U.pE)((0,U.Ep)((function(e){if(!e)return;const t=vt(e),i=vt(`${a.c[a.s]&&a.c[a.s].filename&&ft(a.c[a.s].filename)||global.process.cwd()}/`),p=function(e,t){let a=ht(e)[2];return a.substr(-1*t.length)===t&&(a=a.substr(0,a.length-t.length)),a}(t,".js"),n=ft(t);let s=n.lastIndexOf("/node_modules/");if(s>-1)return`${n.substr(s+14).replace(/\//g,".")}:${p}`;if(s=`${n}/`.lastIndexOf(i,0),0===s){let e=n.substr(i.length).replace(/\//g,".");return e&&(e+=":"),e+=p,e}return p})));function Dt(e){const t=Ye.resolve(e);if(!Pe.existsSync(t))throw new Error(`Cannot read contents of ${t}. Directory does not exist.`);if(!Pe.statSync(t).isDirectory())throw new Error(`Cannot read contents of ${t}, because it is not a directory.`);const a=e=>Pe.readdirSync(e).reduce(((t,i)=>{const p=Ye.join(e,i);return Pe.statSync(p).isDirectory()?[...t,...a(p)]:[...t,p]}),[]);return a(t).map((e=>Ye.relative(t,e)))}var Rt=a(7638);function Ot(e,t){return rt(e,{include:t})}function kt(e,t,a={}){return ot(e,t,{include:a})}function Vt(){return function(e,t,a){const i=(0,C.Gd)(),p=(0,X.x)([i,"access",e=>e.getClient,"call",e=>e(),"optionalAccess",e=>e.getOptions,"call",e=>e()]);if(!p||"sentry"!==p.instrumenter||"OPTIONS"===(0,X.x)([e,"access",e=>e.method,"optionalAccess",e=>e.toUpperCase,"call",e=>e()])||"HEAD"===(0,X.x)([e,"access",e=>e.method,"optionalAccess",e=>e.toUpperCase,"call",e=>e()]))return a();if(!("tracesSampleRate"in p)&&!("tracesSampler"in p))return("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.warn("Sentry `tracingHandler` is being used, but tracing is disabled. Please enable tracing by setting either `tracesSampleRate` or `tracesSampler` in your `Sentry.init()` options."),a();const n=e.headers&&(0,B.HD)(e.headers["sentry-trace"])&&(0,Rt.q)(e.headers["sentry-trace"]),s=(0,X.x)([e,"access",e=>e.headers,"optionalAccess",e=>e.baggage]),d=(0,Ee.EN)(s),[r,g]=(0,tt.oA)(e,{path:!0,method:!0}),l=D({name:r,op:"http.server",...n,metadata:{dynamicSamplingContext:n&&!d?{}:d,request:e,source:g}},{request:rt(e)});i.configureScope((e=>{e.setSpan(l)})),t.__sentry_transaction=l,t.once("finish",(()=>{setImmediate((()=>{(0,tt.dB)(l,e),l.setHttpStatus(t.statusCode),l.finish()}))})),a()}}function xt(e){const t=function(e={}){let t;if("include"in e)t={include:e.include};else{const{ip:a,request:i,transaction:p,user:n}=e;(a||i||p||n)&&(t={include:(0,s.Jr)({ip:a,request:i,transaction:p,user:n})})}return t}(e),a=(0,C.Gd)(),i=a.getClient();if(i&&Et(i)){i.initSessionFlusher();const e=a.getScope();e&&e.getSession()&&e.setSession()}return function(a,i,p){if(e&&e.flushTimeout&&e.flushTimeout>0){const t=i.end;i.end=function(a,i,p){wt(e.flushTimeout).then((()=>{t.call(this,a,i,p)})).then(null,(e=>{("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&o.kg.error(e),t.call(this,a,i,p)}))}}const n=ye.create();n.add(a),n.add(i),n.run((()=>{const e=(0,C.Gd)();e.configureScope((i=>{if(i.setSDKProcessingMetadata({request:a,requestDataOptionsFromExpressHandler:t}),Et(e.getClient())){const t=e.getScope();t&&t.setRequestSession({status:"ok"})}})),i.once("finish",(()=>{const t=e.getClient();Et(t)&&setImmediate((()=>{t&&t._captureRequestSession&&t._captureRequestSession()}))})),p()}))}}function Bt(e){const t=function(e){const t=e.status||e.statusCode||e.status_code||e.output&&e.output.statusCode;return t?parseInt(t,10):500}(e);return t>=500}function Ut(e){return function(t,a,i,p){(e&&e.shouldHandleError||Bt)(t)?N((e=>{e.setSDKProcessingMetadata({request:a});const n=i.__sentry_transaction;n&&void 0===e.getSpan()&&e.setSpan(n);const s=(0,C.Gd)().getClient();if(s&&Et(s)&&void 0!==s._sessionFlusher){const t=e.getRequestSession();t&&void 0!==t.status&&(t.status="crashed")}const d=u(t);i.sentry=d,p(t)})):p(t)}}const Pt={...i,...p},Lt=(0,C.cu)();Lt.__SENTRY__&&(Lt.__SENTRY__.extensions=Lt.__SENTRY__.extensions||{},Lt.__SENTRY__.extensions.domain=Lt.__SENTRY__.extensions.domain||ye)},790:(e,t,a)=>{"use strict";a.d(t,{ro:()=>m,lb:()=>C});var i=a(5659),p=a(2343),n=a(7597),s=a(2176),d=a(4863),r=a(3233);function o(){const e=(0,r.x1)();if(e){const t="internal_error";("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.log(`[Tracing] Transaction: ${t} -> Global error occured`),e.setStatus(t)}}var g=a(6458),l=a(3391);function A(){const e=this.getScope();if(e){const t=e.getSpan();if(t)return{"sentry-trace":t.toTraceparent()}}return{}}function c(e,t,a){if(!(0,r.zu)(t))return e.sampled=!1,e;if(void 0!==e.sampled)return e.setMetadata({sampleRate:Number(e.sampled)}),e;let i;return"function"==typeof t.tracesSampler?(i=t.tracesSampler(a),e.setMetadata({sampleRate:Number(i)})):void 0!==a.parentSampled?i=a.parentSampled:(i=t.tracesSampleRate,e.setMetadata({sampleRate:Number(i)})),s=i,((0,n.i2)(s)||"number"!=typeof s&&"boolean"!=typeof s?(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.warn(`[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(s)} of type ${JSON.stringify(typeof s)}.`),0):!(s<0||s>1)||(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${s}.`),0))?i?(e.sampled=Math.random()<i,e.sampled?(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.log(`[Tracing] starting ${e.op} transaction - ${e.name}`),e):(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.log(`[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(i)})`),e)):(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.log("[Tracing] Discarding transaction because "+("function"==typeof t.tracesSampler?"tracesSampler returned 0 or false":"a negative sampling decision was inherited or tracesSampleRate is set to 0")),e.sampled=!1,e):(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.warn("[Tracing] Discarding transaction because of invalid sample rate."),e.sampled=!1,e);var s}function I(e,t){const a=this.getClient(),i=a&&a.getOptions()||{},n=i.instrumenter||"sentry",s=e.instrumenter||"sentry";n!==s&&(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.error(`A transaction was started with instrumenter=\`${s}\`, but the SDK is configured with the \`${n}\` instrumenter.\nThe transaction will not be sampled. Please use the ${n} instrumentation to start transactions.`),e.sampled=!1);let d=new l.Y(e,this);return d=c(d,i,{parentSampled:e.parentSampled,transactionContext:e,...t}),d.sampled&&d.initSpanRecorder(i._experiments&&i._experiments.maxSpans),d}function C(e,t,a,i,p,n,s){const d=e.getClient(),r=d&&d.getOptions()||{};let o=new g.io(t,e,a,i,s,p);return o=c(o,r,{parentSampled:t.parentSampled,transactionContext:t,...n}),o.sampled&&o.initSpanRecorder(r._experiments&&r._experiments.maxSpans),o}function m(){!function(){const e=(0,i.cu)();e.__SENTRY__&&(e.__SENTRY__.extensions=e.__SENTRY__.extensions||{},e.__SENTRY__.extensions.startTransaction||(e.__SENTRY__.extensions.startTransaction=I),e.__SENTRY__.extensions.traceHeaders||(e.__SENTRY__.extensions.traceHeaders=A))}(),(0,s.KV)()&&function(){const t=(0,i.cu)();if(!t.__SENTRY__)return;const a={mongodb:()=>new((0,s.l$)(e,"./integrations/node/mongo").Mongo),mongoose:()=>new((0,s.l$)(e,"./integrations/node/mongo").Mongo)({mongoose:!0}),mysql:()=>new((0,s.l$)(e,"./integrations/node/mysql").Mysql),pg:()=>new((0,s.l$)(e,"./integrations/node/postgres").Postgres)},p=Object.keys(a).filter((e=>!!(0,s.$y)(e))).map((e=>{try{return a[e]()}catch(e){return}})).filter((e=>e));p.length>0&&(t.__SENTRY__.integrations=[...t.__SENTRY__.integrations||[],...p])}(),(0,d.o)("error",o),(0,d.o)("unhandledrejection",o)}e=a.hmd(e)},6458:(e,t,a)=>{"use strict";a.d(t,{hd:()=>o,io:()=>l,mg:()=>r,nT:()=>d});var i=a(1170),p=a(2343),n=a(5334),s=a(3391);const d=1e3,r=3e4,o=5e3;class g extends n.gB{constructor(e,t,a,i){super(i),this._pushActivity=e,this._popActivity=t,this.transactionSpanId=a}add(e){e.spanId!==this.transactionSpanId&&(e.finish=t=>{e.endTimestamp="number"==typeof t?t:(0,i._I)(),this._popActivity(e.spanId)},void 0===e.endTimestamp&&this._pushActivity(e.spanId)),super.add(e)}}class l extends s.Y{__init(){this.activities={}}__init2(){this._heartbeatCounter=0}__init3(){this._finished=!1}__init4(){this._beforeFinishCallbacks=[]}constructor(e,t,a=d,i=r,n=o,s=!1){super(e,t),this._idleHub=t,this._idleTimeout=a,this._finalTimeout=i,this._heartbeatInterval=n,this._onScope=s,l.prototype.__init.call(this),l.prototype.__init2.call(this),l.prototype.__init3.call(this),l.prototype.__init4.call(this),s&&(A(t),("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.log(`Setting idle transaction on scope. Span ID: ${this.spanId}`),t.configureScope((e=>e.setSpan(this)))),this._startIdleTimeout(),setTimeout((()=>{this._finished||(this.setStatus("deadline_exceeded"),this.finish())}),this._finalTimeout)}finish(e=(0,i._I)()){if(this._finished=!0,this.activities={},this.spanRecorder){("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.log("[Tracing] finishing IdleTransaction",new Date(1e3*e).toISOString(),this.op);for(const t of this._beforeFinishCallbacks)t(this,e);this.spanRecorder.spans=this.spanRecorder.spans.filter((t=>{if(t.spanId===this.spanId)return!0;t.endTimestamp||(t.endTimestamp=e,t.setStatus("cancelled"),("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.log("[Tracing] cancelling span since transaction ended early",JSON.stringify(t,void 0,2)));const a=t.startTimestamp<e;return a||("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.log("[Tracing] discarding Span since it happened after Transaction was finished",JSON.stringify(t,void 0,2)),a})),("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.log("[Tracing] flushing IdleTransaction")}else("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.log("[Tracing] No active IdleTransaction");return this._onScope&&A(this._idleHub),super.finish(e)}registerBeforeFinishCallback(e){this._beforeFinishCallbacks.push(e)}initSpanRecorder(e){if(!this.spanRecorder){const t=e=>{this._finished||this._pushActivity(e)},a=e=>{this._finished||this._popActivity(e)};this.spanRecorder=new g(t,a,this.spanId,e),("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.log("Starting heartbeat"),this._pingHeartbeat()}this.spanRecorder.add(this)}_cancelIdleTimeout(){this._idleTimeoutID&&(clearTimeout(this._idleTimeoutID),this._idleTimeoutID=void 0)}_startIdleTimeout(e){this._cancelIdleTimeout(),this._idleTimeoutID=setTimeout((()=>{this._finished||0!==Object.keys(this.activities).length||this.finish(e)}),this._idleTimeout)}_pushActivity(e){this._cancelIdleTimeout(),("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.log(`[Tracing] pushActivity: ${e}`),this.activities[e]=!0,("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.log("[Tracing] new activities count",Object.keys(this.activities).length)}_popActivity(e){if(this.activities[e]&&(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.log(`[Tracing] popActivity ${e}`),delete this.activities[e],("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.log("[Tracing] new activities count",Object.keys(this.activities).length)),0===Object.keys(this.activities).length){const e=(0,i._I)()+this._idleTimeout/1e3;this._startIdleTimeout(e)}}_beat(){if(this._finished)return;const e=Object.keys(this.activities).join("");e===this._prevHeartbeatString?this._heartbeatCounter++:this._heartbeatCounter=1,this._prevHeartbeatString=e,this._heartbeatCounter>=3?(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.log("[Tracing] Transaction finished because of no change for 3 heart beats"),this.setStatus("deadline_exceeded"),this.finish()):this._pingHeartbeat()}_pingHeartbeat(){("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`),setTimeout((()=>{this._beat()}),this._heartbeatInterval)}}function A(e){const t=e.getScope();t&&t.getTransaction()&&t.setSpan(void 0)}},9262:(e,t,a)=>{"use strict";a.r(t),a.d(t,{BROWSER_TRACING_INTEGRATION_ID:()=>ae,BrowserTracing:()=>pe,IdleTransaction:()=>D.io,Integrations:()=>i,Span:()=>de.Dr,SpanStatus:()=>se,TRACEPARENT_REGEXP:()=>E.K,Transaction:()=>re.Y,addExtensionMethods:()=>p.ro,defaultRequestInstrumentationOptions:()=>ee,extractTraceparentData:()=>E.q,getActiveTransaction:()=>R.x1,hasTracingEnabled:()=>R.zu,instrumentOutgoingRequests:()=>te,spanStatusfromHttpCode:()=>de.Zd,startIdleTransaction:()=>p.lb,stripUrlQueryAndFragment:()=>d.rt});var i={};a.r(i),a.d(i,{Apollo:()=>w,BrowserTracing:()=>pe,Express:()=>l,GraphQL:()=>y,Mongo:()=>v,Mysql:()=>u,Postgres:()=>m,Prisma:()=>_});var p=a(790),n=a(4307),s=a(2343),d=a(6956),r=a(442),o=a(7597);function g(e){const t=(0,n.x)([e,"call",e=>e(),"access",e=>e.getClient,"call",e=>e(),"optionalAccess",e=>e.getOptions,"call",e=>e()]);return"sentry"!==((0,n.x)([t,"optionalAccess",e=>e.instrumenter])||"sentry")}class l{static __initStatic(){this.id="Express"}__init(){this.name=l.id}constructor(e={}){l.prototype.__init.call(this),this._router=e.router||e.app,this._methods=(Array.isArray(e.methods)?e.methods:[]).concat("use")}setupOnce(e,t){this._router?g(t)?("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log("Express Integration is skipped because of instrumenter configuration."):(function(e,t=[]){t.forEach((t=>function(e,t){const a=e[t];return e[t]=function(...e){return a.call(this,...function(e,t){return e.map((e=>"function"==typeof e?A(e,t):Array.isArray(e)?e.map((e=>"function"==typeof e?A(e,t):e)):e))}(e,t))},e}(e,t)))}(this._router,this._methods),function(e){const t="settings"in e;t&&void 0===e._router&&e.lazyrouter&&e.lazyrouter();const a=t?e._router:e;if(!a)return("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.debug("Cannot instrument router for URL Parameterization (did not find a valid router)."),void(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.debug("Routing instrumentation is currently only supported in Express 4."));const i=Object.getPrototypeOf(a),p=i.process_params;i.process_params=function(e,t,a,i,s){a._reconstructedRoute||(a._reconstructedRoute="");const{layerRoutePath:g,isRegex:l,isArray:A,numExtraSegments:I}=function(e){const t=(0,n.x)([e,"access",e=>e.route,"optionalAccess",e=>e.path]),a=(0,o.Kj)(t),i=Array.isArray(t);if(!t)return{isRegex:a,isArray:i,numExtraSegments:0};const p=i?Math.max(t.reduce(((e,t)=>e+(0,d.$A)(t.toString())),0)-(0,d.$A)(e.path||""),0):0;return{layerRoutePath:c(i,t),isRegex:a,isArray:i,numExtraSegments:p}}(e);(g||l||A)&&(a._hasParameters=!0);const C=(g||e.path||"").split("/").filter((e=>e.length>0&&(l||A||!e.includes("*")))).join("/");if(C&&C.length>0&&(a._reconstructedRoute+=`/${C}${l?"/":""}`),(0,d.$A)(a.originalUrl||"")+I===(0,d.$A)(a._reconstructedRoute)){a._hasParameters||a._reconstructedRoute!==a.originalUrl&&(a._reconstructedRoute=a.originalUrl);const e=i.__sentry_transaction;if(e&&"custom"!==e.metadata.source){const t=a._reconstructedRoute||"/";e.setName(...(0,r.oA)(a,{path:!0,method:!0,customRoute:t}))}}return p.call(this,e,t,a,i,s)}}(this._router)):("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.error("ExpressIntegration is missing an Express instance")}}function A(e,t){const a=e.length;switch(a){case 2:return function(a,i){const p=i.__sentry_transaction;if(p){const a=p.startChild({description:e.name,op:`middleware.express.${t}`});i.once("finish",(()=>{a.finish()}))}return e.call(this,a,i)};case 3:return function(a,i,p){const s=i.__sentry_transaction,d=(0,n.x)([s,"optionalAccess",e=>e.startChild,"call",a=>a({description:e.name,op:`middleware.express.${t}`})]);e.call(this,a,i,(function(...e){(0,n.x)([d,"optionalAccess",e=>e.finish,"call",e=>e()]),p.call(this,...e)}))};case 4:return function(a,i,p,s){const d=p.__sentry_transaction,r=(0,n.x)([d,"optionalAccess",e=>e.startChild,"call",a=>a({description:e.name,op:`middleware.express.${t}`})]);e.call(this,a,i,p,(function(...e){(0,n.x)([r,"optionalAccess",e=>e.finish,"call",e=>e()]),s.call(this,...e)}))};default:throw new Error(`Express middleware takes 2-4 arguments. Got: ${a}`)}}function c(e,t){return e?t.map((e=>e.toString())).join(","):t&&t.toString()}l.__initStatic();var I=a(2176),C=a(535);class m{static __initStatic(){this.id="Postgres"}__init(){this.name=m.id}constructor(e={}){m.prototype.__init.call(this),this._usePgNative=!!e.usePgNative}setupOnce(e,t){if(g(t))return void(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log("Postgres Integration is skipped because of instrumenter configuration."));const a=(0,I.$y)("pg");if(!a)return void(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.error("Postgres Integration was unable to require `pg` package."));if(this._usePgNative&&!(0,n.x)([a,"access",e=>e.native,"optionalAccess",e=>e.Client]))return void(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.error("Postgres Integration was unable to access 'pg-native' bindings."));const{Client:i}=this._usePgNative?a.native:a;(0,C.hl)(i.prototype,"query",(function(e){return function(a,i,p){const s=t().getScope(),d=(0,n.x)([s,"optionalAccess",e=>e.getSpan,"call",e=>e()]),r=(0,n.x)([d,"optionalAccess",e=>e.startChild,"call",e=>e({description:"string"==typeof a?a:a.text,op:"db"})]);if("function"==typeof p)return e.call(this,a,i,(function(e,t){(0,n.x)([r,"optionalAccess",e=>e.finish,"call",e=>e()]),p(e,t)}));if("function"==typeof i)return e.call(this,a,(function(e,t){(0,n.x)([r,"optionalAccess",e=>e.finish,"call",e=>e()]),i(e,t)}));const g=void 0!==i?e.call(this,a,i):e.call(this,a);return(0,o.J8)(g)?g.then((e=>((0,n.x)([r,"optionalAccess",e=>e.finish,"call",e=>e()]),e))):((0,n.x)([r,"optionalAccess",e=>e.finish,"call",e=>e()]),g)}}))}}m.__initStatic();class u{constructor(){u.prototype.__init.call(this)}static __initStatic(){this.id="Mysql"}__init(){this.name=u.id}setupOnce(e,t){if(g(t))return void(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log("Mysql Integration is skipped because of instrumenter configuration."));const a=(0,I.$y)("mysql/lib/Connection.js");a?(0,C.hl)(a,"createQuery",(function(e){return function(a,i,p){const s=t().getScope(),d=(0,n.x)([s,"optionalAccess",e=>e.getSpan,"call",e=>e()]),r=(0,n.x)([d,"optionalAccess",e=>e.startChild,"call",e=>e({description:"string"==typeof a?a:a.sql,op:"db"})]);return"function"==typeof p?e.call(this,a,i,(function(e,t,a){(0,n.x)([r,"optionalAccess",e=>e.finish,"call",e=>e()]),p(e,t,a)})):"function"==typeof i?e.call(this,a,(function(e,t,a){(0,n.x)([r,"optionalAccess",e=>e.finish,"call",e=>e()]),i(e,t,a)})):e.call(this,a,i,p)}})):("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.error("Mysql Integration was unable to require `mysql` package.")}}u.__initStatic();const h=["aggregate","bulkWrite","countDocuments","createIndex","createIndexes","deleteMany","deleteOne","distinct","drop","dropIndex","dropIndexes","estimatedDocumentCount","find","findOne","findOneAndDelete","findOneAndReplace","findOneAndUpdate","indexes","indexExists","indexInformation","initializeOrderedBulkOp","insertMany","insertOne","isCapped","mapReduce","options","parallelCollectionScan","rename","replaceOne","stats","updateMany","updateOne"],f={bulkWrite:["operations"],countDocuments:["query"],createIndex:["fieldOrSpec"],createIndexes:["indexSpecs"],deleteMany:["filter"],deleteOne:["filter"],distinct:["key","query"],dropIndex:["indexName"],find:["query"],findOne:["query"],findOneAndDelete:["filter"],findOneAndReplace:["filter","replacement"],findOneAndUpdate:["filter","update"],indexExists:["indexes"],insertMany:["docs"],insertOne:["doc"],mapReduce:["map","reduce"],rename:["newName"],replaceOne:["filter","doc"],updateMany:["filter","update"],updateOne:["filter","update"]};class v{static __initStatic(){this.id="Mongo"}__init(){this.name=v.id}constructor(e={}){v.prototype.__init.call(this),this._operations=Array.isArray(e.operations)?e.operations:h,this._describeOperations=!("describeOperations"in e)||e.describeOperations,this._useMongoose=!!e.useMongoose}setupOnce(e,t){if(g(t))return void(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log("Mongo Integration is skipped because of instrumenter configuration."));const a=this._useMongoose?"mongoose":"mongodb",i=(0,I.$y)(a);i?this._instrumentOperations(i.Collection,this._operations,t):("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.error(`Mongo Integration was unable to require \`${a}\` package.`)}_instrumentOperations(e,t,a){t.forEach((t=>this._patchOperation(e,t,a)))}_patchOperation(e,t,a){if(!(t in e.prototype))return;const i=this._getSpanContextFromOperationArguments.bind(this);(0,C.hl)(e.prototype,t,(function(e){return function(...p){const s=p[p.length-1],d=a().getScope(),r=(0,n.x)([d,"optionalAccess",e=>e.getSpan,"call",e=>e()]);if("function"!=typeof s||"mapReduce"===t&&2===p.length){const a=(0,n.x)([r,"optionalAccess",e=>e.startChild,"call",e=>e(i(this,t,p))]),s=e.call(this,...p);if((0,o.J8)(s))return s.then((e=>((0,n.x)([a,"optionalAccess",e=>e.finish,"call",e=>e()]),e)));if((g=s)&&"object"==typeof g&&g.once&&"function"==typeof g.once){const e=s;try{e.once("close",(()=>{(0,n.x)([a,"optionalAccess",e=>e.finish,"call",e=>e()])}))}catch(e){(0,n.x)([a,"optionalAccess",e=>e.finish,"call",e=>e()])}return e}return(0,n.x)([a,"optionalAccess",e=>e.finish,"call",e=>e()]),s}var g;const l=(0,n.x)([r,"optionalAccess",e=>e.startChild,"call",e=>e(i(this,t,p.slice(0,-1)))]);return e.call(this,...p.slice(0,-1),(function(e,t){(0,n.x)([l,"optionalAccess",e=>e.finish,"call",e=>e()]),s(e,t)}))}}))}_getSpanContextFromOperationArguments(e,t,a){const i={collectionName:e.collectionName,dbName:e.dbName,namespace:e.namespace},p={op:"db",description:t,data:i},n=f[t],s=Array.isArray(this._describeOperations)?this._describeOperations.includes(t):this._describeOperations;if(!n||!s)return p;try{if("mapReduce"===t){const[e,t]=a;i[n[0]]="string"==typeof e?e:e.name||"<anonymous>",i[n[1]]="string"==typeof t?t:t.name||"<anonymous>"}else for(let e=0;e<n.length;e++)i[n[e]]=JSON.stringify(a[e])}catch(e){}return p}}v.__initStatic();class _{static __initStatic(){this.id="Prisma"}__init(){this.name=_.id}constructor(e={}){var t;_.prototype.__init.call(this),(t=e.client)&&t.$use?this._client=e.client:("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.warn(`Unsupported Prisma client provided to PrismaIntegration. Provided client: ${JSON.stringify(e.client)}`)}setupOnce(e,t){this._client?g(t)?("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log("Prisma Integration is skipped because of instrumenter configuration."):this._client.$use(((e,a)=>{const i=t().getScope(),p=(0,n.x)([i,"optionalAccess",e=>e.getSpan,"call",e=>e()]),s=e.action,d=e.model,r=(0,n.x)([p,"optionalAccess",e=>e.startChild,"call",e=>e({description:d?`${d} ${s}`:s,op:"db.sql.prisma"})]),g=a(e);return(0,o.J8)(g)?g.then((e=>((0,n.x)([r,"optionalAccess",e=>e.finish,"call",e=>e()]),e))):((0,n.x)([r,"optionalAccess",e=>e.finish,"call",e=>e()]),g)})):("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.error("PrismaIntegration is missing a Prisma Client Instance")}}_.__initStatic();class y{constructor(){y.prototype.__init.call(this)}static __initStatic(){this.id="GraphQL"}__init(){this.name=y.id}setupOnce(e,t){if(g(t))return void(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log("GraphQL Integration is skipped because of instrumenter configuration."));const a=(0,I.$y)("graphql/execution/execute.js");a?(0,C.hl)(a,"execute",(function(e){return function(...a){const i=t().getScope(),p=(0,n.x)([i,"optionalAccess",e=>e.getSpan,"call",e=>e()]),s=(0,n.x)([p,"optionalAccess",e=>e.startChild,"call",e=>e({description:"execute",op:"graphql.execute"})]);(0,n.x)([i,"optionalAccess",e=>e.setSpan,"call",e=>e(s)]);const d=e.call(this,...a);return(0,o.J8)(d)?d.then((e=>((0,n.x)([s,"optionalAccess",e=>e.finish,"call",e=>e()]),(0,n.x)([i,"optionalAccess",e=>e.setSpan,"call",e=>e(p)]),e))):((0,n.x)([s,"optionalAccess",e=>e.finish,"call",e=>e()]),(0,n.x)([i,"optionalAccess",e=>e.setSpan,"call",e=>e(p)]),d)}})):("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.error("GraphQL Integration was unable to require graphql/execution package.")}}y.__initStatic();var b=a(2844);class w{constructor(){w.prototype.__init.call(this)}static __initStatic(){this.id="Apollo"}__init(){this.name=w.id}setupOnce(e,t){if(g(t))return void(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log("Apollo Integration is skipped because of instrumenter configuration."));const a=(0,I.$y)("apollo-server-core");a?(0,C.hl)(a.ApolloServerBase.prototype,"constructSchema",(function(e){return function(){if(!this.config.resolvers)return("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&(this.config.schema?s.kg.warn("Apollo integration is not able to trace `ApolloServer` instances constructed via `schema` property."):this.config.modules&&s.kg.warn("Apollo integration is not able to trace `ApolloServer` instances constructed via `modules` property."),s.kg.error("Skipping tracing as no resolvers found on the `ApolloServer` instance.")),e.call(this);const a=(0,b.lE)(this.config.resolvers);return this.config.resolvers=a.map((e=>(Object.keys(e).forEach((a=>{Object.keys(e[a]).forEach((i=>{"function"==typeof e[a][i]&&function(e,t,a,i){(0,C.hl)(e[t],a,(function(e){return function(...p){const s=i().getScope(),d=(0,n.x)([s,"optionalAccess",e=>e.getSpan,"call",e=>e()]),r=(0,n.x)([d,"optionalAccess",e=>e.startChild,"call",e=>e({description:`${t}.${a}`,op:"graphql.resolve"})]),g=e.call(this,...p);return(0,o.J8)(g)?g.then((e=>((0,n.x)([r,"optionalAccess",e=>e.finish,"call",e=>e()]),e))):((0,n.x)([r,"optionalAccess",e=>e.finish,"call",e=>e()]),g)}}))}(e,a,i,t)}))})),e))),e.call(this)}})):("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.error("Apollo Integration was unable to require apollo-server-core package.")}}w.__initStatic();var S=a(5375),E=a(7638),T=a(9181),N=a(8464),D=a(6458),R=a(3233);const O=a(1235).n2;var k=a(1170);const V=(e,t,a)=>{let i,p;return n=>{t.value>=0&&(n||a)&&(p=t.value-(i||0),(p||void 0===i)&&(i=t.value,t.delta=p,e(t)))}},x=()=>O.__WEB_VITALS_POLYFILL__?O.performance&&(performance.getEntriesByType&&performance.getEntriesByType("navigation")[0]||(()=>{const e=O.performance.timing,t=O.performance.navigation.type,a={entryType:"navigation",startTime:0,type:2==t?"back_forward":1===t?"reload":"navigate"};for(const t in e)"navigationStart"!==t&&"toJSON"!==t&&(a[t]=Math.max(e[t]-e.navigationStart,0));return a})()):O.performance&&performance.getEntriesByType&&performance.getEntriesByType("navigation")[0],B=()=>{const e=x();return e&&e.activationStart||0},U=(e,t)=>{const a=x();let i="navigate";return a&&(i=O.document.prerendering||B()>0?"prerender":a.type.replace(/_/g,"-")),{name:e,value:void 0===t?-1:t,rating:"good",delta:0,entries:[],id:`v3-${Date.now()}-${Math.floor(8999999999999*Math.random())+1e12}`,navigationType:i}},P=(e,t,a)=>{try{if(PerformanceObserver.supportedEntryTypes.includes(e)){const i=new PerformanceObserver((e=>{t(e.getEntries())}));return i.observe(Object.assign({type:e,buffered:!0},a||{})),i}}catch(e){}},L=(e,t)=>{const a=i=>{"pagehide"!==i.type&&"hidden"!==O.document.visibilityState||(e(i),t&&(removeEventListener("visibilitychange",a,!0),removeEventListener("pagehide",a,!0)))};addEventListener("visibilitychange",a,!0),addEventListener("pagehide",a,!0)};let G=-1;const M=()=>(G<0&&(G="hidden"!==O.document.visibilityState||O.document.prerendering?1/0:0,L((({timeStamp:e})=>{G=e}),!0)),{get firstHiddenTime(){return G}}),j={};function F(e){return"number"==typeof e&&isFinite(e)}function Y(e,{startTimestamp:t,...a}){return t&&e.startTimestamp>t&&(e.startTimestamp=t),e.startChild({startTimestamp:t,...a})}function W(){return O&&O.addEventListener&&O.performance}let J,H,Z=0,z={};function Q(){const e=W();e&&k.Z1&&(e.mark&&O.performance.mark("sentry-tracing-init"),(e=>{const t=U("CLS",0);let a,i=0,p=[];const n=e=>{e.forEach((e=>{if(!e.hadRecentInput){const n=p[0],s=p[p.length-1];i&&0!==p.length&&e.startTime-s.startTime<1e3&&e.startTime-n.startTime<5e3?(i+=e.value,p.push(e)):(i=e.value,p=[e]),i>t.value&&(t.value=i,t.entries=p,a&&a())}}))},d=P("layout-shift",n);d&&(a=V((e=>{const t=e.entries.pop();t&&(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log("[Measurements] Adding CLS"),z.cls={value:e.value,unit:""},H=t)}),t),L((()=>{n(d.takeRecords()),a(!0)})))})(),(e=>{const t=M(),a=U("LCP");let i;const p=e=>{const p=e[e.length-1];if(p){const e=Math.max(p.startTime-B(),0);e<t.firstHiddenTime&&(a.value=e,a.entries=[p],i())}},n=P("largest-contentful-paint",p);if(n){i=V((e=>{const t=e.entries.pop();t&&(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log("[Measurements] Adding LCP"),z.lcp={value:e.value,unit:"millisecond"},J=t)}),a);const e=()=>{j[a.id]||(p(n.takeRecords()),n.disconnect(),j[a.id]=!0,i(!0))};["keydown","click"].forEach((t=>{addEventListener(t,e,{once:!0,capture:!0})})),L(e,!0)}})(),(e=>{const t=M(),a=U("FID");let i;const p=e=>{e.startTime<t.firstHiddenTime&&(a.value=e.processingStart-e.startTime,a.entries.push(e),i(!0))},n=e=>{e.forEach(p)},d=P("first-input",n);i=V((e=>{const t=e.entries.pop();if(!t)return;const a=(0,R.XL)(k.Z1),i=(0,R.XL)(t.startTime);("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log("[Measurements] Adding FID"),z.fid={value:e.value,unit:"millisecond"},z["mark.fid"]={value:a+i,unit:"second"}}),a),d&&L((()=>{n(d.takeRecords()),d.disconnect()}),!0)})())}function q(e,t,a,i,p,n){const s=n?t[n]:t[`${a}End`],d=t[`${a}Start`];d&&s&&Y(e,{op:"browser",description:(0,S.h)(p,(()=>a)),startTimestamp:i+(0,R.XL)(d),endTimestamp:i+(0,R.XL)(s)})}var K=a(4863),X=a(7321);const $=["localhost",/^\//],ee={traceFetch:!0,traceXHR:!0,tracingOrigins:$,tracePropagationTargets:$};function te(e){const{traceFetch:t,traceXHR:a,tracePropagationTargets:i,tracingOrigins:p,shouldCreateSpanForRequest:n}={traceFetch:ee.traceFetch,traceXHR:ee.traceXHR,...e},s="function"==typeof n?n:e=>!0,d=e=>function(e,t){return(0,X.U0)(e,t||$)}(e,i||p),r={};t&&(0,K.o)("fetch",(e=>{!function(e,t,a,i){if(!(0,R.zu)()||!e.fetchData||!t(e.fetchData.url))return;if(e.endTimestamp){const t=e.fetchData.__span;if(!t)return;const a=i[t];return void(a&&(e.response?a.setHttpStatus(e.response.status):e.error&&a.setStatus("internal_error"),a.finish(),delete i[t]))}const p=(0,R.x1)();if(p){const t=p.startChild({data:{...e.fetchData,type:"fetch"},description:`${e.fetchData.method} ${e.fetchData.url}`,op:"http.client"});e.fetchData.__span=t.spanId,i[t.spanId]=t;const n=e.args[0];e.args[1]=e.args[1]||{};const s=e.args[1];a(e.fetchData.url)&&(s.headers=function(e,t,a,i){const p=(0,T.IQ)(t),n=a.toTraceparent(),s="undefined"!=typeof Request&&(0,o.V9)(e,Request)?e.headers:i.headers;if(s){if("undefined"!=typeof Headers&&(0,o.V9)(s,Headers)){const e=new Headers(s);return e.append("sentry-trace",n),p&&e.append(T.bU,p),e}if(Array.isArray(s)){const e=[...s,["sentry-trace",n]];return p&&e.push([T.bU,p]),e}{const e="baggage"in s?s.baggage:void 0,t=[];return Array.isArray(e)?t.push(...e):e&&t.push(e),p&&t.push(p),{...s,"sentry-trace":n,baggage:t.length>0?t.join(","):void 0}}}return{"sentry-trace":n,baggage:p}}(n,p.getDynamicSamplingContext(),t,s),p.metadata.propagations++)}}(e,s,d,r)})),a&&(0,K.o)("xhr",(e=>{!function(e,t,a,i){if(!(0,R.zu)()||e.xhr&&e.xhr.__sentry_own_request__||!(e.xhr&&e.xhr.__sentry_xhr__&&t(e.xhr.__sentry_xhr__.url)))return;const p=e.xhr.__sentry_xhr__;if(e.endTimestamp){const t=e.xhr.__sentry_xhr_span_id__;if(!t)return;const a=i[t];return void(a&&(a.setHttpStatus(p.status_code),a.finish(),delete i[t]))}const n=(0,R.x1)();if(n){const t=n.startChild({data:{...p.data,type:"xhr",method:p.method,url:p.url},description:`${p.method} ${p.url}`,op:"http.client"});if(e.xhr.__sentry_xhr_span_id__=t.spanId,i[e.xhr.__sentry_xhr_span_id__]=t,e.xhr.setRequestHeader&&a(e.xhr.__sentry_xhr__.url))try{e.xhr.setRequestHeader("sentry-trace",t.toTraceparent());const a=n.getDynamicSamplingContext(),i=(0,T.IQ)(a);i&&e.xhr.setRequestHeader(T.bU,i),n.metadata.propagations++}catch(e){}}}(e,s,d,r)}))}const ae="BrowserTracing",ie={idleTimeout:D.nT,finalTimeout:D.mg,heartbeatInterval:D.hd,markBackgroundTransactions:!0,routingInstrumentation:function(e,t=!0,a=!0){if(!O||!O.location)return void(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.warn("Could not initialize routing instrumentation due to invalid location"));let i,p=O.location.href;t&&(i=e({name:O.location.pathname,op:"pageload",metadata:{source:"url"}})),a&&(0,K.o)("history",(({to:t,from:a})=>{void 0===a&&p&&-1!==p.indexOf(t)?p=void 0:a!==t&&(p=void 0,i&&(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log(`[Tracing] Finishing current transaction with op: ${i.op}`),i.finish()),i=e({name:O.location.pathname,op:"navigation",metadata:{source:"url"}}))}))},startTransactionOnLocationChange:!0,startTransactionOnPageLoad:!0,_experiments:{enableLongTask:!0,enableInteractions:!1},...ee};class pe{__init(){this.name=ae}constructor(e){pe.prototype.__init.call(this),this.options={...ie,...e},e&&!e.tracePropagationTargets&&e.tracingOrigins&&(this.options.tracePropagationTargets=e.tracingOrigins),Q(),(0,n.x)([this,"access",e=>e.options,"access",e=>e._experiments,"optionalAccess",e=>e.enableLongTask])&&P("longtask",(e=>{for(const t of e){const e=(0,R.x1)();if(!e)return;const a=(0,R.XL)(k.Z1+t.startTime),i=(0,R.XL)(t.duration);e.startChild({description:"Main UI thread blocked",op:"ui.long-task",startTimestamp:a,endTimestamp:a+i})}}))}setupOnce(e,t){this._getCurrentHub=t;const{routingInstrumentation:a,startTransactionOnLocationChange:i,startTransactionOnPageLoad:p,markBackgroundTransactions:d,traceFetch:r,traceXHR:o,tracePropagationTargets:g,shouldCreateSpanForRequest:l,_experiments:A}=this.options;a((e=>this._createRouteTransaction(e)),p,i),d&&(O&&O.document?O.document.addEventListener("visibilitychange",(()=>{const e=(0,R.x1)();if(O.document.hidden&&e){const t="cancelled";("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log(`[Tracing] Transaction: ${t} -> since tab moved to the background, op: ${e.op}`),e.status||e.setStatus(t),e.setTag("visibilitychange","document.hidden"),e.finish()}})):("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.warn("[Tracing] Could not set up background tab detection due to lack of global document")),(0,n.x)([A,"optionalAccess",e=>e.enableInteractions])&&this._registerInteractionListener(),te({traceFetch:r,traceXHR:o,tracePropagationTargets:g,shouldCreateSpanForRequest:l})}_createRouteTransaction(e){if(!this._getCurrentHub)return void(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.warn(`[Tracing] Did not create ${e.op} transaction because _getCurrentHub is invalid.`));const{beforeNavigate:t,idleTimeout:a,finalTimeout:i,heartbeatInterval:d}=this.options,r="pageload"===e.op,o=r?ne("sentry-trace"):null,g=r?ne("baggage"):null,l=o?(0,E.q)(o):void 0,A=g?(0,T.EN)(g):void 0,c={...e,...l,metadata:{...e.metadata,dynamicSamplingContext:l&&!A?{}:A},trimEnd:!0},I="function"==typeof t?t(c):c,C=void 0===I?{...c,sampled:!1}:I;C.metadata=C.name!==c.name?{...C.metadata,source:"custom"}:C.metadata,this._latestRouteName=C.name,this._latestRouteSource=(0,n.x)([C,"access",e=>e.metadata,"optionalAccess",e=>e.source]),!1===C.sampled&&("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log(`[Tracing] Will not send ${C.op} transaction because of beforeNavigate.`),("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log(`[Tracing] Starting ${C.op} transaction on scope`);const m=this._getCurrentHub(),{location:u}=O,h=(0,p.lb)(m,C,a,i,!0,{location:u},d);return h.registerBeforeFinishCallback((e=>{!function(e){const t=W();if(!t||!O.performance.getEntries||!k.Z1)return;("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log("[Tracing] Adding & adjusting spans using Performance API");const a=(0,R.XL)(k.Z1),i=t.getEntries();let p,n;if(i.slice(Z).forEach((t=>{const i=(0,R.XL)(t.startTime),d=(0,R.XL)(t.duration);if(!("navigation"===e.op&&a+i<e.startTimestamp))switch(t.entryType){case"navigation":!function(e,t,a){["unloadEvent","redirect","domContentLoadedEvent","loadEvent","connect"].forEach((i=>{q(e,t,i,a)})),q(e,t,"secureConnection",a,"TLS/SSL","connectEnd"),q(e,t,"fetch",a,"cache","domainLookupStart"),q(e,t,"domainLookup",a,"DNS"),function(e,t,a){Y(e,{op:"browser",description:"request",startTimestamp:a+(0,R.XL)(t.requestStart),endTimestamp:a+(0,R.XL)(t.responseEnd)}),Y(e,{op:"browser",description:"response",startTimestamp:a+(0,R.XL)(t.responseStart),endTimestamp:a+(0,R.XL)(t.responseEnd)})}(e,t,a)}(e,t,a),p=a+(0,R.XL)(t.responseStart),n=a+(0,R.XL)(t.requestStart);break;case"mark":case"paint":case"measure":{!function(e,t,a,i,p){const n=p+a,s=n+i;Y(e,{description:t.name,endTimestamp:s,op:t.entryType,startTimestamp:n})}(e,t,i,d,a);const p=M(),n=t.startTime<p.firstHiddenTime;"first-paint"===t.name&&n&&(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log("[Measurements] Adding FP"),z.fp={value:t.startTime,unit:"millisecond"}),"first-contentful-paint"===t.name&&n&&(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log("[Measurements] Adding FCP"),z.fcp={value:t.startTime,unit:"millisecond"});break}case"resource":{const p=t.name.replace(O.location.origin,"");!function(e,t,a,i,p,n){if("xmlhttprequest"===t.initiatorType||"fetch"===t.initiatorType)return;const s={};"transferSize"in t&&(s["Transfer Size"]=t.transferSize),"encodedBodySize"in t&&(s["Encoded Body Size"]=t.encodedBodySize),"decodedBodySize"in t&&(s["Decoded Body Size"]=t.decodedBodySize);const d=n+i;Y(e,{description:a,endTimestamp:d+p,op:t.initiatorType?`resource.${t.initiatorType}`:"resource.other",startTimestamp:d,data:s})}(e,t,p,i,d,a);break}}})),Z=Math.max(i.length-1,0),function(e){const t=O.navigator;if(!t)return;const a=t.connection;a&&(a.effectiveType&&e.setTag("effectiveConnectionType",a.effectiveType),a.type&&e.setTag("connectionType",a.type),F(a.rtt)&&(z["connection.rtt"]={value:a.rtt,unit:"millisecond"})),F(t.deviceMemory)&&e.setTag("deviceMemory",`${t.deviceMemory} GB`),F(t.hardwareConcurrency)&&e.setTag("hardwareConcurrency",String(t.hardwareConcurrency))}(e),"pageload"===e.op){"number"==typeof p&&(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log("[Measurements] Adding TTFB"),z.ttfb={value:1e3*(p-e.startTimestamp),unit:"millisecond"},"number"==typeof n&&n<=p&&(z["ttfb.requestTime"]={value:1e3*(p-n),unit:"millisecond"})),["fcp","fp","lcp"].forEach((t=>{if(!z[t]||a>=e.startTimestamp)return;const i=z[t].value,p=a+(0,R.XL)(i),n=Math.abs(1e3*(p-e.startTimestamp)),d=n-i;("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log(`[Measurements] Normalized ${t} from ${i} to ${n} (${d})`),z[t].value=n}));const t=z["mark.fid"];t&&z.fid&&(Y(e,{description:"first input delay",endTimestamp:t.value+(0,R.XL)(z.fid.value),op:"ui.action",startTimestamp:t.value}),delete z["mark.fid"]),"fcp"in z||delete z.cls,Object.keys(z).forEach((t=>{e.setMeasurement(t,z[t].value,z[t].unit)})),function(e){J&&(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log("[Measurements] Adding LCP Data"),J.element&&e.setTag("lcp.element",(0,N.Rt)(J.element)),J.id&&e.setTag("lcp.id",J.id),J.url&&e.setTag("lcp.url",J.url.trim().slice(0,200)),e.setTag("lcp.size",J.size)),H&&H.sources&&(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log("[Measurements] Adding CLS Data"),H.sources.forEach(((t,a)=>e.setTag(`cls.source.${a+1}`,(0,N.Rt)(t.node)))))}(e)}J=void 0,H=void 0,z={}}(e)})),h}_registerInteractionListener(){let e;const t=()=>{const{idleTimeout:t,finalTimeout:a,heartbeatInterval:i}=this.options,n="ui.action.click";if(e&&(e.finish(),e=void 0),!this._getCurrentHub)return void(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.warn(`[Tracing] Did not create ${n} transaction because _getCurrentHub is invalid.`));if(!this._latestRouteName)return void(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.warn(`[Tracing] Did not create ${n} transaction because _latestRouteName is missing.`));const d=this._getCurrentHub(),{location:r}=O,o={name:this._latestRouteName,op:n,trimEnd:!0,metadata:{source:(0,S.h)(this._latestRouteSource,(()=>"url"))}};e=(0,p.lb)(d,o,t,a,!0,{location:r},i)};["click"].forEach((e=>{addEventListener(e,t,{once:!1,capture:!0})}))}}function ne(e){const t=(0,N.qT)(`meta[name=${e}]`);return t?t.getAttribute("content"):null}var se,de=a(5334);!function(e){e.Ok="ok",e.DeadlineExceeded="deadline_exceeded",e.Unauthenticated="unauthenticated",e.PermissionDenied="permission_denied",e.NotFound="not_found",e.ResourceExhausted="resource_exhausted",e.InvalidArgument="invalid_argument",e.Unimplemented="unimplemented",e.Unavailable="unavailable",e.InternalError="internal_error",e.UnknownError="unknown_error",e.Cancelled="cancelled",e.AlreadyExists="already_exists",e.FailedPrecondition="failed_precondition",e.Aborted="aborted",e.OutOfRange="out_of_range",e.DataLoss="data_loss"}(se||(se={}));var re=a(3391);("undefined"==typeof __SENTRY_TRACING__||__SENTRY_TRACING__)&&(0,p.ro)()},5334:(e,t,a)=>{"use strict";a.d(t,{Dr:()=>o,Zd:()=>g,gB:()=>r});var i=a(5375),p=a(2844),n=a(1170),s=a(2343),d=a(535);class r{__init(){this.spans=[]}constructor(e=1e3){r.prototype.__init.call(this),this._maxlen=e}add(e){this.spans.length>this._maxlen?e.spanRecorder=void 0:this.spans.push(e)}}class o{__init2(){this.traceId=(0,p.DM)()}__init3(){this.spanId=(0,p.DM)().substring(16)}__init4(){this.startTimestamp=(0,n._I)()}__init5(){this.tags={}}__init6(){this.data={}}__init7(){this.instrumenter="sentry"}constructor(e){if(o.prototype.__init2.call(this),o.prototype.__init3.call(this),o.prototype.__init4.call(this),o.prototype.__init5.call(this),o.prototype.__init6.call(this),o.prototype.__init7.call(this),!e)return this;e.traceId&&(this.traceId=e.traceId),e.spanId&&(this.spanId=e.spanId),e.parentSpanId&&(this.parentSpanId=e.parentSpanId),"sampled"in e&&(this.sampled=e.sampled),e.op&&(this.op=e.op),e.description&&(this.description=e.description),e.data&&(this.data=e.data),e.tags&&(this.tags=e.tags),e.status&&(this.status=e.status),e.startTimestamp&&(this.startTimestamp=e.startTimestamp),e.endTimestamp&&(this.endTimestamp=e.endTimestamp),e.instrumenter&&(this.instrumenter=e.instrumenter)}startChild(e){const t=new o({...e,parentSpanId:this.spanId,sampled:this.sampled,traceId:this.traceId});if(t.spanRecorder=this.spanRecorder,t.spanRecorder&&t.spanRecorder.add(t),t.transaction=this.transaction,("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&t.transaction){const a=`[Tracing] Starting '${e&&e.op||"< unknown op >"}' span on transaction '${t.transaction.name||"< unknown name >"}' (${t.transaction.spanId}).`;t.transaction.metadata.spanMetadata[t.spanId]={logMessage:a},s.kg.log(a)}return t}setTag(e,t){return this.tags={...this.tags,[e]:t},this}setData(e,t){return this.data={...this.data,[e]:t},this}setStatus(e){return this.status=e,this}setHttpStatus(e){this.setTag("http.status_code",String(e));const t=g(e);return"unknown_error"!==t&&this.setStatus(t),this}isSuccess(){return"ok"===this.status}finish(e){if(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&this.transaction&&this.transaction.spanId!==this.spanId){const{logMessage:e}=this.transaction.metadata.spanMetadata[this.spanId];e&&s.kg.log(e.replace("Starting","Finishing"))}this.endTimestamp="number"==typeof e?e:(0,n._I)()}toTraceparent(){let e="";return void 0!==this.sampled&&(e=this.sampled?"-1":"-0"),`${this.traceId}-${this.spanId}${e}`}toContext(){return(0,d.Jr)({data:this.data,description:this.description,endTimestamp:this.endTimestamp,op:this.op,parentSpanId:this.parentSpanId,sampled:this.sampled,spanId:this.spanId,startTimestamp:this.startTimestamp,status:this.status,tags:this.tags,traceId:this.traceId})}updateWithContext(e){return this.data=(0,i.h)(e.data,(()=>({}))),this.description=e.description,this.endTimestamp=e.endTimestamp,this.op=e.op,this.parentSpanId=e.parentSpanId,this.sampled=e.sampled,this.spanId=(0,i.h)(e.spanId,(()=>this.spanId)),this.startTimestamp=(0,i.h)(e.startTimestamp,(()=>this.startTimestamp)),this.status=e.status,this.tags=(0,i.h)(e.tags,(()=>({}))),this.traceId=(0,i.h)(e.traceId,(()=>this.traceId)),this}getTraceContext(){return(0,d.Jr)({data:Object.keys(this.data).length>0?this.data:void 0,description:this.description,op:this.op,parent_span_id:this.parentSpanId,span_id:this.spanId,status:this.status,tags:Object.keys(this.tags).length>0?this.tags:void 0,trace_id:this.traceId})}toJSON(){return(0,d.Jr)({data:Object.keys(this.data).length>0?this.data:void 0,description:this.description,op:this.op,parent_span_id:this.parentSpanId,span_id:this.spanId,start_timestamp:this.startTimestamp,status:this.status,tags:Object.keys(this.tags).length>0?this.tags:void 0,timestamp:this.endTimestamp,trace_id:this.traceId})}}function g(e){if(e<400&&e>=100)return"ok";if(e>=400&&e<500)switch(e){case 401:return"unauthenticated";case 403:return"permission_denied";case 404:return"not_found";case 409:return"already_exists";case 413:return"failed_precondition";case 429:return"resource_exhausted";default:return"invalid_argument"}if(e>=500&&e<600)switch(e){case 501:return"unimplemented";case 503:return"unavailable";case 504:return"deadline_exceeded";default:return"internal_error"}return"unknown_error"}},3391:(e,t,a)=>{"use strict";a.d(t,{Y:()=>o});var i=a(5375),p=a(5659),n=a(1170),s=a(2343),d=a(535),r=a(5334);class o extends r.Dr{__init(){this._measurements={}}__init2(){this._contexts={}}__init3(){this._frozenDynamicSamplingContext=void 0}constructor(e,t){super(e),o.prototype.__init.call(this),o.prototype.__init2.call(this),o.prototype.__init3.call(this),this._hub=t||(0,p.Gd)(),this._name=e.name||"",this.metadata={source:"custom",...e.metadata,spanMetadata:{},changes:[],propagations:0},this._trimEnd=e.trimEnd,this.transaction=this;const a=this.metadata.dynamicSamplingContext;a&&(this._frozenDynamicSamplingContext={...a})}get name(){return this._name}set name(e){this.setName(e)}setName(e,t="custom"){e===this.name&&t===this.metadata.source||this.metadata.changes.push({source:this.metadata.source,timestamp:(0,n.ph)(),propagations:this.metadata.propagations}),this._name=e,this.metadata.source=t}initSpanRecorder(e=1e3){this.spanRecorder||(this.spanRecorder=new r.gB(e)),this.spanRecorder.add(this)}setContext(e,t){null===t?delete this._contexts[e]:this._contexts[e]=t}setMeasurement(e,t,a=""){this._measurements[e]={value:t,unit:a}}setMetadata(e){this.metadata={...this.metadata,...e}}finish(e){if(void 0!==this.endTimestamp)return;if(this.name||(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.warn("Transaction has no name, falling back to `<unlabeled transaction>`."),this.name="<unlabeled transaction>"),super.finish(e),!0!==this.sampled){("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log("[Tracing] Discarding transaction because its trace was not chosen to be sampled.");const e=this._hub.getClient();return void(e&&e.recordDroppedEvent("sample_rate","transaction"))}const t=this.spanRecorder?this.spanRecorder.spans.filter((e=>e!==this&&e.endTimestamp)):[];this._trimEnd&&t.length>0&&(this.endTimestamp=t.reduce(((e,t)=>e.endTimestamp&&t.endTimestamp?e.endTimestamp>t.endTimestamp?e:t:e)).endTimestamp);const a=this.metadata,i={contexts:{...this._contexts,trace:this.getTraceContext()},spans:t,start_timestamp:this.startTimestamp,tags:this.tags,timestamp:this.endTimestamp,transaction:this.name,type:"transaction",sdkProcessingMetadata:{...a,dynamicSamplingContext:this.getDynamicSamplingContext()},...a.source&&{transaction_info:{source:a.source,changes:a.changes,propagations:a.propagations}}};return Object.keys(this._measurements).length>0&&(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log("[Measurements] Adding measurements to transaction",JSON.stringify(this._measurements,void 0,2)),i.measurements=this._measurements),("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&s.kg.log(`[Tracing] Finishing ${this.op} transaction: ${this.name}.`),this._hub.captureEvent(i)}toContext(){const e=super.toContext();return(0,d.Jr)({...e,name:this.name,trimEnd:this._trimEnd})}updateWithContext(e){return super.updateWithContext(e),this.name=(0,i.h)(e.name,(()=>"")),this._trimEnd=e.trimEnd,this}getDynamicSamplingContext(){if(this._frozenDynamicSamplingContext)return this._frozenDynamicSamplingContext;const e=this._hub||(0,p.Gd)(),t=e&&e.getClient();if(!t)return{};const{environment:a,release:i}=t.getOptions()||{},{publicKey:n}=t.getDsn()||{},s=this.metadata.sampleRate,r=void 0!==s?s.toString():void 0,o=e.getScope(),{segment:g}=o&&o.getUser()||{},l=this.metadata.source,A=l&&"url"!==l?this.name:void 0;return(0,d.Jr)({environment:a,release:i,transaction:A,user_segment:g,public_key:n,trace_id:this.traceId,sample_rate:r})}}},3233:(e,t,a)=>{"use strict";a.d(t,{XL:()=>s,x1:()=>n,zu:()=>p});var i=a(5659);function p(e){const t=(0,i.Gd)().getClient(),a=e||t&&t.getOptions();return!!a&&("tracesSampleRate"in a||"tracesSampler"in a)}function n(e){const t=(e||(0,i.Gd)()).getScope();return t&&t.getTransaction()}function s(e){return e/1e3}},9181:(e,t,a)=>{"use strict";a.d(t,{EN:()=>d,IQ:()=>r,bU:()=>n});var i=a(7597),p=a(2343);const n="baggage",s=/^sentry-/;function d(e){if(!(0,i.HD)(e)&&!Array.isArray(e))return;let t={};if(Array.isArray(e))t=e.reduce(((e,t)=>({...e,...o(t)})),{});else{if(!e)return;t=o(e)}const a=Object.entries(t).reduce(((e,[t,a])=>(t.match(s)&&(e[t.slice("sentry-".length)]=a),e)),{});return Object.keys(a).length>0?a:void 0}function r(e){return function(e){if(0!==Object.keys(e).length)return Object.entries(e).reduce(((e,[t,a],i)=>{const n=`${encodeURIComponent(t)}=${encodeURIComponent(a)}`,s=0===i?n:`${e},${n}`;return s.length>8192?(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.warn(`Not adding key: ${t} with val: ${a} to baggage header due to exceeding baggage size limits.`),e):s}),"")}(Object.entries(e).reduce(((e,[t,a])=>(a&&(e[`sentry-${t}`]=a),e)),{}))}function o(e){return e.split(",").map((e=>e.split("=").map((e=>decodeURIComponent(e.trim()))))).reduce(((e,[t,a])=>(e[t]=a,e)),{})}},8464:(e,t,a)=>{"use strict";a.d(t,{Rt:()=>n,qT:()=>d});var i=a(7597);const p=(0,a(1235).Rf)();function n(e,t={}){try{let a=e;const i=5,p=[];let n=0,d=0;const r=" > ",o=r.length;let g;const l=Array.isArray(t)?t:t.keyAttrs,A=!Array.isArray(t)&&t.maxStringLength||80;for(;a&&n++<i&&(g=s(a,l),!("html"===g||n>1&&d+p.length*o+g.length>=A));)p.push(g),d+=g.length,a=a.parentNode;return p.reverse().join(r)}catch(e){return"<unknown>"}}function s(e,t){const a=e,p=[];let n,s,d,r,o;if(!a||!a.tagName)return"";p.push(a.tagName.toLowerCase());const g=t&&t.length?t.filter((e=>a.getAttribute(e))).map((e=>[e,a.getAttribute(e)])):null;if(g&&g.length)g.forEach((e=>{p.push(`[${e[0]}="${e[1]}"]`)}));else if(a.id&&p.push(`#${a.id}`),n=a.className,n&&(0,i.HD)(n))for(s=n.split(/\s+/),o=0;o<s.length;o++)p.push(`.${s[o]}`);const l=["type","name","title","alt"];for(o=0;o<l.length;o++)d=l[o],r=a.getAttribute(d),r&&p.push(`[${d}="${r}"]`);return p.join("")}function d(e){return p.document&&p.document.querySelector?p.document.querySelector(e):null}},5375:(e,t,a)=>{"use strict";function i(e,t){return null!=e?e:t()}a.d(t,{h:()=>i})},4307:(e,t,a)=>{"use strict";function i(e){let t,a=e[0],i=1;for(;i<e.length;){const p=e[i],n=e[i+1];if(i+=2,("optionalAccess"===p||"optionalCall"===p)&&null==a)return;"access"===p||"optionalAccess"===p?(t=a,a=n(a)):"call"!==p&&"optionalCall"!==p||(a=n(((...e)=>a.call(t,...e))),t=void 0)}return a}a.d(t,{x:()=>i})},4863:(e,t,a)=>{"use strict";a.d(t,{o:()=>I});var i=a(7597),p=a(2343),n=a(535),s=a(360),d=a(1235);const r=(0,d.Rf)();function o(e){return e&&/^function fetch\(\)\s+\{\s+\[native code\]\s+\}$/.test(e.toString())}const g=(0,d.Rf)(),l={},A={};function c(e){if(!A[e])switch(A[e]=!0,e){case"console":"console"in g&&p.RU.forEach((function(e){e in g.console&&(0,n.hl)(g.console,e,(function(t){return function(...a){C("console",{args:a,level:e}),t&&t.apply(g.console,a)}}))}));break;case"dom":!function(){if(!("document"in g))return;const e=C.bind(null,"dom"),t=_(e,!0);g.document.addEventListener("click",t,!1),g.document.addEventListener("keypress",t,!1),["EventTarget","Node"].forEach((t=>{const a=g[t]&&g[t].prototype;a&&a.hasOwnProperty&&a.hasOwnProperty("addEventListener")&&((0,n.hl)(a,"addEventListener",(function(t){return function(a,i,p){if("click"===a||"keypress"==a)try{const i=this,n=i.__sentry_instrumentation_handlers__=i.__sentry_instrumentation_handlers__||{},s=n[a]=n[a]||{refCount:0};if(!s.handler){const i=_(e);s.handler=i,t.call(this,a,i,p)}s.refCount++}catch(e){}return t.call(this,a,i,p)}})),(0,n.hl)(a,"removeEventListener",(function(e){return function(t,a,i){if("click"===t||"keypress"==t)try{const a=this,p=a.__sentry_instrumentation_handlers__||{},n=p[t];n&&(n.refCount--,n.refCount<=0&&(e.call(this,t,n.handler,i),n.handler=void 0,delete p[t]),0===Object.keys(p).length&&delete a.__sentry_instrumentation_handlers__)}catch(e){}return e.call(this,t,a,i)}})))}))}();break;case"xhr":!function(){if(!("XMLHttpRequest"in g))return;const e=XMLHttpRequest.prototype;(0,n.hl)(e,"open",(function(e){return function(...t){const a=this,p=t[1],s=a.__sentry_xhr__={method:(0,i.HD)(t[0])?t[0].toUpperCase():t[0],url:t[1]};(0,i.HD)(p)&&"POST"===s.method&&p.match(/sentry_key/)&&(a.__sentry_own_request__=!0);const d=function(){if(4===a.readyState){try{s.status_code=a.status}catch(e){}C("xhr",{args:t,endTimestamp:Date.now(),startTimestamp:Date.now(),xhr:a})}};return"onreadystatechange"in a&&"function"==typeof a.onreadystatechange?(0,n.hl)(a,"onreadystatechange",(function(e){return function(...t){return d(),e.apply(a,t)}})):a.addEventListener("readystatechange",d),e.apply(a,t)}})),(0,n.hl)(e,"send",(function(e){return function(...t){return this.__sentry_xhr__&&void 0!==t[0]&&(this.__sentry_xhr__.body=t[0]),C("xhr",{args:t,startTimestamp:Date.now(),xhr:this}),e.apply(this,t)}}))}();break;case"fetch":(function(){if(!function(){if(!("fetch"in r))return!1;try{return new Headers,new Request("http://www.example.com"),new Response,!0}catch(e){return!1}}())return!1;if(o(r.fetch))return!0;let e=!1;const t=r.document;if(t&&"function"==typeof t.createElement)try{const a=t.createElement("iframe");a.hidden=!0,t.head.appendChild(a),a.contentWindow&&a.contentWindow.fetch&&(e=o(a.contentWindow.fetch)),t.head.removeChild(a)}catch(e){("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.warn("Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ",e)}return e})()&&(0,n.hl)(g,"fetch",(function(e){return function(...t){const a={args:t,fetchData:{method:m(t),url:u(t)},startTimestamp:Date.now()};return C("fetch",{...a}),e.apply(g,t).then((e=>(C("fetch",{...a,endTimestamp:Date.now(),response:e}),e)),(e=>{throw C("fetch",{...a,endTimestamp:Date.now(),error:e}),e}))}}));break;case"history":!function(){if(!function(){const e=r.chrome,t=e&&e.app&&e.app.runtime,a="history"in r&&!!r.history.pushState&&!!r.history.replaceState;return!t&&a}())return;const e=g.onpopstate;function t(e){return function(...t){const a=t.length>2?t[2]:void 0;if(a){const e=h,t=String(a);h=t,C("history",{from:e,to:t})}return e.apply(this,t)}}g.onpopstate=function(...t){const a=g.location.href,i=h;if(h=a,C("history",{from:i,to:a}),e)try{return e.apply(this,t)}catch(e){}},(0,n.hl)(g.history,"pushState",t),(0,n.hl)(g.history,"replaceState",t)}();break;case"error":y=g.onerror,g.onerror=function(e,t,a,i,p){return C("error",{column:i,error:p,line:a,msg:e,url:t}),!!y&&y.apply(this,arguments)};break;case"unhandledrejection":b=g.onunhandledrejection,g.onunhandledrejection=function(e){return C("unhandledrejection",e),!b||b.apply(this,arguments)};break;default:return void(("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.warn("unknown instrumentation type:",e))}}function I(e,t){l[e]=l[e]||[],l[e].push(t),c(e)}function C(e,t){if(e&&l[e])for(const a of l[e]||[])try{a(t)}catch(t){("undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__)&&p.kg.error(`Error while triggering instrumentation handler.\nType: ${e}\nName: ${(0,s.$P)(a)}\nError:`,t)}}function m(e=[]){return"Request"in g&&(0,i.V9)(e[0],Request)&&e[0].method?String(e[0].method).toUpperCase():e[1]&&e[1].method?String(e[1].method).toUpperCase():"GET"}function u(e=[]){return"string"==typeof e[0]?e[0]:"Request"in g&&(0,i.V9)(e[0],Request)?e[0].url:String(e[0])}let h,f,v;function _(e,t=!1){return a=>{if(!a||v===a)return;if(function(e){if("keypress"!==e.type)return!1;try{const t=e.target;if(!t||!t.tagName)return!0;if("INPUT"===t.tagName||"TEXTAREA"===t.tagName||t.isContentEditable)return!1}catch(e){}return!0}(a))return;const i="keypress"===a.type?"input":a.type;(void 0===f||function(e,t){if(!e)return!0;if(e.type!==t.type)return!0;try{if(e.target!==t.target)return!0}catch(e){}return!1}(v,a))&&(e({event:a,name:i,global:t}),v=a),clearTimeout(f),f=g.setTimeout((()=>{f=void 0}),1e3)}}let y=null,b=null},7597:(e,t,a)=>{"use strict";a.d(t,{Cy:()=>c,HD:()=>s,J8:()=>A,Kj:()=>l,PO:()=>r,V9:()=>C,VZ:()=>p,cO:()=>o,i2:()=>I,kK:()=>g,pt:()=>d});const i=Object.prototype.toString;function p(e){switch(i.call(e)){case"[object Error]":case"[object Exception]":case"[object DOMException]":return!0;default:return C(e,Error)}}function n(e,t){return i.call(e)===`[object ${t}]`}function s(e){return n(e,"String")}function d(e){return null===e||"object"!=typeof e&&"function"!=typeof e}function r(e){return n(e,"Object")}function o(e){return"undefined"!=typeof Event&&C(e,Event)}function g(e){return"undefined"!=typeof Element&&C(e,Element)}function l(e){return n(e,"RegExp")}function A(e){return Boolean(e&&e.then&&"function"==typeof e.then)}function c(e){return r(e)&&"nativeEvent"in e&&"preventDefault"in e&&"stopPropagation"in e}function I(e){return"number"==typeof e&&e!=e}function C(e,t){try{return e instanceof t}catch(e){return!1}}},2343:(e,t,a)=>{"use strict";a.d(t,{Cf:()=>n,RU:()=>p,kg:()=>d});var i=a(1235);const p=["debug","info","warn","error","log","assert","trace"];function n(e){if(!("console"in i.n2))return e();const t=i.n2.console,a={};p.forEach((e=>{const i=t[e]&&t[e].__sentry_original__;e in t&&i&&(a[e]=t[e],t[e]=i)}));try{return e()}finally{Object.keys(a).forEach((e=>{t[e]=a[e]}))}}function s(){let e=!1;const t={enable:()=>{e=!0},disable:()=>{e=!1}};return"undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__?p.forEach((a=>{t[a]=(...t)=>{e&&n((()=>{i.n2.console[a](`Sentry Logger [${a}]:`,...t)}))}})):p.forEach((e=>{t[e]=()=>{}})),t}let d;d="undefined"==typeof __SENTRY_DEBUG__||__SENTRY_DEBUG__?(0,i.YO)("logger",s):s()},2844:(e,t,a)=>{"use strict";a.d(t,{DM:()=>s,Db:()=>o,EG:()=>g,J4:()=>A,YO:()=>I,go:()=>c,jH:()=>r,lE:()=>C});var i=a(535),p=a(7321),n=a(1235);function s(){const e=n.n2,t=e.crypto||e.msCrypto;if(t&&t.randomUUID)return t.randomUUID().replace(/-/g,"");const a=t&&t.getRandomValues?()=>t.getRandomValues(new Uint8Array(1))[0]:()=>16*Math.random();return([1e7]+1e3+4e3+8e3+1e11).replace(/[018]/g,(e=>(e^(15&a())>>e/4).toString(16)))}function d(e){return e.exception&&e.exception.values?e.exception.values[0]:void 0}function r(e){const{message:t,event_id:a}=e;if(t)return t;const i=d(e);return i?i.type&&i.value?`${i.type}: ${i.value}`:i.type||i.value||a||"<unknown>":a||"<unknown>"}function o(e,t,a){const i=e.exception=e.exception||{},p=i.values=i.values||[],n=p[0]=p[0]||{};n.value||(n.value=t||""),n.type||(n.type=a||"Error")}function g(e,t){const a=d(e);if(!a)return;const i=a.mechanism;if(a.mechanism={type:"generic",handled:!0,...i,...t},t&&"data"in t){const e={...i&&i.data,...t.data};a.mechanism.data=e}}const l=/^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/;function A(e){const t=e.match(l)||[],a=parseInt(t[1],10),i=parseInt(t[2],10),p=parseInt(t[3],10);return{buildmetadata:t[5],major:isNaN(a)?void 0:a,minor:isNaN(i)?void 0:i,patch:isNaN(p)?void 0:p,prerelease:t[4]}}function c(e,t,a=5){if(void 0===t.lineno)return;const i=e.length,n=Math.max(Math.min(i,t.lineno-1),0);t.pre_context=e.slice(Math.max(0,n-a),n).map((e=>(0,p.JM)(e,0))),t.context_line=(0,p.JM)(e[Math.min(i-1,n)],t.colno||0),t.post_context=e.slice(Math.min(n+1,i),n+1+a).map((e=>(0,p.JM)(e,0)))}function I(e){if(e&&e.__sentry_captured__)return!0;try{(0,i.xp)(e,"__sentry_captured__",!0)}catch(e){}return!1}function C(e){return Array.isArray(e)?e:[e]}},2176:(e,t,a)=>{"use strict";function i(){return!("undefined"!=typeof __SENTRY_BROWSER_BUNDLE__&&__SENTRY_BROWSER_BUNDLE__)&&"[object process]"===Object.prototype.toString.call("undefined"!=typeof process?process:0)}function p(e,t){return e.require(t)}function n(t){let a;try{a=p(e,t)}catch(e){}try{const{cwd:i}=p(e,"process");a=p(e,`${i()}/node_modules/${t}`)}catch(e){}return a}a.d(t,{l$:()=>p,KV:()=>i,$y:()=>n}),e=a.hmd(e)},535:(e,t,a)=>{"use strict";a.d(t,{HK:()=>r,Jr:()=>I,Sh:()=>g,_j:()=>o,hl:()=>s,xp:()=>d,zf:()=>c});var i=a(8464),p=a(7597),n=a(7321);function s(e,t,a){if(!(t in e))return;const i=e[t],p=a(i);if("function"==typeof p)try{!function(e,t){const a=t.prototype||{};e.prototype=t.prototype=a,d(e,"__sentry_original__",t)}(p,i)}catch(e){}e[t]=p}function d(e,t,a){Object.defineProperty(e,t,{value:a,writable:!0,configurable:!0})}function r(e){return e.__sentry_original__}function o(e){return Object.keys(e).map((t=>`${encodeURIComponent(t)}=${encodeURIComponent(e[t])}`)).join("&")}function g(e){if((0,p.VZ)(e))return{message:e.message,name:e.name,stack:e.stack,...A(e)};if((0,p.cO)(e)){const t={type:e.type,target:l(e.target),currentTarget:l(e.currentTarget),...A(e)};return"undefined"!=typeof CustomEvent&&(0,p.V9)(e,CustomEvent)&&(t.detail=e.detail),t}return e}function l(e){try{return(0,p.kK)(e)?(0,i.Rt)(e):Object.prototype.toString.call(e)}catch(e){return"<unknown>"}}function A(e){if("object"==typeof e&&null!==e){const t={};for(const a in e)Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a]);return t}return{}}function c(e,t=40){const a=Object.keys(g(e));if(a.sort(),!a.length)return"[object has no keys]";if(a[0].length>=t)return(0,n.$G)(a[0],t);for(let e=a.length;e>0;e--){const i=a.slice(0,e).join(", ");if(!(i.length>t))return e===a.length?i:(0,n.$G)(i,t)}return""}function I(e){return C(e,new Map)}function C(e,t){if((0,p.PO)(e)){const a=t.get(e);if(void 0!==a)return a;const i={};t.set(e,i);for(const a of Object.keys(e))void 0!==e[a]&&(i[a]=C(e[a],t));return i}if(Array.isArray(e)){const a=t.get(e);if(void 0!==a)return a;const i=[];return t.set(e,i),e.forEach((e=>{i.push(C(e,t))})),i}return e}},442:(e,t,a)=>{"use strict";a.d(t,{dB:()=>p,oA:()=>n});var i=a(6956);function p(e,t,a){e&&(e.metadata.source&&"url"!==e.metadata.source||e.setName(...n(t,{path:!0,method:!0})),e.setData("url",t.originalUrl||t.url),t.baseUrl&&e.setData("baseUrl",t.baseUrl),e.setData("query",function(e,t){let a=e.originalUrl||e.url||"";if(a)return a.startsWith("/")&&(a=`http://dogs.are.great${a}`),e.query||void 0!==typeof URL&&new URL(a).search.replace("?","")||t&&t.url&&t.url.parse(a).query||void 0}(t,a)))}function n(e,t={}){const a=e.method&&e.method.toUpperCase();let p="",n="url";t.customRoute||e.route?(p=t.customRoute||`${e.baseUrl||""}${e.route&&e.route.path}`,n="route"):(e.originalUrl||e.url)&&(p=(0,i.rt)(e.originalUrl||e.url||""));let s="";return t.method&&a&&(s+=a),t.method&&t.path&&(s+=" "),t.path&&p&&(s+=p),[s,n]}},360:(e,t,a)=>{"use strict";a.d(t,{$P:()=>d,Ep:()=>o,Sq:()=>n,pE:()=>p});var i=a(4307);function p(...e){const t=e.sort(((e,t)=>e[0]-t[0])).map((e=>e[1]));return(e,a=0)=>{const i=[];for(const p of e.split("\n").slice(a)){if(p.length>1024)continue;const e=p.replace(/\(error: (.*)\)/,"$1");for(const a of t){const t=a(e);if(t){i.push(t);break}}}return function(e){if(!e.length)return[];let t=e;const a=t[0].function||"",i=t[t.length-1].function||"";return-1===a.indexOf("captureMessage")&&-1===a.indexOf("captureException")||(t=t.slice(1)),-1!==i.indexOf("sentryWrapped")&&(t=t.slice(0,-1)),t.slice(0,50).map((e=>({...e,filename:e.filename||t[0].filename,function:e.function||"?"}))).reverse()}(i)}}function n(e){return Array.isArray(e)?p(...e):e}const s="<anonymous>";function d(e){try{return e&&"function"==typeof e&&e.name||s}catch(e){return s}}function r(e){const t=/^\s*[-]{4,}$/,a=/at (?:async )?(?:(.+?)\s+\()?(?:(.+):(\d+):(\d+)?|([^)]+))\)?/;return p=>{if(p.match(t))return{filename:p};const n=p.match(a);if(!n)return;let s,d,r,o,g;if(n[1]){r=n[1];let e=r.lastIndexOf(".");if("."===r[e-1]&&e--,e>0){s=r.substr(0,e),d=r.substr(e+1);const t=s.indexOf(".Module");t>0&&(r=r.substr(t+1),s=s.substr(0,t))}o=void 0}d&&(o=s,g=d),"<anonymous>"===d&&(g=void 0,r=void 0),void 0===r&&(g=g||"<anonymous>",r=o?`${o}.${g}`:g);const l=(0,i.x)([n,"access",e=>e[2],"optionalAccess",e=>e.startsWith,"call",e=>e("file://")])?n[2].substr(7):n[2],A=!("native"===n[5]||l&&!l.startsWith("/")&&!l.startsWith(".")&&1!==l.indexOf(":\\")||void 0===l||l.includes("node_modules/"));return{filename:l,module:(0,i.x)([e,"optionalCall",e=>e(l)]),function:r,lineno:parseInt(n[3],10)||void 0,colno:parseInt(n[4],10)||void 0,in_app:A}}}function o(e){return[90,r(e)]}},7321:(e,t,a)=>{"use strict";a.d(t,{$G:()=>p,JM:()=>n,U0:()=>s});var i=a(7597);function p(e,t=0){return"string"!=typeof e||0===t||e.length<=t?e:`${e.substr(0,t)}...`}function n(e,t){let a=e;const i=a.length;if(i<=150)return a;t>i&&(t=i);let p=Math.max(t-60,0);p<5&&(p=0);let n=Math.min(p+140,i);return n>i-5&&(n=i),n===i&&(p=Math.max(n-140,0)),a=a.slice(p,n),p>0&&(a=`'{snip} ${a}`),n<i&&(a+=" {snip}"),a}function s(e,t=[],a=!1){return t.some((t=>function(e,t,a=!1){return!!(0,i.HD)(e)&&((0,i.Kj)(t)?t.test(e):!!(0,i.HD)(t)&&(a?e===t:e.includes(t)))}(e,t,a)))}},6893:(e,t,a)=>{"use strict";a.d(t,{$2:()=>s,WD:()=>n,cW:()=>d});var i,p=a(7597);function n(e){return new d((t=>{t(e)}))}function s(e){return new d(((t,a)=>{a(e)}))}!function(e){e[e.PENDING=0]="PENDING",e[e.RESOLVED=1]="RESOLVED",e[e.REJECTED=2]="REJECTED"}(i||(i={}));class d{__init(){this._state=i.PENDING}__init2(){this._handlers=[]}constructor(e){d.prototype.__init.call(this),d.prototype.__init2.call(this),d.prototype.__init3.call(this),d.prototype.__init4.call(this),d.prototype.__init5.call(this),d.prototype.__init6.call(this);try{e(this._resolve,this._reject)}catch(e){this._reject(e)}}then(e,t){return new d(((a,i)=>{this._handlers.push([!1,t=>{if(e)try{a(e(t))}catch(e){i(e)}else a(t)},e=>{if(t)try{a(t(e))}catch(e){i(e)}else i(e)}]),this._executeHandlers()}))}catch(e){return this.then((e=>e),e)}finally(e){return new d(((t,a)=>{let i,p;return this.then((t=>{p=!1,i=t,e&&e()}),(t=>{p=!0,i=t,e&&e()})).then((()=>{p?a(i):t(i)}))}))}__init3(){this._resolve=e=>{this._setResult(i.RESOLVED,e)}}__init4(){this._reject=e=>{this._setResult(i.REJECTED,e)}}__init5(){this._setResult=(e,t)=>{this._state===i.PENDING&&((0,p.J8)(t)?t.then(this._resolve,this._reject):(this._state=e,this._value=t,this._executeHandlers()))}}__init6(){this._executeHandlers=()=>{if(this._state===i.PENDING)return;const e=this._handlers.slice();this._handlers=[],e.forEach((e=>{e[0]||(this._state===i.RESOLVED&&e[1](this._value),this._state===i.REJECTED&&e[2](this._value),e[0]=!0)}))}}}},1170:(e,t,a)=>{"use strict";a.d(t,{Z1:()=>c,_I:()=>l,ph:()=>g,yW:()=>o});var i=a(2176),p=a(1235);e=a.hmd(e);const n=(0,p.Rf)(),s={nowSeconds:()=>Date.now()/1e3},d=(0,i.KV)()?function(){try{return(0,i.l$)(e,"perf_hooks").performance}catch(e){return}}():function(){const{performance:e}=n;if(e&&e.now)return{now:()=>e.now(),timeOrigin:Date.now()-e.now()}}(),r=void 0===d?s:{nowSeconds:()=>(d.timeOrigin+d.now())/1e3},o=s.nowSeconds.bind(s),g=r.nowSeconds.bind(r),l=g;let A;const c=(()=>{const{performance:e}=n;if(!e||!e.now)return void(A="none");const t=36e5,a=e.now(),i=Date.now(),p=e.timeOrigin?Math.abs(e.timeOrigin+a-i):t,s=p<t,d=e.timing&&e.timing.navigationStart,r="number"==typeof d?Math.abs(d+a-i):t;return s||r<t?p<=r?(A="timeOrigin",e.timeOrigin):(A="navigationStart",d):(A="dateNow",i)})()},7638:(e,t,a)=>{"use strict";a.d(t,{K:()=>i,q:()=>p});const i=new RegExp("^[ \\t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \\t]*$");function p(e){const t=e.match(i);if(!e||!t)return;let a;return"1"===t[3]?a=!0:"0"===t[3]&&(a=!1),{traceId:t[1],parentSampled:a,parentSpanId:t[2]}}},6956:(e,t,a)=>{"use strict";function i(e){return e.split(/[\?#]/,1)[0]}function p(e){return e.split(/\\?\//).filter((e=>e.length>0&&","!==e)).length}a.d(t,{$A:()=>p,rt:()=>i})},1235:(e,t,a)=>{"use strict";function i(e){return e&&e.Math==Math?e:void 0}a.d(t,{Rf:()=>n,YO:()=>s,n2:()=>p});const p="object"==typeof globalThis&&i(globalThis)||"object"==typeof window&&i(window)||"object"==typeof self&&i(self)||"object"==typeof global&&i(global)||function(){return this}()||{};function n(){return p}function s(e,t,a){const i=a||p,n=i.__SENTRY__=i.__SENTRY__||{};return n[e]||(n[e]=t())}},8054:function(e,t,a){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};const p=a(2361),n=i(a(5158)),s=i(a(6304)),d=n.default("agent-base");function r(){const{stack:e}=new Error;return"string"==typeof e&&e.split("\n").some((e=>-1!==e.indexOf("(https.js:")||-1!==e.indexOf("node:https:")))}function o(e,t){return new o.Agent(e,t)}!function(e){class t extends p.EventEmitter{constructor(e,t){super();let a=t;"function"==typeof e?this.callback=e:e&&(a=e),this.timeout=null,a&&"number"==typeof a.timeout&&(this.timeout=a.timeout),this.maxFreeSockets=1,this.maxSockets=1,this.maxTotalSockets=1/0,this.sockets={},this.freeSockets={},this.requests={},this.options={}}get defaultPort(){return"number"==typeof this.explicitDefaultPort?this.explicitDefaultPort:r()?443:80}set defaultPort(e){this.explicitDefaultPort=e}get protocol(){return"string"==typeof this.explicitProtocol?this.explicitProtocol:r()?"https:":"http:"}set protocol(e){this.explicitProtocol=e}callback(e,t,a){throw new Error('"agent-base" has no default implementation, you must subclass and override `callback()`')}addRequest(e,t){const a=Object.assign({},t);"boolean"!=typeof a.secureEndpoint&&(a.secureEndpoint=r()),null==a.host&&(a.host="localhost"),null==a.port&&(a.port=a.secureEndpoint?443:80),null==a.protocol&&(a.protocol=a.secureEndpoint?"https:":"http:"),a.host&&a.path&&delete a.path,delete a.agent,delete a.hostname,delete a._defaultAgent,delete a.defaultPort,delete a.createConnection,e._last=!0,e.shouldKeepAlive=!1;let i=!1,p=null;const n=a.timeout||this.timeout,o=t=>{e._hadError||(e.emit("error",t),e._hadError=!0)},g=()=>{p=null,i=!0;const e=new Error(`A "socket" was not created for HTTP request before ${n}ms`);e.code="ETIMEOUT",o(e)},l=e=>{i||(null!==p&&(clearTimeout(p),p=null),o(e))},A=t=>{if(i)return;if(null!=p&&(clearTimeout(p),p=null),n=t,Boolean(n)&&"function"==typeof n.addRequest)return d("Callback returned another Agent instance %o",t.constructor.name),void t.addRequest(e,a);var n;if(t)return t.once("free",(()=>{this.freeSocket(t,a)})),void e.onSocket(t);const s=new Error(`no Duplex stream was returned to agent-base for \`${e.method} ${e.path}\``);o(s)};if("function"==typeof this.callback){this.promisifiedCallback||(this.callback.length>=3?(d("Converting legacy callback function to promise"),this.promisifiedCallback=s.default(this.callback)):this.promisifiedCallback=this.callback),"number"==typeof n&&n>0&&(p=setTimeout(g,n)),"port"in a&&"number"!=typeof a.port&&(a.port=Number(a.port));try{d("Resolving socket for %o request: %o",a.protocol,`${e.method} ${e.path}`),Promise.resolve(this.promisifiedCallback(e,a)).then(A,l)}catch(e){Promise.reject(e).catch(l)}}else o(new Error("`callback` is not defined"))}freeSocket(e,t){d("Freeing socket %o %o",e.constructor.name,t),e.destroy()}destroy(){d("Destroying agent %o",this.constructor.name)}}e.Agent=t,e.prototype=e.Agent.prototype}(o||(o={})),e.exports=o},6304:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return function(t,a){return new Promise(((i,p)=>{e.call(this,t,a,((e,t)=>{e?p(e):i(t)}))}))}}},289:(e,t,a)=>{var i=a(7147),p=a(1017),n=a(2843),s=p.join,d=p.dirname,r=i.accessSync&&function(e){try{i.accessSync(e)}catch(e){return!1}return!0}||i.existsSync||p.existsSync,o={arrow:process.env.NODE_BINDINGS_ARROW||" → ",compiled:process.env.NODE_BINDINGS_COMPILED_DIR||"compiled",platform:process.platform,arch:process.arch,nodePreGyp:"node-v"+process.versions.modules+"-"+process.platform+"-"+process.arch,version:process.versions.node,bindings:"bindings.node",try:[["module_root","build","bindings"],["module_root","build","Debug","bindings"],["module_root","build","Release","bindings"],["module_root","out","Debug","bindings"],["module_root","Debug","bindings"],["module_root","out","Release","bindings"],["module_root","Release","bindings"],["module_root","build","default","bindings"],["module_root","compiled","version","platform","arch","bindings"],["module_root","addon-build","release","install-root","bindings"],["module_root","addon-build","debug","install-root","bindings"],["module_root","addon-build","default","install-root","bindings"],["module_root","lib","binding","nodePreGyp","bindings"]]};e.exports=t=function(e){"string"==typeof e?e={bindings:e}:e||(e={}),Object.keys(o).map((function(t){t in e||(e[t]=o[t])})),e.module_root||(e.module_root=t.getRoot(t.getFileName())),".node"!=p.extname(e.bindings)&&(e.bindings+=".node");for(var a,i,n,d=require,r=[],g=0,l=e.try.length;g<l;g++){a=s.apply(null,e.try[g].map((function(t){return e[t]||t}))),r.push(a);try{return i=e.path?d.resolve(a):d(a),e.path||(i.path=a),i}catch(e){if("MODULE_NOT_FOUND"!==e.code&&"QUALIFIED_PATH_RESOLUTION_FAILED"!==e.code&&!/not find/i.test(e.message))throw e}}throw(n=new Error("Could not locate the bindings file. Tried:\n"+r.map((function(t){return e.arrow+t})).join("\n"))).tries=r,n},t.getFileName=function(e){var t,a=Error.prepareStackTrace,i=Error.stackTraceLimit;return Error.stackTraceLimit=10,Error.prepareStackTrace=function(a,i){for(var p=0,n=i.length;p<n;p++)if((t=i[p].getFileName())!==__filename){if(!e)return;if(t!==e)return}},Error.captureStackTrace({}),Error.prepareStackTrace=a,Error.stackTraceLimit=i,0===t.indexOf("file://")&&(t=n(t)),t},t.getRoot=function(e){for(var t,a=d(e);;){if("."===a&&(a=process.cwd()),r(s(a,"package.json"))||r(s(a,"node_modules")))return a;if(t===a)throw new Error('Could not find module root given file: "'+e+'". Do you have a `package.json` file? ');t=a,a=s(a,"..")}}},6489:(e,t)=>{"use strict";t.Q=function(e,t){if("string"!=typeof e)throw new TypeError("argument str must be a string");for(var p={},n=t||{},s=e.split(";"),d=n.decode||a,r=0;r<s.length;r++){var o=s[r],g=o.indexOf("=");if(!(g<0)){var l=o.substring(0,g).trim();if(null==p[l]){var A=o.substring(g+1,o.length).trim();'"'===A[0]&&(A=A.slice(1,-1)),p[l]=i(A,d)}}}return p};var a=decodeURIComponent;encodeURIComponent;function i(e,t){try{return t(e)}catch(t){return e}}},7319:(e,t,a)=>{"use strict";const i=a(6022);e.exports=(e,t={})=>{if("function"!=typeof e)throw new TypeError(`Expected the first argument to be a function, got \`${typeof e}\``);const{wait:a=0,maxWait:p=0,before:n=!1,after:s=!0}=t;if(!n&&!s)throw new Error("Both `before` and `after` are false, function wouldn't be called.");let d,r,o;const g=function(...t){const i=this,g=n&&!d;return clearTimeout(d),d=setTimeout((()=>{d=void 0,r&&(clearTimeout(r),r=void 0),s&&(o=e.apply(i,t))}),a),p>0&&!r&&s&&(r=setTimeout((()=>{r=void 0,d&&(clearTimeout(d),d=void 0),o=e.apply(i,t)}),p)),g&&(o=e.apply(i,t)),o};return i(g,e),g.cancel=()=>{d&&(clearTimeout(d),d=void 0),r&&(clearTimeout(r),r=void 0)},g}},6022:e=>{"use strict";const t=(e,t,i,p)=>{if("length"===i||"prototype"===i)return;if("arguments"===i||"caller"===i)return;const n=Object.getOwnPropertyDescriptor(e,i),s=Object.getOwnPropertyDescriptor(t,i);!a(n,s)&&p||Object.defineProperty(e,i,s)},a=function(e,t){return void 0===e||e.configurable||e.writable===t.writable&&e.enumerable===t.enumerable&&e.configurable===t.configurable&&(e.writable||e.value===t.value)},i=(e,t)=>`/* Wrapped ${e}*/\n${t}`,p=Object.getOwnPropertyDescriptor(Function.prototype,"toString"),n=Object.getOwnPropertyDescriptor(Function.prototype.toString,"name");e.exports=(e,a,{ignoreNonConfigurable:s=!1}={})=>{const{name:d}=e;for(const i of Reflect.ownKeys(a))t(e,a,i,s);return((e,t)=>{const a=Object.getPrototypeOf(t);a!==Object.getPrototypeOf(e)&&Object.setPrototypeOf(e,a)})(e,a),((e,t,a)=>{const s=""===a?"":`with ${a.trim()}() `,d=i.bind(null,s,t.toString());Object.defineProperty(d,"name",n),Object.defineProperty(e,"toString",{...p,value:d})})(e,a,d),e}},1227:(e,t,a)=>{t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const a="color: "+this.color;t.splice(1,0,a,"color: inherit");let i=0,p=0;t[0].replace(/%[a-zA-Z%]/g,(e=>{"%%"!==e&&(i++,"%c"===e&&(p=i))})),t.splice(p,0,a)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){let e;try{e=t.storage.getItem("debug")}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG),e},t.useColors=function(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type&&!window.process.__nwjs)||("undefined"==typeof navigator||!navigator.userAgent||!navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))&&("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},t.storage=function(){try{return localStorage}catch(e){}}(),t.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.log=console.debug||console.log||(()=>{}),e.exports=a(2447)(t);const{formatters:i}=e.exports;i.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},2447:(e,t,a)=>{e.exports=function(e){function t(e){let a,p,n,s=null;function d(...e){if(!d.enabled)return;const i=d,p=Number(new Date),n=p-(a||p);i.diff=n,i.prev=a,i.curr=p,a=p,e[0]=t.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let s=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,((a,p)=>{if("%%"===a)return"%";s++;const n=t.formatters[p];if("function"==typeof n){const t=e[s];a=n.call(i,t),e.splice(s,1),s--}return a})),t.formatArgs.call(i,e),(i.log||t.log).apply(i,e)}return d.namespace=e,d.useColors=t.useColors(),d.color=t.selectColor(e),d.extend=i,d.destroy=t.destroy,Object.defineProperty(d,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==s?s:(p!==t.namespaces&&(p=t.namespaces,n=t.enabled(e)),n),set:e=>{s=e}}),"function"==typeof t.init&&t.init(d),d}function i(e,a){const i=t(this.namespace+(void 0===a?":":a)+e);return i.log=this.log,i}function p(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return t.debug=t,t.default=t,t.coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){const e=[...t.names.map(p),...t.skips.map(p).map((e=>"-"+e))].join(",");return t.enable(""),e},t.enable=function(e){let a;t.save(e),t.namespaces=e,t.names=[],t.skips=[];const i=("string"==typeof e?e:"").split(/[\s,]+/),p=i.length;for(a=0;a<p;a++)i[a]&&("-"===(e=i[a].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.slice(1)+"$")):t.names.push(new RegExp("^"+e+"$")))},t.enabled=function(e){if("*"===e[e.length-1])return!0;let a,i;for(a=0,i=t.skips.length;a<i;a++)if(t.skips[a].test(e))return!1;for(a=0,i=t.names.length;a<i;a++)if(t.names[a].test(e))return!0;return!1},t.humanize=a(7824),t.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach((a=>{t[a]=e[a]})),t.names=[],t.skips=[],t.formatters={},t.selectColor=function(e){let a=0;for(let t=0;t<e.length;t++)a=(a<<5)-a+e.charCodeAt(t),a|=0;return t.colors[Math.abs(a)%t.colors.length]},t.enable(t.load()),t}},5158:(e,t,a)=>{"undefined"==typeof process||"renderer"===process.type||!0===process.browser||process.__nwjs?e.exports=a(1227):e.exports=a(39)},39:(e,t,a)=>{const i=a(6224),p=a(3837);t.init=function(e){e.inspectOpts={};const a=Object.keys(t.inspectOpts);for(let i=0;i<a.length;i++)e.inspectOpts[a[i]]=t.inspectOpts[a[i]]},t.log=function(...e){return process.stderr.write(p.format(...e)+"\n")},t.formatArgs=function(a){const{namespace:i,useColors:p}=this;if(p){const t=this.color,p="[3"+(t<8?t:"8;5;"+t),n=`  ${p};1m${i} [0m`;a[0]=n+a[0].split("\n").join("\n"+n),a.push(p+"m+"+e.exports.humanize(this.diff)+"[0m")}else a[0]=(t.inspectOpts.hideDate?"":(new Date).toISOString()+" ")+i+" "+a[0]},t.save=function(e){e?process.env.DEBUG=e:delete process.env.DEBUG},t.load=function(){return process.env.DEBUG},t.useColors=function(){return"colors"in t.inspectOpts?Boolean(t.inspectOpts.colors):i.isatty(process.stderr.fd)},t.destroy=p.deprecate((()=>{}),"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."),t.colors=[6,2,3,4,5,1];try{const e=a(2130);e&&(e.stderr||e).level>=2&&(t.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch(e){}t.inspectOpts=Object.keys(process.env).filter((e=>/^debug_/i.test(e))).reduce(((e,t)=>{const a=t.substring(6).toLowerCase().replace(/_([a-z])/g,((e,t)=>t.toUpperCase()));let i=process.env[t];return i=!!/^(yes|on|true|enabled)$/i.test(i)||!/^(no|off|false|disabled)$/i.test(i)&&("null"===i?null:Number(i)),e[a]=i,e}),{}),e.exports=a(2447)(t);const{formatters:n}=e.exports;n.o=function(e){return this.inspectOpts.colors=this.useColors,p.inspect(e,this.inspectOpts).split("\n").map((e=>e.trim())).join(" ")},n.O=function(e){return this.inspectOpts.colors=this.useColors,p.inspect(e,this.inspectOpts)}},3457:(e,t,a)=>{"use strict";const i=a(2361),{setTimeout:p,clearTimeout:n}=a(9512),s=a(6292),d=a(1417),{RPCCommands:r,RPCEvents:o,RelationshipTypes:g}=a(1875),{pid:l,uuid:A}=a(6727);e.exports=class extends i{constructor(e={}){super(),this.options=e,this.accessToken=null,this.clientId=null,this.application=null,this.user=null;const t=d[e.transport];if(!t)throw new TypeError("RPC_INVALID_TRANSPORT",e.transport);this.fetch=(e,t,{data:a,query:i}={})=>s(`${this.fetch.endpoint}${t}${i?new URLSearchParams(i):""}`,{method:e,body:a,headers:{Authorization:`Bearer ${this.accessToken}`}}).then((async e=>{const t=await e.json();if(!e.ok){const a=new Error(e.status);throw a.body=t,a}return t})),this.fetch.endpoint="https://discord.com/api",this.transport=new t(this),this.transport.on("message",this._onRpcMessage.bind(this)),this._expecting=new Map,this._connectPromise=void 0}connect(e){return this._connectPromise||(this._connectPromise=new Promise(((t,a)=>{this.clientId=e;const i=p((()=>a(new Error("RPC_CONNECTION_TIMEOUT"))),1e4);i.unref(),this.once("connected",(()=>{n(i),t(this)})),this.transport.once("close",(()=>{this._expecting.forEach((e=>{e.reject(new Error("connection closed"))})),this.emit("disconnected"),a(new Error("connection closed"))})),this.transport.connect().catch(a)}))),this._connectPromise}async login(e={}){let{clientId:t,accessToken:a}=e;return await this.connect(t),e.scopes?(a||(a=await this.authorize(e)),this.authenticate(a)):(this.emit("ready"),this)}request(e,t,a){return new Promise(((i,p)=>{const n=A();this.transport.send({cmd:e,args:t,evt:a,nonce:n}),this._expecting.set(n,{resolve:i,reject:p})}))}_onRpcMessage(e){if(e.cmd===r.DISPATCH&&e.evt===o.READY)e.data.user&&(this.user=e.data.user),this.emit("connected");else if(this._expecting.has(e.nonce)){const{resolve:t,reject:a}=this._expecting.get(e.nonce);if("ERROR"===e.evt){const t=new Error(e.data.message);t.code=e.data.code,t.data=e.data,a(t)}else t(e.data);this._expecting.delete(e.nonce)}else this.emit(e.evt,e.data)}async authorize({scopes:e,clientSecret:t,rpcToken:a,redirectUri:i,prompt:p}={}){t&&!0===a&&(a=(await this.fetch("POST","/oauth2/token/rpc",{data:new URLSearchParams({client_id:this.clientId,client_secret:t})})).rpc_token);const{code:n}=await this.request("AUTHORIZE",{scopes:e,client_id:this.clientId,prompt:p,rpc_token:a});return(await this.fetch("POST","/oauth2/token",{data:new URLSearchParams({client_id:this.clientId,client_secret:t,code:n,grant_type:"authorization_code",redirect_uri:i})})).access_token}authenticate(e){return this.request("AUTHENTICATE",{access_token:e}).then((({application:t,user:a})=>(this.accessToken=e,this.application=t,this.user=a,this.emit("ready"),this)))}getGuild(e,t){return this.request(r.GET_GUILD,{guild_id:e,timeout:t})}getGuilds(e){return this.request(r.GET_GUILDS,{timeout:e})}getChannel(e,t){return this.request(r.GET_CHANNEL,{channel_id:e,timeout:t})}async getChannels(e,t){const{channels:a}=await this.request(r.GET_CHANNELS,{timeout:t,guild_id:e});return a}setCertifiedDevices(e){return this.request(r.SET_CERTIFIED_DEVICES,{devices:e.map((e=>({type:e.type,id:e.uuid,vendor:e.vendor,model:e.model,related:e.related,echo_cancellation:e.echoCancellation,noise_suppression:e.noiseSuppression,automatic_gain_control:e.automaticGainControl,hardware_mute:e.hardwareMute})))})}setUserVoiceSettings(e,t){return this.request(r.SET_USER_VOICE_SETTINGS,{user_id:e,pan:t.pan,mute:t.mute,volume:t.volume})}selectVoiceChannel(e,{timeout:t,force:a=!1}={}){return this.request(r.SELECT_VOICE_CHANNEL,{channel_id:e,timeout:t,force:a})}selectTextChannel(e,{timeout:t}={}){return this.request(r.SELECT_TEXT_CHANNEL,{channel_id:e,timeout:t})}getVoiceSettings(){return this.request(r.GET_VOICE_SETTINGS).then((e=>({automaticGainControl:e.automatic_gain_control,echoCancellation:e.echo_cancellation,noiseSuppression:e.noise_suppression,qos:e.qos,silenceWarning:e.silence_warning,deaf:e.deaf,mute:e.mute,input:{availableDevices:e.input.available_devices,device:e.input.device_id,volume:e.input.volume},output:{availableDevices:e.output.available_devices,device:e.output.device_id,volume:e.output.volume},mode:{type:e.mode.type,autoThreshold:e.mode.auto_threshold,threshold:e.mode.threshold,shortcut:e.mode.shortcut,delay:e.mode.delay}})))}setVoiceSettings(e){return this.request(r.SET_VOICE_SETTINGS,{automatic_gain_control:e.automaticGainControl,echo_cancellation:e.echoCancellation,noise_suppression:e.noiseSuppression,qos:e.qos,silence_warning:e.silenceWarning,deaf:e.deaf,mute:e.mute,input:e.input?{device_id:e.input.device,volume:e.input.volume}:void 0,output:e.output?{device_id:e.output.device,volume:e.output.volume}:void 0,mode:e.mode?{type:e.mode.type,auto_threshold:e.mode.autoThreshold,threshold:e.mode.threshold,shortcut:e.mode.shortcut,delay:e.mode.delay}:void 0})}captureShortcut(e){const t=`${o.CAPTURE_SHORTCUT_CHANGE}${JSON.stringify(undefined)}`;const a=()=>(this._subscriptions.delete(t),this.request(r.CAPTURE_SHORTCUT,{action:"STOP"}));return this._subscriptions.set(t,(({shortcut:t})=>{e(t,a)})),this.request(r.CAPTURE_SHORTCUT,{action:"START"}).then((()=>a))}setActivity(e={},t=l()){let a,i,p,n;if(e.startTimestamp||e.endTimestamp){if(a={start:e.startTimestamp,end:e.endTimestamp},a.start instanceof Date&&(a.start=Math.round(a.start.getTime())),a.end instanceof Date&&(a.end=Math.round(a.end.getTime())),a.start>2147483647e3)throw new RangeError("timestamps.start must fit into a unix timestamp");if(a.end>2147483647e3)throw new RangeError("timestamps.end must fit into a unix timestamp")}return(e.largeImageKey||e.largeImageText||e.smallImageKey||e.smallImageText)&&(i={large_image:e.largeImageKey,large_text:e.largeImageText,small_image:e.smallImageKey,small_text:e.smallImageText}),(e.partySize||e.partyId||e.partyMax)&&(p={id:e.partyId},(e.partySize||e.partyMax)&&(p.size=[e.partySize,e.partyMax])),(e.matchSecret||e.joinSecret||e.spectateSecret)&&(n={match:e.matchSecret,join:e.joinSecret,spectate:e.spectateSecret}),this.request(r.SET_ACTIVITY,{pid:t,activity:{state:e.state,details:e.details,timestamps:a,assets:i,party:p,secrets:n,buttons:e.buttons,instance:!!e.instance}})}clearActivity(e=l()){return this.request(r.SET_ACTIVITY,{pid:e})}sendJoinInvite(e){return this.request(r.SEND_ACTIVITY_JOIN_INVITE,{user_id:e.id||e})}sendJoinRequest(e){return this.request(r.SEND_ACTIVITY_JOIN_REQUEST,{user_id:e.id||e})}closeJoinRequest(e){return this.request(r.CLOSE_ACTIVITY_JOIN_REQUEST,{user_id:e.id||e})}createLobby(e,t,a){return this.request(r.CREATE_LOBBY,{type:e,capacity:t,metadata:a})}updateLobby(e,{type:t,owner:a,capacity:i,metadata:p}={}){return this.request(r.UPDATE_LOBBY,{id:e.id||e,type:t,owner_id:a&&a.id||a,capacity:i,metadata:p})}deleteLobby(e){return this.request(r.DELETE_LOBBY,{id:e.id||e})}connectToLobby(e,t){return this.request(r.CONNECT_TO_LOBBY,{id:e,secret:t})}sendToLobby(e,t){return this.request(r.SEND_TO_LOBBY,{id:e.id||e,data:t})}disconnectFromLobby(e){return this.request(r.DISCONNECT_FROM_LOBBY,{id:e.id||e})}updateLobbyMember(e,t,a){return this.request(r.UPDATE_LOBBY_MEMBER,{lobby_id:e.id||e,user_id:t.id||t,metadata:a})}getRelationships(){const e=Object.keys(g);return this.request(r.GET_RELATIONSHIPS).then((t=>t.relationships.map((t=>({...t,type:e[t.type]})))))}async subscribe(e,t){return await this.request(r.SUBSCRIBE,t,e),{unsubscribe:()=>this.request(r.UNSUBSCRIBE,t,e)}}async destroy(){await this.transport.close()}}},1875:(e,t)=>{"use strict";function a(e){const t={};for(const a of e)t[a]=a;return t}t.browser="undefined"!=typeof window,t.RPCCommands=a(["DISPATCH","AUTHORIZE","AUTHENTICATE","GET_GUILD","GET_GUILDS","GET_CHANNEL","GET_CHANNELS","CREATE_CHANNEL_INVITE","GET_RELATIONSHIPS","GET_USER","SUBSCRIBE","UNSUBSCRIBE","SET_USER_VOICE_SETTINGS","SET_USER_VOICE_SETTINGS_2","SELECT_VOICE_CHANNEL","GET_SELECTED_VOICE_CHANNEL","SELECT_TEXT_CHANNEL","GET_VOICE_SETTINGS","SET_VOICE_SETTINGS_2","SET_VOICE_SETTINGS","CAPTURE_SHORTCUT","SET_ACTIVITY","SEND_ACTIVITY_JOIN_INVITE","CLOSE_ACTIVITY_JOIN_REQUEST","ACTIVITY_INVITE_USER","ACCEPT_ACTIVITY_INVITE","INVITE_BROWSER","DEEP_LINK","CONNECTIONS_CALLBACK","BRAINTREE_POPUP_BRIDGE_CALLBACK","GIFT_CODE_BROWSER","GUILD_TEMPLATE_BROWSER","OVERLAY","BROWSER_HANDOFF","SET_CERTIFIED_DEVICES","GET_IMAGE","CREATE_LOBBY","UPDATE_LOBBY","DELETE_LOBBY","UPDATE_LOBBY_MEMBER","CONNECT_TO_LOBBY","DISCONNECT_FROM_LOBBY","SEND_TO_LOBBY","SEARCH_LOBBIES","CONNECT_TO_LOBBY_VOICE","DISCONNECT_FROM_LOBBY_VOICE","SET_OVERLAY_LOCKED","OPEN_OVERLAY_ACTIVITY_INVITE","OPEN_OVERLAY_GUILD_INVITE","OPEN_OVERLAY_VOICE_SETTINGS","VALIDATE_APPLICATION","GET_ENTITLEMENT_TICKET","GET_APPLICATION_TICKET","START_PURCHASE","GET_SKUS","GET_ENTITLEMENTS","GET_NETWORKING_CONFIG","NETWORKING_SYSTEM_METRICS","NETWORKING_PEER_METRICS","NETWORKING_CREATE_TOKEN","SET_USER_ACHIEVEMENT","GET_USER_ACHIEVEMENTS"]),t.RPCEvents=a(["CURRENT_USER_UPDATE","GUILD_STATUS","GUILD_CREATE","CHANNEL_CREATE","RELATIONSHIP_UPDATE","VOICE_CHANNEL_SELECT","VOICE_STATE_CREATE","VOICE_STATE_DELETE","VOICE_STATE_UPDATE","VOICE_SETTINGS_UPDATE","VOICE_SETTINGS_UPDATE_2","VOICE_CONNECTION_STATUS","SPEAKING_START","SPEAKING_STOP","GAME_JOIN","GAME_SPECTATE","ACTIVITY_JOIN","ACTIVITY_JOIN_REQUEST","ACTIVITY_SPECTATE","ACTIVITY_INVITE","NOTIFICATION_CREATE","MESSAGE_CREATE","MESSAGE_UPDATE","MESSAGE_DELETE","LOBBY_DELETE","LOBBY_UPDATE","LOBBY_MEMBER_CONNECT","LOBBY_MEMBER_DISCONNECT","LOBBY_MEMBER_UPDATE","LOBBY_MESSAGE","CAPTURE_SHORTCUT_CHANGE","OVERLAY","OVERLAY_UPDATE","ENTITLEMENT_CREATE","ENTITLEMENT_DELETE","USER_ACHIEVEMENT_UPDATE","READY","ERROR"]),t.RPCErrors={CAPTURE_SHORTCUT_ALREADY_LISTENING:5004,GET_GUILD_TIMED_OUT:5002,INVALID_ACTIVITY_JOIN_REQUEST:4012,INVALID_ACTIVITY_SECRET:5005,INVALID_CHANNEL:4005,INVALID_CLIENTID:4007,INVALID_COMMAND:4002,INVALID_ENTITLEMENT:4015,INVALID_EVENT:4004,INVALID_GIFT_CODE:4016,INVALID_GUILD:4003,INVALID_INVITE:4011,INVALID_LOBBY:4013,INVALID_LOBBY_SECRET:4014,INVALID_ORIGIN:4008,INVALID_PAYLOAD:4e3,INVALID_PERMISSIONS:4006,INVALID_TOKEN:4009,INVALID_USER:4010,LOBBY_FULL:5007,NO_ELIGIBLE_ACTIVITY:5006,OAUTH2_ERROR:5e3,PURCHASE_CANCELED:5008,PURCHASE_ERROR:5009,RATE_LIMITED:5011,SELECT_CHANNEL_TIMED_OUT:5001,SELECT_VOICE_FORCE_REQUIRED:5003,SERVICE_UNAVAILABLE:1001,TRANSACTION_ABORTED:1002,UNAUTHORIZED_FOR_ACHIEVEMENT:5010,UNKNOWN_ERROR:1e3},t.RPCCloseCodes={CLOSE_NORMAL:1e3,CLOSE_UNSUPPORTED:1003,CLOSE_ABNORMAL:1006,INVALID_CLIENTID:4e3,INVALID_ORIGIN:4001,RATELIMITED:4002,TOKEN_REVOKED:4003,INVALID_VERSION:4004,INVALID_ENCODING:4005},t.LobbyTypes={PRIVATE:1,PUBLIC:2},t.RelationshipTypes={NONE:0,FRIEND:1,BLOCKED:2,PENDING_INCOMING:3,PENDING_OUTGOING:4,IMPLICIT:5}},6277:(e,t,a)=>{"use strict";const i=a(6727);e.exports={Client:a(3457),register:e=>i.register(`discord-${e}`)}},1417:(e,t,a)=>{"use strict";e.exports={ipc:a(7110),websocket:a(1572)}},7110:(e,t,a)=>{"use strict";const i=a(1808),p=a(2361),n=a(6292),{uuid:s}=a(6727);function d(e=0){return new Promise(((t,a)=>{const p=function(e){if("win32"===process.platform)return`\\\\?\\pipe\\discord-ipc-${e}`;const{env:{XDG_RUNTIME_DIR:t,TMPDIR:a,TMP:i,TEMP:p}}=process;return`${(t||a||i||p||"/tmp").replace(/\/$/,"")}/discord-ipc-${e}`}(e),n=()=>{e<10?t(d(e+1)):a(new Error("Could not connect"))},s=i.createConnection(p,(()=>{s.removeListener("error",n),t(s)}));s.once("error",n)}))}async function r(e=0){if(e>30)throw new Error("Could not find endpoint");const t="http://127.0.0.1:"+(6463+e%10);try{return 404===(await n(t)).status?t:r(e+1)}catch(t){return r(e+1)}}function o(e,t){t=JSON.stringify(t);const a=Buffer.byteLength(t),i=Buffer.alloc(8+a);return i.writeInt32LE(e,0),i.writeInt32LE(a,4),i.write(t,8,a),i}const g={full:"",op:void 0};function l(e,t){const a=e.read();if(!a)return;let i,{op:p}=g;if(""===g.full){p=g.op=a.readInt32LE(0);const e=a.readInt32LE(4);i=a.slice(8,e+8)}else i=a.toString();try{t({op:p,data:JSON.parse(g.full+i)}),g.full="",g.op=void 0}catch(e){g.full+=i}l(e,t)}e.exports=class extends p{constructor(e){super(),this.client=e,this.socket=null}async connect(){const e=this.socket=await d();e.on("close",this.onClose.bind(this)),e.on("error",this.onClose.bind(this)),this.emit("open"),e.write(o(0,{v:1,client_id:this.client.clientId})),e.pause(),e.on("readable",(()=>{l(e,(({op:e,data:t})=>{switch(e){case 3:this.send(t,4);break;case 1:if(!t)return;"AUTHORIZE"===t.cmd&&"ERROR"!==t.evt&&r().then((e=>{this.client.request.endpoint=e})).catch((e=>{this.client.emit("error",e)})),this.emit("message",t);break;case 2:this.emit("close",t)}}))}))}onClose(e){this.emit("close",e)}send(e,t=1){this.socket.write(o(t,e))}async close(){return new Promise((e=>{this.once("close",e),this.send({},2),this.socket.end()}))}ping(){this.send(s(),3)}},e.exports.encode=o,e.exports.decode=l},1572:(e,t,a)=>{"use strict";const i=a(2361),{browser:p}=a(1875),n=p?window.WebSocket:a(8777);e.exports=class extends i{constructor(e){super(),this.client=e,this.ws=null,this.tries=0}async connect(){const e=6463+this.tries%10;this.tries+=1,this.ws=new n(`ws://127.0.0.1:${e}/?v=1&client_id=${this.client.clientId}`,p?void 0:{origin:this.client.options.origin}),this.ws.onopen=this.onOpen.bind(this),this.ws.onclose=this.onClose.bind(this),this.ws.onerror=this.onError.bind(this),this.ws.onmessage=this.onMessage.bind(this)}onOpen(){this.emit("open")}onClose(e){e.wasClean&&this.emit("close",e)}onError(e){try{this.ws.close()}catch{}this.tries>20?this.emit("error",e.error):setTimeout((()=>{this.connect()}),250)}onMessage(e){var t;this.emit("message",(t=e.data,JSON.parse(t)))}send(e){var t;this.ws.send((t=e,JSON.stringify(t)))}ping(){}close(){return new Promise((e=>{this.once("close",e),this.ws.close()}))}}},6727:(e,t,a)=>{"use strict";let i;try{const{app:e}=a(Object(function(){var e=new Error("Cannot find module 'electron'");throw e.code="MODULE_NOT_FOUND",e}()));i=e.setAsDefaultProtocolClient.bind(e)}catch(e){try{i=a(4658)}catch(e){}}"function"!=typeof i&&(i=()=>!1),e.exports={pid:function(){return"undefined"!=typeof process?process.pid:null},register:i,uuid:()=>{let e="";for(let t=0;t<32;t+=1){let a;if(8!==t&&12!==t&&16!==t&&20!==t||(e+="-"),12===t)a=4;else{const e=16*Math.random()|0;a=16===t?3&e|0:e}e+=a.toString(16)}return e}}},2559:e=>{!function(){"use strict";var t=[,function(e,t){function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,i=new Array(t);a<t;a++)i[a]=e[a];return i}function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.lengthOf=t.keysOf=t.isObject=t.isInfOrNaN=t.isFunction=t.isArguments=t.hasOwn=t.handleError=t.convertMapToObject=t.checkError=void 0,t.isFunction=function(e){return"function"==typeof e},t.isObject=function(e){return"object"===i(e)},t.keysOf=function(e){return Object.keys(e)},t.lengthOf=function(e){return Object.keys(e).length};var p=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)};t.hasOwn=p,t.convertMapToObject=function(e){return Array.from(e).reduce((function(e,t){var i,p,n=(p=2,function(e){if(Array.isArray(e))return e}(i=t)||function(e,t){var a=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=a){var i,p,n=[],s=!0,d=!1;try{for(a=a.call(e);!(s=(i=a.next()).done)&&(n.push(i.value),!t||n.length!==t);s=!0);}catch(e){d=!0,p=e}finally{try{s||null==a.return||a.return()}finally{if(d)throw p}}return n}}(i,p)||function(e,t){if(e){if("string"==typeof e)return a(e,t);var i=Object.prototype.toString.call(e).slice(8,-1);return"Object"===i&&e.constructor&&(i=e.constructor.name),"Map"===i||"Set"===i?Array.from(e):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?a(e,t):void 0}}(i,p)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),s=n[0],d=n[1];return e[s]=d,e}),{})},t.isArguments=function(e){return null!=e&&p(e,"callee")},t.isInfOrNaN=function(e){return Number.isNaN(e)||e===1/0||e===-1/0};var n={maxStack:function(e){return new RegExp("Maximum call stack size exceeded","g").test(e)}};t.checkError=n,t.handleError=function(e){return function(){try{return e.apply(this,arguments)}catch(e){var t=n.maxStack(e.message);if(t)throw new Error("Converting circular structure to JSON");throw e}}}},function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.Base64=void 0;for(var a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=Object.create(null),p=function(e){return a.charAt(e)},n=0;n<a.length;n++)i[p(n)]=n;var s=function(e){if("undefined"==typeof Uint8Array||"undefined"==typeof ArrayBuffer){for(var t=[],a=0;a<e;a++)t.push(0);return t.$Uint8ArrayPolyfill=!0,t}return new Uint8Array(new ArrayBuffer(e))},d={encode:function(e){if("string"==typeof e){var t=e;e=s(t.length);for(var a=0;a<t.length;a++){var i=t.charCodeAt(a);if(i>255)throw new Error("Not ascii. Base64.encode can only take ascii strings.");e[a]=i}}for(var n=[],d=null,r=null,o=null,g=null,l=0;l<e.length;l++)switch(l%3){case 0:d=e[l]>>2&63,r=(3&e[l])<<4;break;case 1:r|=e[l]>>4&15,o=(15&e[l])<<2;break;case 2:o|=e[l]>>6&3,g=63&e[l],n.push(p(d)),n.push(p(r)),n.push(p(o)),n.push(p(g)),d=null,r=null,o=null,g=null}return null!=d&&(n.push(p(d)),n.push(p(r)),null==o?n.push("="):n.push(p(o)),null==g&&n.push("=")),n.join("")},decode:function(e){var t=Math.floor(3*e.length/4);"="==e.charAt(e.length-1)&&(t--,"="==e.charAt(e.length-2)&&t--);for(var a,p=s(t),n=null,d=null,r=null,o=0,g=0;g<e.length;g++){var l="="===(a=e.charAt(g))?-1:i[a];switch(g%4){case 0:if(l<0)throw new Error("invalid base64 string");n=l<<2;break;case 1:if(l<0)throw new Error("invalid base64 string");n|=l>>4,p[o++]=n,d=(15&l)<<4;break;case 2:l>=0&&(d|=l>>2,p[o++]=d,r=(3&l)<<6);break;case 3:l>=0&&(p[o++]=r|l)}}return p},newBinary:s};t.Base64=d},function(e){e.exports={_noYieldsAllowed:function(e){return e()}}},function(e,t){function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function i(e){return JSON.stringify(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var p=function e(t,p,n,s,d){var r=p[t];switch(a(r)){case"string":return i(r);case"number":return isFinite(r)?String(r):"null";case"boolean":return String(r);case"object":if(!r)return"null";var o,g=s+n,l=[];if(Array.isArray(r)||{}.hasOwnProperty.call(r,"callee")){for(var A=r.length,c=0;c<A;c+=1)l[c]=e(c,r,n,g,d)||"null";return o=0===l.length?"[]":g?"[\n"+g+l.join(",\n"+g)+"\n"+s+"]":"["+l.join(",")+"]"}var I=Object.keys(r);return d&&(I=I.sort()),I.forEach((function(t){(o=e(t,r,n,g,d))&&l.push(i(t)+(g?": ":":")+o)})),o=0===l.length?"{}":g?"{\n"+g+l.join(",\n"+g)+"\n"+s+"}":"{"+l.join(",")+"}"}};t.default=function(e,t){var a=Object.assign({indent:"",canonical:!1},t);if(!0===a.indent)a.indent="  ";else if("number"==typeof a.indent){for(var i="",n=0;n<a.indent;n++)i+=" ";a.indent=i}return p("",{"":e},a.indent,"",a.canonical)},e.exports=t.default}],a={};function i(e){var p=a[e];if(void 0!==p)return p.exports;var n=a[e]={exports:{}};return t[e](n,n.exports,i),n.exports}var p={};!function(){var e=p,t=i(2).Base64,a=i(3);Object.defineProperty(e,"__esModule",{value:!0}),e.EJSON=void 0;var n=i(1),s={};e.EJSON=s;var d=new Map;s.addType=function(e,t){if(d.has(e))throw new Error("Type ".concat(e," already present"));d.set(e,t)};var r=[{matchJSONValue:function(e){return(0,n.hasOwn)(e,"$date")&&1===(0,n.lengthOf)(e)},matchObject:function(e){return e instanceof Date},toJSONValue:function(e){return{$date:e.getTime()}},fromJSONValue:function(e){return new Date(e.$date)}},{matchJSONValue:function(e){return(0,n.hasOwn)(e,"$regexp")&&(0,n.hasOwn)(e,"$flags")&&2===(0,n.lengthOf)(e)},matchObject:function(e){return e instanceof RegExp},toJSONValue:function(e){return{$regexp:e.source,$flags:e.flags}},fromJSONValue:function(e){return new RegExp(e.$regexp,e.$flags.slice(0,50).replace(/[^gimuy]/g,"").replace(/(.)(?=.*\1)/g,""))}},{matchJSONValue:function(e){return(0,n.hasOwn)(e,"$InfNaN")&&1===(0,n.lengthOf)(e)},matchObject:n.isInfOrNaN,toJSONValue:function(e){return{$InfNaN:Number.isNaN(e)?0:e===1/0?1:-1}},fromJSONValue:function(e){return e.$InfNaN/0}},{matchJSONValue:function(e){return(0,n.hasOwn)(e,"$binary")&&1===(0,n.lengthOf)(e)},matchObject:function(e){return"undefined"!=typeof Uint8Array&&e instanceof Uint8Array||e&&(0,n.hasOwn)(e,"$Uint8ArrayPolyfill")},toJSONValue:function(e){return{$binary:t.encode(e)}},fromJSONValue:function(e){return t.decode(e.$binary)}},{matchJSONValue:function(e){return(0,n.hasOwn)(e,"$escape")&&1===(0,n.lengthOf)(e)},matchObject:function(e){var t=!1;if(e){var a=(0,n.lengthOf)(e);1!==a&&2!==a||(t=r.some((function(t){return t.matchJSONValue(e)})))}return t},toJSONValue:function(e){var t={};return(0,n.keysOf)(e).forEach((function(a){t[a]=s.toJSONValue(e[a])})),{$escape:t}},fromJSONValue:function(e){var t={};return(0,n.keysOf)(e.$escape).forEach((function(a){t[a]=s.fromJSONValue(e.$escape[a])})),t}},{matchJSONValue:function(e){return(0,n.hasOwn)(e,"$type")&&(0,n.hasOwn)(e,"$value")&&2===(0,n.lengthOf)(e)},matchObject:function(e){return s._isCustomType(e)},toJSONValue:function(e){var t=a._noYieldsAllowed((function(){return e.toJSONValue()}));return{$type:e.typeName(),$value:t}},fromJSONValue:function(e){var t=e.$type;if(!d.has(t))throw new Error("Custom EJSON type ".concat(t," is not defined"));var i=d.get(t);return a._noYieldsAllowed((function(){return i(e.$value)}))}}];s._isCustomType=function(e){return e&&(0,n.isFunction)(e.toJSONValue)&&(0,n.isFunction)(e.typeName)&&d.has(e.typeName())},s._getTypes=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return e?d:(0,n.convertMapToObject)(d)},s._getConverters=function(){return r};var o=function(e){for(var t=0;t<r.length;t++){var a=r[t];if(a.matchObject(e))return a.toJSONValue(e)}},g=function e(t){if(null===t)return null;var a=o(t);return void 0!==a?a:(0,n.isObject)(t)?((0,n.keysOf)(t).forEach((function(a){var i=t[a];if((0,n.isObject)(i)||void 0===i||(0,n.isInfOrNaN)(i)){var p=o(i);p?t[a]=p:e(i)}})),t):t};s._adjustTypesToJSONValue=g,s.toJSONValue=function(e){var t=o(e);if(void 0!==t)return t;var a=e;return(0,n.isObject)(e)&&(a=s.clone(e),g(a)),a};var l=function(e){if((0,n.isObject)(e)&&null!==e){var t=(0,n.keysOf)(e);if(t.length<=2&&t.every((function(e){return"string"==typeof e&&"$"===e.substr(0,1)})))for(var a=0;a<r.length;a++){var i=r[a];if(i.matchJSONValue(e))return i.fromJSONValue(e)}}return e},A=function e(t){if(null===t)return null;var a=l(t);return a!==t?a:(0,n.isObject)(t)?((0,n.keysOf)(t).forEach((function(a){var i=t[a];if((0,n.isObject)(i)){var p=l(i);if(i!==p)return void(t[a]=p);e(i)}})),t):t};s._adjustTypesFromJSONValue=A,s.fromJSONValue=function(e){var t=l(e);return t===e&&(0,n.isObject)(e)&&(t=s.clone(e),A(t)),t},s.stringify=(0,n.handleError)((function(e,t){var a=s.toJSONValue(e);return t&&(t.canonical||t.indent)?i(4)(a,t):JSON.stringify(a)})),s.parse=function(e){if("string"!=typeof e)throw new Error("EJSON.parse argument should be a string");return s.fromJSONValue(JSON.parse(e))},s.isBinary=function(e){return!!("undefined"!=typeof Uint8Array&&e instanceof Uint8Array||e&&e.$Uint8ArrayPolyfill)},s.equals=function(e,t,a){var i,p=!(!a||!a.keyOrderSensitive);if(e===t)return!0;if(Number.isNaN(e)&&Number.isNaN(t))return!0;if(!e||!t)return!1;if(!(0,n.isObject)(e)||!(0,n.isObject)(t))return!1;if(e instanceof Date&&t instanceof Date)return e.valueOf()===t.valueOf();if(s.isBinary(e)&&s.isBinary(t)){if(e.length!==t.length)return!1;for(i=0;i<e.length;i++)if(e[i]!==t[i])return!1;return!0}if((0,n.isFunction)(e.equals))return e.equals(t,a);if((0,n.isFunction)(t.equals))return t.equals(e,a);var d,r=Array.isArray(e),o=Array.isArray(t);if(r!==o)return!1;if(r&&o){if(e.length!==t.length)return!1;for(i=0;i<e.length;i++)if(!s.equals(e[i],t[i],a))return!1;return!0}switch(s._isCustomType(e)+s._isCustomType(t)){case 1:return!1;case 2:return s.equals(s.toJSONValue(e),s.toJSONValue(t))}var g=(0,n.keysOf)(e),l=(0,n.keysOf)(t);return p?(i=0,d=g.every((function(p){return!(i>=l.length||p!==l[i]||!s.equals(e[p],t[l[i]],a)||(i++,0))}))):(i=0,d=g.every((function(p){return!!(0,n.hasOwn)(t,p)&&!!s.equals(e[p],t[p],a)&&(i++,!0)}))),d&&i===l.length},s.clone=function(e){var t;if(!(0,n.isObject)(e))return e;if(null===e)return null;if(e instanceof Date)return new Date(e.getTime());if(e instanceof RegExp)return e;if(s.isBinary(e)){t=s.newBinary(e.length);for(var a=0;a<e.length;a++)t[a]=e[a];return t}return Array.isArray(e)?e.map(s.clone):(0,n.isArguments)(e)?Array.from(e).map(s.clone):(0,n.isFunction)(e.clone)?e.clone():s._isCustomType(e)?s.fromJSONValue(s.clone(s.toJSONValue(e)),!0):(t={},(0,n.keysOf)(e).forEach((function(a){t[a]=s.clone(e[a])})),t)},s.newBinary=t.newBinary}(),e.exports=p.EJSON}()},6729:e=>{"use strict";var t=Object.prototype.hasOwnProperty,a="~";function i(){}function p(e,t,a){this.fn=e,this.context=t,this.once=a||!1}function n(e,t,i,n,s){if("function"!=typeof i)throw new TypeError("The listener must be a function");var d=new p(i,n||e,s),r=a?a+t:t;return e._events[r]?e._events[r].fn?e._events[r]=[e._events[r],d]:e._events[r].push(d):(e._events[r]=d,e._eventsCount++),e}function s(e,t){0==--e._eventsCount?e._events=new i:delete e._events[t]}function d(){this._events=new i,this._eventsCount=0}Object.create&&(i.prototype=Object.create(null),(new i).__proto__||(a=!1)),d.prototype.eventNames=function(){var e,i,p=[];if(0===this._eventsCount)return p;for(i in e=this._events)t.call(e,i)&&p.push(a?i.slice(1):i);return Object.getOwnPropertySymbols?p.concat(Object.getOwnPropertySymbols(e)):p},d.prototype.listeners=function(e){var t=a?a+e:e,i=this._events[t];if(!i)return[];if(i.fn)return[i.fn];for(var p=0,n=i.length,s=new Array(n);p<n;p++)s[p]=i[p].fn;return s},d.prototype.listenerCount=function(e){var t=a?a+e:e,i=this._events[t];return i?i.fn?1:i.length:0},d.prototype.emit=function(e,t,i,p,n,s){var d=a?a+e:e;if(!this._events[d])return!1;var r,o,g=this._events[d],l=arguments.length;if(g.fn){switch(g.once&&this.removeListener(e,g.fn,void 0,!0),l){case 1:return g.fn.call(g.context),!0;case 2:return g.fn.call(g.context,t),!0;case 3:return g.fn.call(g.context,t,i),!0;case 4:return g.fn.call(g.context,t,i,p),!0;case 5:return g.fn.call(g.context,t,i,p,n),!0;case 6:return g.fn.call(g.context,t,i,p,n,s),!0}for(o=1,r=new Array(l-1);o<l;o++)r[o-1]=arguments[o];g.fn.apply(g.context,r)}else{var A,c=g.length;for(o=0;o<c;o++)switch(g[o].once&&this.removeListener(e,g[o].fn,void 0,!0),l){case 1:g[o].fn.call(g[o].context);break;case 2:g[o].fn.call(g[o].context,t);break;case 3:g[o].fn.call(g[o].context,t,i);break;case 4:g[o].fn.call(g[o].context,t,i,p);break;default:if(!r)for(A=1,r=new Array(l-1);A<l;A++)r[A-1]=arguments[A];g[o].fn.apply(g[o].context,r)}}return!0},d.prototype.on=function(e,t,a){return n(this,e,t,a,!1)},d.prototype.once=function(e,t,a){return n(this,e,t,a,!0)},d.prototype.removeListener=function(e,t,i,p){var n=a?a+e:e;if(!this._events[n])return this;if(!t)return s(this,n),this;var d=this._events[n];if(d.fn)d.fn!==t||p&&!d.once||i&&d.context!==i||s(this,n);else{for(var r=0,o=[],g=d.length;r<g;r++)(d[r].fn!==t||p&&!d[r].once||i&&d[r].context!==i)&&o.push(d[r]);o.length?this._events[n]=1===o.length?o[0]:o:s(this,n)}return this},d.prototype.removeAllListeners=function(e){var t;return e?(t=a?a+e:e,this._events[t]&&s(this,t)):(this._events=new i,this._eventsCount=0),this},d.prototype.off=d.prototype.removeListener,d.prototype.addListener=d.prototype.on,d.prefixed=a,d.EventEmitter=d,e.exports=d},4063:e=>{"use strict";e.exports=function e(t,a){if(t===a)return!0;if(t&&a&&"object"==typeof t&&"object"==typeof a){if(t.constructor!==a.constructor)return!1;var i,p,n;if(Array.isArray(t)){if((i=t.length)!=a.length)return!1;for(p=i;0!=p--;)if(!e(t[p],a[p]))return!1;return!0}if(t.constructor===RegExp)return t.source===a.source&&t.flags===a.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===a.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===a.toString();if((i=(n=Object.keys(t)).length)!==Object.keys(a).length)return!1;for(p=i;0!=p--;)if(!Object.prototype.hasOwnProperty.call(a,n[p]))return!1;for(p=i;0!=p--;){var s=n[p];if(!e(t[s],a[s]))return!1}return!0}return t!=t&&a!=a}},2843:(e,t,a)=>{var i=a(1017).sep||"/";e.exports=function(e){if("string"!=typeof e||e.length<=7||"file://"!=e.substring(0,7))throw new TypeError("must pass in a file:// URI to convert to a file path");var t=decodeURI(e.substring(7)),a=t.indexOf("/"),p=t.substring(0,a),n=t.substring(a+1);return"localhost"==p&&(p=""),p&&(p=i+i+p),n=n.replace(/^(.+)\|/,"$1:"),"\\"==i&&(n=n.replace(/\//g,"\\")),/^.+\:/.test(n)||(n=i+n),p+n}},6560:e=>{"use strict";e.exports=(e,t=process.argv)=>{const a=e.startsWith("-")?"":1===e.length?"-":"--",i=t.indexOf(a+e),p=t.indexOf("--");return-1!==i&&(-1===p||i<p)}},9146:function(e,t,a){"use strict";var i=this&&this.__awaiter||function(e,t,a,i){return new(a||(a=Promise))((function(p,n){function s(e){try{r(i.next(e))}catch(e){n(e)}}function d(e){try{r(i.throw(e))}catch(e){n(e)}}function r(e){var t;e.done?p(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(s,d)}r((i=i.apply(e,t||[])).next())}))},p=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=p(a(1808)),s=p(a(4404)),d=p(a(7310)),r=p(a(9491)),o=p(a(5158)),g=a(8054),l=p(a(9829)),A=o.default("https-proxy-agent:agent");class c extends g.Agent{constructor(e){let t;if(t="string"==typeof e?d.default.parse(e):e,!t)throw new Error("an HTTP(S) proxy server `host` and `port` must be specified!");A("creating new HttpsProxyAgent instance: %o",t),super(t);const a=Object.assign({},t);var i;this.secureProxy=t.secureProxy||"string"==typeof(i=a.protocol)&&/^https:?$/i.test(i),a.host=a.hostname||a.host,"string"==typeof a.port&&(a.port=parseInt(a.port,10)),!a.port&&a.host&&(a.port=this.secureProxy?443:80),this.secureProxy&&!("ALPNProtocols"in a)&&(a.ALPNProtocols=["http 1.1"]),a.host&&a.path&&(delete a.path,delete a.pathname),this.proxy=a}callback(e,t){return i(this,void 0,void 0,(function*(){const{proxy:a,secureProxy:i}=this;let p;i?(A("Creating `tls.Socket`: %o",a),p=s.default.connect(a)):(A("Creating `net.Socket`: %o",a),p=n.default.connect(a));const d=Object.assign({},a.headers);let o=`CONNECT ${t.host}:${t.port} HTTP/1.1\r\n`;a.auth&&(d["Proxy-Authorization"]=`Basic ${Buffer.from(a.auth).toString("base64")}`);let{host:g,port:c,secureEndpoint:C}=t;(function(e,t){return Boolean(!t&&80===e||t&&443===e)})(c,C)||(g+=`:${c}`),d.Host=g,d.Connection="close";for(const e of Object.keys(d))o+=`${e}: ${d[e]}\r\n`;const m=l.default(p);p.write(`${o}\r\n`);const{statusCode:u,buffered:h}=yield m;if(200===u){if(e.once("socket",I),t.secureEndpoint){A("Upgrading socket connection to TLS");const e=t.servername||t.host;return s.default.connect(Object.assign(Object.assign({},function(e,...t){const a={};let i;for(i in e)t.includes(i)||(a[i]=e[i]);return a}(t,"host","hostname","path","port")),{socket:p,servername:e}))}return p}p.destroy();const f=new n.default.Socket({writable:!1});return f.readable=!0,e.once("socket",(e=>{A("replaying proxy buffer for failed request"),r.default(e.listenerCount("data")>0),e.push(h),e.push(null)})),f}))}}function I(e){e.resume()}t.default=c},6018:function(e,t,a){"use strict";const i=(this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}})(a(9146));function p(e){return new i.default(e)}!function(e){e.HttpsProxyAgent=i.default,e.prototype=i.default.prototype}(p||(p={})),e.exports=p},9829:function(e,t,a){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const p=i(a(5158)).default("https-proxy-agent:parse-proxy-response");t.default=function(e){return new Promise(((t,a)=>{let i=0;const n=[];function s(){const a=e.read();a?function(e){n.push(e),i+=e.length;const a=Buffer.concat(n,i);if(-1===a.indexOf("\r\n\r\n"))return p("have not received end of HTTP headers yet..."),void s();const d=a.toString("ascii",0,a.indexOf("\r\n")),r=+d.split(" ")[1];p("got proxy server response: %o",d),t({statusCode:r,buffered:a})}(a):e.once("readable",s)}function d(e){p("onclose had error %o",e)}function r(){p("onend")}e.on("error",(function t(i){e.removeListener("end",r),e.removeListener("error",t),e.removeListener("close",d),e.removeListener("readable",s),p("onerror %o",i),a(i)})),e.on("close",d),e.on("end",r),s()}))}},7612:function(e,t,a){var i,p;!function(n,s){const d=t;!function(e){const t=Symbol("newer"),a=Symbol("older");function i(e,t){"number"!=typeof e&&(t=e,e=0),this.size=0,this.limit=e,this.oldest=this.newest=void 0,this._keymap=new Map,t&&(this.assign(t),e<1&&(this.limit=this.size))}function p(e,i){this.key=e,this.value=i,this[t]=void 0,this[a]=void 0}function n(e){this.entry=e}function s(e){this.entry=e}function d(e){this.entry=e}e.LRUMap=i,i.prototype._markEntryAsUsed=function(e){e!==this.newest&&(e[t]&&(e===this.oldest&&(this.oldest=e[t]),e[t][a]=e[a]),e[a]&&(e[a][t]=e[t]),e[t]=void 0,e[a]=this.newest,this.newest&&(this.newest[t]=e),this.newest=e)},i.prototype.assign=function(e){let i,n=this.limit||Number.MAX_VALUE;this._keymap.clear();let s=e[Symbol.iterator]();for(let e=s.next();!e.done;e=s.next()){let s=new p(e.value[0],e.value[1]);if(this._keymap.set(s.key,s),i?(i[t]=s,s[a]=i):this.oldest=s,i=s,0==n--)throw new Error("overflow")}this.newest=i,this.size=this._keymap.size},i.prototype.get=function(e){var t=this._keymap.get(e);if(t)return this._markEntryAsUsed(t),t.value},i.prototype.set=function(e,i){var n=this._keymap.get(e);return n?(n.value=i,this._markEntryAsUsed(n),this):(this._keymap.set(e,n=new p(e,i)),this.newest?(this.newest[t]=n,n[a]=this.newest):this.oldest=n,this.newest=n,++this.size,this.size>this.limit&&this.shift(),this)},i.prototype.shift=function(){var e=this.oldest;if(e)return this.oldest[t]?(this.oldest=this.oldest[t],this.oldest[a]=void 0):(this.oldest=void 0,this.newest=void 0),e[t]=e[a]=void 0,this._keymap.delete(e.key),--this.size,[e.key,e.value]},i.prototype.find=function(e){let t=this._keymap.get(e);return t?t.value:void 0},i.prototype.has=function(e){return this._keymap.has(e)},i.prototype.delete=function(e){var i=this._keymap.get(e);if(i)return this._keymap.delete(i.key),i[t]&&i[a]?(i[a][t]=i[t],i[t][a]=i[a]):i[t]?(i[t][a]=void 0,this.oldest=i[t]):i[a]?(i[a][t]=void 0,this.newest=i[a]):this.oldest=this.newest=void 0,this.size--,i.value},i.prototype.clear=function(){this.oldest=this.newest=void 0,this.size=0,this._keymap.clear()},n.prototype[Symbol.iterator]=function(){return this},n.prototype.next=function(){let e=this.entry;return e?(this.entry=e[t],{done:!1,value:[e.key,e.value]}):{done:!0,value:void 0}},s.prototype[Symbol.iterator]=function(){return this},s.prototype.next=function(){let e=this.entry;return e?(this.entry=e[t],{done:!1,value:e.key}):{done:!0,value:void 0}},d.prototype[Symbol.iterator]=function(){return this},d.prototype.next=function(){let e=this.entry;return e?(this.entry=e[t],{done:!1,value:e.value}):{done:!0,value:void 0}},i.prototype.keys=function(){return new s(this.oldest)},i.prototype.values=function(){return new d(this.oldest)},i.prototype.entries=function(){return this},i.prototype[Symbol.iterator]=function(){return new n(this.oldest)},i.prototype.forEach=function(e,a){"object"!=typeof a&&(a=this);let i=this.oldest;for(;i;)e.call(a,i.value,i.key,this),i=i[t]},i.prototype.toJSON=function(){for(var e=new Array(this.size),a=0,i=this.oldest;i;)e[a++]={key:i.key,value:i.value},i=i[t];return e},i.prototype.toString=function(){for(var e="",a=this.oldest;a;)e+=String(a.key)+":"+a.value,(a=a[t])&&(e+=" < ");return e}}(d),void 0===(p="function"==typeof(i=d)?i.call(t,a,t,e):i)||(e.exports=p)}()},7824:e=>{var t=1e3,a=60*t,i=60*a,p=24*i;function n(e,t,a,i){var p=t>=1.5*a;return Math.round(e/a)+" "+i+(p?"s":"")}e.exports=function(e,s){s=s||{};var d,r,o=typeof e;if("string"===o&&e.length>0)return function(e){if(!((e=String(e)).length>100)){var n=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(n){var s=parseFloat(n[1]);switch((n[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*s;case"weeks":case"week":case"w":return 6048e5*s;case"days":case"day":case"d":return s*p;case"hours":case"hour":case"hrs":case"hr":case"h":return s*i;case"minutes":case"minute":case"mins":case"min":case"m":return s*a;case"seconds":case"second":case"secs":case"sec":case"s":return s*t;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return s;default:return}}}}(e);if("number"===o&&isFinite(e))return s.long?(d=e,(r=Math.abs(d))>=p?n(d,r,p,"day"):r>=i?n(d,r,i,"hour"):r>=a?n(d,r,a,"minute"):r>=t?n(d,r,t,"second"):d+" ms"):function(e){var n=Math.abs(e);return n>=p?Math.round(e/p)+"d":n>=i?Math.round(e/i)+"h":n>=a?Math.round(e/a)+"m":n>=t?Math.round(e/t)+"s":e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},7345:e=>{"use strict";e.exports=(e,t)=>(t=t||(()=>{}),e.then((e=>new Promise((e=>{e(t())})).then((()=>e))),(e=>new Promise((e=>{e(t())})).then((()=>{throw e})))))},5860:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=a(6729),p=a(6512),n=a(6506),s=()=>{},d=new p.TimeoutError;t.default=class extends i{constructor(e){var t,a,i,p;if(super(),this._intervalCount=0,this._intervalEnd=0,this._pendingCount=0,this._resolveEmpty=s,this._resolveIdle=s,!("number"==typeof(e=Object.assign({carryoverConcurrencyCount:!1,intervalCap:1/0,interval:0,concurrency:1/0,autoStart:!0,queueClass:n.default},e)).intervalCap&&e.intervalCap>=1))throw new TypeError(`Expected \`intervalCap\` to be a number from 1 and up, got \`${null!==(a=null===(t=e.intervalCap)||void 0===t?void 0:t.toString())&&void 0!==a?a:""}\` (${typeof e.intervalCap})`);if(void 0===e.interval||!(Number.isFinite(e.interval)&&e.interval>=0))throw new TypeError(`Expected \`interval\` to be a finite number >= 0, got \`${null!==(p=null===(i=e.interval)||void 0===i?void 0:i.toString())&&void 0!==p?p:""}\` (${typeof e.interval})`);this._carryoverConcurrencyCount=e.carryoverConcurrencyCount,this._isIntervalIgnored=e.intervalCap===1/0||0===e.interval,this._intervalCap=e.intervalCap,this._interval=e.interval,this._queue=new e.queueClass,this._queueClass=e.queueClass,this.concurrency=e.concurrency,this._timeout=e.timeout,this._throwOnTimeout=!0===e.throwOnTimeout,this._isPaused=!1===e.autoStart}get _doesIntervalAllowAnother(){return this._isIntervalIgnored||this._intervalCount<this._intervalCap}get _doesConcurrentAllowAnother(){return this._pendingCount<this._concurrency}_next(){this._pendingCount--,this._tryToStartAnother(),this.emit("next")}_resolvePromises(){this._resolveEmpty(),this._resolveEmpty=s,0===this._pendingCount&&(this._resolveIdle(),this._resolveIdle=s,this.emit("idle"))}_onResumeInterval(){this._onInterval(),this._initializeIntervalIfNeeded(),this._timeoutId=void 0}_isIntervalPaused(){const e=Date.now();if(void 0===this._intervalId){const t=this._intervalEnd-e;if(!(t<0))return void 0===this._timeoutId&&(this._timeoutId=setTimeout((()=>{this._onResumeInterval()}),t)),!0;this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0}return!1}_tryToStartAnother(){if(0===this._queue.size)return this._intervalId&&clearInterval(this._intervalId),this._intervalId=void 0,this._resolvePromises(),!1;if(!this._isPaused){const e=!this._isIntervalPaused();if(this._doesIntervalAllowAnother&&this._doesConcurrentAllowAnother){const t=this._queue.dequeue();return!!t&&(this.emit("active"),t(),e&&this._initializeIntervalIfNeeded(),!0)}}return!1}_initializeIntervalIfNeeded(){this._isIntervalIgnored||void 0!==this._intervalId||(this._intervalId=setInterval((()=>{this._onInterval()}),this._interval),this._intervalEnd=Date.now()+this._interval)}_onInterval(){0===this._intervalCount&&0===this._pendingCount&&this._intervalId&&(clearInterval(this._intervalId),this._intervalId=void 0),this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0,this._processQueue()}_processQueue(){for(;this._tryToStartAnother(););}get concurrency(){return this._concurrency}set concurrency(e){if(!("number"==typeof e&&e>=1))throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${e}\` (${typeof e})`);this._concurrency=e,this._processQueue()}async add(e,t={}){return new Promise(((a,i)=>{this._queue.enqueue((async()=>{this._pendingCount++,this._intervalCount++;try{const n=void 0===this._timeout&&void 0===t.timeout?e():p.default(Promise.resolve(e()),void 0===t.timeout?this._timeout:t.timeout,(()=>{(void 0===t.throwOnTimeout?this._throwOnTimeout:t.throwOnTimeout)&&i(d)}));a(await n)}catch(e){i(e)}this._next()}),t),this._tryToStartAnother(),this.emit("add")}))}async addAll(e,t){return Promise.all(e.map((async e=>this.add(e,t))))}start(){return this._isPaused?(this._isPaused=!1,this._processQueue(),this):this}pause(){this._isPaused=!0}clear(){this._queue=new this._queueClass}async onEmpty(){if(0!==this._queue.size)return new Promise((e=>{const t=this._resolveEmpty;this._resolveEmpty=()=>{t(),e()}}))}async onIdle(){if(0!==this._pendingCount||0!==this._queue.size)return new Promise((e=>{const t=this._resolveIdle;this._resolveIdle=()=>{t(),e()}}))}get size(){return this._queue.size}sizeBy(e){return this._queue.filter(e).length}get pending(){return this._pendingCount}get isPaused(){return this._isPaused}get timeout(){return this._timeout}set timeout(e){this._timeout=e}}},7489:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,a){let i=0,p=e.length;for(;p>0;){const n=p/2|0;let s=i+n;a(e[s],t)<=0?(i=++s,p-=n+1):p=n}return i}},6506:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=a(7489);t.default=class{constructor(){this._queue=[]}enqueue(e,t){const a={priority:(t=Object.assign({priority:0},t)).priority,run:e};if(this.size&&this._queue[this.size-1].priority>=t.priority)return void this._queue.push(a);const p=i.default(this._queue,a,((e,t)=>t.priority-e.priority));this._queue.splice(p,0,a)}dequeue(){const e=this._queue.shift();return null==e?void 0:e.run}filter(e){return this._queue.filter((t=>t.priority===e.priority)).map((e=>e.run))}get size(){return this._queue.length}}},6512:(e,t,a)=>{"use strict";const i=a(7345);class p extends Error{constructor(e){super(e),this.name="TimeoutError"}}const n=(e,t,a)=>new Promise(((n,s)=>{if("number"!=typeof t||t<0)throw new TypeError("Expected `milliseconds` to be a positive number");if(t===1/0)return void n(e);const d=setTimeout((()=>{if("function"==typeof a){try{n(a())}catch(e){s(e)}return}const i=a instanceof Error?a:new p("string"==typeof a?a:`Promise timed out after ${t} milliseconds`);"function"==typeof e.cancel&&e.cancel(),s(i)}),t);i(e.then(n,s),(()=>{clearTimeout(d)}))}));e.exports=n,e.exports.default=n,e.exports.TimeoutError=p},4658:(e,t,a)=>{e.exports=a(289)("register-protocol-handler").registerProtocolHandler},2130:(e,t,a)=>{"use strict";const i=a(2037),p=a(6224),n=a(6560),{env:s}=process;let d;function r(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}function o(e,t){if(0===d)return 0;if(n("color=16m")||n("color=full")||n("color=truecolor"))return 3;if(n("color=256"))return 2;if(e&&!t&&void 0===d)return 0;const a=d||0;if("dumb"===s.TERM)return a;if("win32"===process.platform){const e=i.release().split(".");return Number(e[0])>=10&&Number(e[2])>=10586?Number(e[2])>=14931?3:2:1}if("CI"in s)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI","GITHUB_ACTIONS","BUILDKITE"].some((e=>e in s))||"codeship"===s.CI_NAME?1:a;if("TEAMCITY_VERSION"in s)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(s.TEAMCITY_VERSION)?1:0;if("truecolor"===s.COLORTERM)return 3;if("TERM_PROGRAM"in s){const e=parseInt((s.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(s.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(s.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(s.TERM)||"COLORTERM"in s?1:a}n("no-color")||n("no-colors")||n("color=false")||n("color=never")?d=0:(n("color")||n("colors")||n("color=true")||n("color=always"))&&(d=1),"FORCE_COLOR"in s&&(d="true"===s.FORCE_COLOR?1:"false"===s.FORCE_COLOR?0:0===s.FORCE_COLOR.length?1:Math.min(parseInt(s.FORCE_COLOR,10),3)),e.exports={supportsColor:function(e){return r(o(e,e&&e.isTTY))},stdout:r(o(!0,p.isatty(1))),stderr:r(o(!0,p.isatty(2)))}},4742:(e,t,a)=>{"use strict";var i=a(5477),p=a(2020),n={TRANSITIONAL:0,NONTRANSITIONAL:1};function s(e){return e.split("\0").map((function(e){return e.normalize("NFC")})).join("\0")}function d(e){for(var t=0,a=p.length-1;t<=a;){var i=Math.floor((t+a)/2),n=p[i];if(n[0][0]<=e&&n[0][1]>=e)return n;n[0][0]>e?a=i-1:t=i+1}return null}var r=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function o(e){return e.replace(r,"_").length}var g=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function l(e,t){"xn--"===e.substr(0,4)&&(e=i.toUnicode(e));var a=!1;(s(e)!==e||"-"===e[3]&&"-"===e[4]||"-"===e[0]||"-"===e[e.length-1]||-1!==e.indexOf(".")||0===e.search(g))&&(a=!0);for(var p=o(e),r=0;r<p;++r){var l=d(e.codePointAt(r));if(A===n.TRANSITIONAL&&"valid"!==l[1]||A===n.NONTRANSITIONAL&&"valid"!==l[1]&&"deviation"!==l[1]){a=!0;break}}return{label:e,error:a}}function A(e,t,a){var i=function(e,t,a){for(var i=!1,p="",s=o(e),r=0;r<s;++r){var g=e.codePointAt(r),l=d(g);switch(l[1]){case"disallowed":i=!0,p+=String.fromCodePoint(g);break;case"ignored":break;case"mapped":p+=String.fromCodePoint.apply(String,l[2]);break;case"deviation":p+=a===n.TRANSITIONAL?String.fromCodePoint.apply(String,l[2]):String.fromCodePoint(g);break;case"valid":p+=String.fromCodePoint(g);break;case"disallowed_STD3_mapped":t?(i=!0,p+=String.fromCodePoint(g)):p+=String.fromCodePoint.apply(String,l[2]);break;case"disallowed_STD3_valid":t&&(i=!0),p+=String.fromCodePoint(g)}}return{string:p,error:i}}(e,t,a);i.string=s(i.string);for(var p=i.string.split("."),r=0;r<p.length;++r)try{var g=l(p[r]);p[r]=g.label,i.error=i.error||g.error}catch(e){i.error=!0}return{string:p.join("."),error:i.error}}e.exports.toASCII=function(e,t,a,p){var n=A(e,t,a),s=n.string.split(".");if(s=s.map((function(e){try{return i.toASCII(e)}catch(t){return n.error=!0,e}})),p){var d=s.slice(0,s.length-1).join(".").length;(d.length>253||0===d.length)&&(n.error=!0);for(var r=0;r<s.length;++r)if(s.length>63||0===s.length){n.error=!0;break}}return n.error?null:s.join(".")},e.exports.toUnicode=function(e,t){var a=A(e,t,n.NONTRANSITIONAL);return{domain:a.string,error:a.error}},e.exports.PROCESSING_OPTIONS=n},993:e=>{"use strict";var t={};function a(e){return e<0?-1:1}function i(e,t){t.unsigned||--e;const i=t.unsigned?0:-Math.pow(2,e),p=Math.pow(2,e)-1,n=t.moduloBitLength?Math.pow(2,t.moduloBitLength):Math.pow(2,e),s=t.moduloBitLength?Math.pow(2,t.moduloBitLength-1):Math.pow(2,e-1);return function(e,d){d||(d={});let r=+e;if(d.enforceRange){if(!Number.isFinite(r))throw new TypeError("Argument is not a finite number");if(r=a(r)*Math.floor(Math.abs(r)),r<i||r>p)throw new TypeError("Argument is not in byte range");return r}if(!isNaN(r)&&d.clamp)return r=function(e){return e%1==.5&&0==(1&e)?Math.floor(e):Math.round(e)}(r),r<i&&(r=i),r>p&&(r=p),r;if(!Number.isFinite(r)||0===r)return 0;if(r=a(r)*Math.floor(Math.abs(r)),r%=n,!t.unsigned&&r>=s)return r-n;if(t.unsigned)if(r<0)r+=n;else if(-0===r)return 0;return r}}e.exports=t,t.void=function(){},t.boolean=function(e){return!!e},t.byte=i(8,{unsigned:!1}),t.octet=i(8,{unsigned:!0}),t.short=i(16,{unsigned:!1}),t["unsigned short"]=i(16,{unsigned:!0}),t.long=i(32,{unsigned:!1}),t["unsigned long"]=i(32,{unsigned:!0}),t["long long"]=i(32,{unsigned:!1,moduloBitLength:64}),t["unsigned long long"]=i(32,{unsigned:!0,moduloBitLength:64}),t.double=function(e){const t=+e;if(!Number.isFinite(t))throw new TypeError("Argument is not a finite floating-point value");return t},t["unrestricted double"]=function(e){const t=+e;if(isNaN(t))throw new TypeError("Argument is NaN");return t},t.float=t.double,t["unrestricted float"]=t["unrestricted double"],t.DOMString=function(e,t){return t||(t={}),t.treatNullAsEmptyString&&null===e?"":String(e)},t.ByteString=function(e,t){const a=String(e);let i;for(let e=0;void 0!==(i=a.codePointAt(e));++e)if(i>255)throw new TypeError("Argument is not a valid bytestring");return a},t.USVString=function(e){const t=String(e),a=t.length,i=[];for(let e=0;e<a;++e){const p=t.charCodeAt(e);if(p<55296||p>57343)i.push(String.fromCodePoint(p));else if(56320<=p&&p<=57343)i.push(String.fromCodePoint(65533));else if(e===a-1)i.push(String.fromCodePoint(65533));else{const a=t.charCodeAt(e+1);if(56320<=a&&a<=57343){const t=1023&p,n=1023&a;i.push(String.fromCodePoint(65536+1024*t+n)),++e}else i.push(String.fromCodePoint(65533))}}return i.join("")},t.Date=function(e,t){if(!(e instanceof Date))throw new TypeError("Argument is not a Date object");if(!isNaN(e))return e},t.RegExp=function(e,t){return e instanceof RegExp||(e=new RegExp(e)),e}},9718:(e,t,a)=>{"use strict";const i=a(5341);t.implementation=class{constructor(e){const t=e[0],a=e[1];let p=null;if(void 0!==a&&(p=i.basicURLParse(a),"failure"===p))throw new TypeError("Invalid base URL");const n=i.basicURLParse(t,{baseURL:p});if("failure"===n)throw new TypeError("Invalid URL");this._url=n}get href(){return i.serializeURL(this._url)}set href(e){const t=i.basicURLParse(e);if("failure"===t)throw new TypeError("Invalid URL");this._url=t}get origin(){return i.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){i.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){i.cannotHaveAUsernamePasswordPort(this._url)||i.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){i.cannotHaveAUsernamePasswordPort(this._url)||i.setThePassword(this._url,e)}get host(){const e=this._url;return null===e.host?"":null===e.port?i.serializeHost(e.host):i.serializeHost(e.host)+":"+i.serializeInteger(e.port)}set host(e){this._url.cannotBeABaseURL||i.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){return null===this._url.host?"":i.serializeHost(this._url.host)}set hostname(e){this._url.cannotBeABaseURL||i.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){return null===this._url.port?"":i.serializeInteger(this._url.port)}set port(e){i.cannotHaveAUsernamePasswordPort(this._url)||(""===e?this._url.port=null:i.basicURLParse(e,{url:this._url,stateOverride:"port"}))}get pathname(){return this._url.cannotBeABaseURL?this._url.path[0]:0===this._url.path.length?"":"/"+this._url.path.join("/")}set pathname(e){this._url.cannotBeABaseURL||(this._url.path=[],i.basicURLParse(e,{url:this._url,stateOverride:"path start"}))}get search(){return null===this._url.query||""===this._url.query?"":"?"+this._url.query}set search(e){const t=this._url;if(""===e)return void(t.query=null);const a="?"===e[0]?e.substring(1):e;t.query="",i.basicURLParse(a,{url:t,stateOverride:"query"})}get hash(){return null===this._url.fragment||""===this._url.fragment?"":"#"+this._url.fragment}set hash(e){if(""===e)return void(this._url.fragment=null);const t="#"===e[0]?e.substring(1):e;this._url.fragment="",i.basicURLParse(t,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}},4328:(e,t,a)=>{"use strict";const i=a(993),p=a(9581),n=a(9718),s=p.implSymbol;function d(t){if(!this||this[s]||!(this instanceof d))throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");if(arguments.length<1)throw new TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.");const a=[];for(let e=0;e<arguments.length&&e<2;++e)a[e]=arguments[e];a[0]=i.USVString(a[0]),void 0!==a[1]&&(a[1]=i.USVString(a[1])),e.exports.setup(this,a)}d.prototype.toJSON=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");const t=[];for(let e=0;e<arguments.length&&e<0;++e)t[e]=arguments[e];return this[s].toJSON.apply(this[s],t)},Object.defineProperty(d.prototype,"href",{get(){return this[s].href},set(e){e=i.USVString(e),this[s].href=e},enumerable:!0,configurable:!0}),d.prototype.toString=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");return this.href},Object.defineProperty(d.prototype,"origin",{get(){return this[s].origin},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"protocol",{get(){return this[s].protocol},set(e){e=i.USVString(e),this[s].protocol=e},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"username",{get(){return this[s].username},set(e){e=i.USVString(e),this[s].username=e},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"password",{get(){return this[s].password},set(e){e=i.USVString(e),this[s].password=e},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"host",{get(){return this[s].host},set(e){e=i.USVString(e),this[s].host=e},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"hostname",{get(){return this[s].hostname},set(e){e=i.USVString(e),this[s].hostname=e},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"port",{get(){return this[s].port},set(e){e=i.USVString(e),this[s].port=e},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"pathname",{get(){return this[s].pathname},set(e){e=i.USVString(e),this[s].pathname=e},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"search",{get(){return this[s].search},set(e){e=i.USVString(e),this[s].search=e},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"hash",{get(){return this[s].hash},set(e){e=i.USVString(e),this[s].hash=e},enumerable:!0,configurable:!0}),e.exports={is:e=>!!e&&e[s]instanceof n.implementation,create(e,t){let a=Object.create(d.prototype);return this.setup(a,e,t),a},setup(e,t,a){a||(a={}),a.wrapper=e,e[s]=new n.implementation(t,a),e[s][p.wrapperSymbol]=e},interface:d,expose:{Window:{URL:d},Worker:{URL:d}}}},7347:(e,t,a)=>{"use strict";t.URL=a(4328).interface,a(5341).serializeURL,a(5341).serializeURLOrigin,a(5341).basicURLParse,a(5341).setTheUsername,a(5341).setThePassword,a(5341).serializeHost,a(5341).serializeInteger,a(5341).parseURL},5341:(e,t,a)=>{"use strict";const i=a(5477),p=a(4742),n={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443},s=Symbol("failure");function d(e){return i.ucs2.decode(e).length}function r(e,t){const a=e[t];return isNaN(a)?void 0:String.fromCodePoint(a)}function o(e){return e>=48&&e<=57}function g(e){return e>=65&&e<=90||e>=97&&e<=122}function l(e){return o(e)||e>=65&&e<=70||e>=97&&e<=102}function A(e){return"."===e||"%2e"===e.toLowerCase()}function c(e){return 2===e.length&&g(e.codePointAt(0))&&(":"===e[1]||"|"===e[1])}function I(e){return void 0!==n[e]}function C(e){return I(e.scheme)}function m(e){let t=e.toString(16).toUpperCase();return 1===t.length&&(t="0"+t),"%"+t}function u(e){return e<=31||e>126}const h=new Set([32,34,35,60,62,63,96,123,125]);function f(e){return u(e)||h.has(e)}const v=new Set([47,58,59,61,64,91,92,93,94,124]);function _(e){return f(e)||v.has(e)}function y(e,t){const a=String.fromCodePoint(e);return t(e)?function(e){const t=new Buffer(e);let a="";for(let e=0;e<t.length;++e)a+=m(t[e]);return a}(a):a}function b(e){let t=10;return e.length>=2&&"0"===e.charAt(0)&&"x"===e.charAt(1).toLowerCase()?(e=e.substring(2),t=16):e.length>=2&&"0"===e.charAt(0)&&(e=e.substring(1),t=8),""===e?0:(10===t?/[^0-9]/:16===t?/[^0-9A-Fa-f]/:/[^0-7]/).test(e)?s:parseInt(e,t)}function w(e,t){if("["===e[0])return"]"!==e[e.length-1]?s:function(e){const t=[0,0,0,0,0,0,0,0];let a=0,p=null,n=0;if(58===(e=i.ucs2.decode(e))[n]){if(58!==e[n+1])return s;n+=2,++a,p=a}for(;n<e.length;){if(8===a)return s;if(58===e[n]){if(null!==p)return s;++n,++a,p=a;continue}let i=0,d=0;for(;d<4&&l(e[n]);)i=16*i+parseInt(r(e,n),16),++n,++d;if(46===e[n]){if(0===d)return s;if(n-=d,a>6)return s;let i=0;for(;void 0!==e[n];){let p=null;if(i>0){if(!(46===e[n]&&i<4))return s;++n}if(!o(e[n]))return s;for(;o(e[n]);){const t=parseInt(r(e,n));if(null===p)p=t;else{if(0===p)return s;p=10*p+t}if(p>255)return s;++n}t[a]=256*t[a]+p,++i,2!==i&&4!==i||++a}if(4!==i)return s;break}if(58===e[n]){if(++n,void 0===e[n])return s}else if(void 0!==e[n])return s;t[a]=i,++a}if(null!==p){let e=a-p;for(a=7;0!==a&&e>0;){const i=t[p+e-1];t[p+e-1]=t[a],t[a]=i,--a,--e}}else if(null===p&&8!==a)return s;return t}(e.substring(1,e.length-1));if(!t)return function(e){if(-1!==e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/))return s;let t="";const a=i.ucs2.decode(e);for(let e=0;e<a.length;++e)t+=y(a[e],u);return t}(e);const a=function(e){const t=new Buffer(e),a=[];for(let e=0;e<t.length;++e)37!==t[e]?a.push(t[e]):37===t[e]&&l(t[e+1])&&l(t[e+2])?(a.push(parseInt(t.slice(e+1,e+3).toString(),16)),e+=2):a.push(t[e]);return new Buffer(a).toString()}(e),n=p.toASCII(a,!1,p.PROCESSING_OPTIONS.NONTRANSITIONAL,!1);if(null===n)return s;if(-1!==n.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/))return s;const d=function(e){const t=e.split(".");if(""===t[t.length-1]&&t.length>1&&t.pop(),t.length>4)return e;const a=[];for(const i of t){if(""===i)return e;const t=b(i);if(t===s)return e;a.push(t)}for(let e=0;e<a.length-1;++e)if(a[e]>255)return s;if(a[a.length-1]>=Math.pow(256,5-a.length))return s;let i=a.pop(),p=0;for(const e of a)i+=e*Math.pow(256,3-p),++p;return i}(n);return"number"==typeof d||d===s?d:n}function S(e){return"number"==typeof e?function(e){let t="",a=e;for(let e=1;e<=4;++e)t=String(a%256)+t,4!==e&&(t="."+t),a=Math.floor(a/256);return t}(e):e instanceof Array?"["+function(e){let t="";const a=function(e){let t=null,a=1,i=null,p=0;for(let n=0;n<e.length;++n)0!==e[n]?(p>a&&(t=i,a=p),i=null,p=0):(null===i&&(i=n),++p);return p>a&&(t=i,a=p),{idx:t,len:a}}(e).idx;let i=!1;for(let p=0;p<=7;++p)i&&0===e[p]||(i&&(i=!1),a!==p?(t+=e[p].toString(16),7!==p&&(t+=":")):(t+=0===p?"::":":",i=!0));return t}(e)+"]":e}function E(e){const t=e.path;var a;0!==t.length&&("file"===e.scheme&&1===t.length&&(a=t[0],/^[A-Za-z]:$/.test(a))||t.pop())}function T(e){return""!==e.username||""!==e.password}function N(e,t,a,p,n){if(this.pointer=0,this.input=e,this.base=t||null,this.encodingOverride=a||"utf-8",this.stateOverride=n,this.url=p,this.failure=!1,this.parseError=!1,!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:!1};const e=function(e){return e.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"")}(this.input);e!==this.input&&(this.parseError=!0),this.input=e}const d=function(e){return e.replace(/\u0009|\u000A|\u000D/g,"")}(this.input);for(d!==this.input&&(this.parseError=!0),this.input=d,this.state=n||"scheme start",this.buffer="",this.atFlag=!1,this.arrFlag=!1,this.passwordTokenSeenFlag=!1,this.input=i.ucs2.decode(this.input);this.pointer<=this.input.length;++this.pointer){const e=this.input[this.pointer],t=isNaN(e)?void 0:String.fromCodePoint(e),a=this["parse "+this.state](e,t);if(!a)break;if(a===s){this.failure=!0;break}}}N.prototype["parse scheme start"]=function(e,t){if(g(e))this.buffer+=t.toLowerCase(),this.state="scheme";else{if(this.stateOverride)return this.parseError=!0,s;this.state="no scheme",--this.pointer}return!0},N.prototype["parse scheme"]=function(e,t){if(function(e){return g(e)||o(e)}(e)||43===e||45===e||46===e)this.buffer+=t.toLowerCase();else if(58===e){if(this.stateOverride){if(C(this.url)&&!I(this.buffer))return!1;if(!C(this.url)&&I(this.buffer))return!1;if((T(this.url)||null!==this.url.port)&&"file"===this.buffer)return!1;if("file"===this.url.scheme&&(""===this.url.host||null===this.url.host))return!1}if(this.url.scheme=this.buffer,this.buffer="",this.stateOverride)return!1;"file"===this.url.scheme?(47===this.input[this.pointer+1]&&47===this.input[this.pointer+2]||(this.parseError=!0),this.state="file"):C(this.url)&&null!==this.base&&this.base.scheme===this.url.scheme?this.state="special relative or authority":C(this.url)?this.state="special authority slashes":47===this.input[this.pointer+1]?(this.state="path or authority",++this.pointer):(this.url.cannotBeABaseURL=!0,this.url.path.push(""),this.state="cannot-be-a-base-URL path")}else{if(this.stateOverride)return this.parseError=!0,s;this.buffer="",this.state="no scheme",this.pointer=-1}return!0},N.prototype["parse no scheme"]=function(e){return null===this.base||this.base.cannotBeABaseURL&&35!==e?s:(this.base.cannotBeABaseURL&&35===e?(this.url.scheme=this.base.scheme,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.url.cannotBeABaseURL=!0,this.state="fragment"):"file"===this.base.scheme?(this.state="file",--this.pointer):(this.state="relative",--this.pointer),!0)},N.prototype["parse special relative or authority"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="relative",--this.pointer),!0},N.prototype["parse path or authority"]=function(e){return 47===e?this.state="authority":(this.state="path",--this.pointer),!0},N.prototype["parse relative"]=function(e){return this.url.scheme=this.base.scheme,isNaN(e)?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query):47===e?this.state="relative slash":63===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):C(this.url)&&92===e?(this.parseError=!0,this.state="relative slash"):(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(0,this.base.path.length-1),this.state="path",--this.pointer),!0},N.prototype["parse relative slash"]=function(e){return!C(this.url)||47!==e&&92!==e?47===e?this.state="authority":(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.state="path",--this.pointer):(92===e&&(this.parseError=!0),this.state="special authority ignore slashes"),!0},N.prototype["parse special authority slashes"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="special authority ignore slashes",--this.pointer),!0},N.prototype["parse special authority ignore slashes"]=function(e){return 47!==e&&92!==e?(this.state="authority",--this.pointer):this.parseError=!0,!0},N.prototype["parse authority"]=function(e,t){if(64===e){this.parseError=!0,this.atFlag&&(this.buffer="%40"+this.buffer),this.atFlag=!0;const e=d(this.buffer);for(let t=0;t<e;++t){const e=this.buffer.codePointAt(t);if(58===e&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=!0;continue}const a=y(e,_);this.passwordTokenSeenFlag?this.url.password+=a:this.url.username+=a}this.buffer=""}else if(isNaN(e)||47===e||63===e||35===e||C(this.url)&&92===e){if(this.atFlag&&""===this.buffer)return this.parseError=!0,s;this.pointer-=d(this.buffer)+1,this.buffer="",this.state="host"}else this.buffer+=t;return!0},N.prototype["parse hostname"]=N.prototype["parse host"]=function(e,t){if(this.stateOverride&&"file"===this.url.scheme)--this.pointer,this.state="file host";else if(58!==e||this.arrFlag)if(isNaN(e)||47===e||63===e||35===e||C(this.url)&&92===e){if(--this.pointer,C(this.url)&&""===this.buffer)return this.parseError=!0,s;if(this.stateOverride&&""===this.buffer&&(T(this.url)||null!==this.url.port))return this.parseError=!0,!1;const e=w(this.buffer,C(this.url));if(e===s)return s;if(this.url.host=e,this.buffer="",this.state="path start",this.stateOverride)return!1}else 91===e?this.arrFlag=!0:93===e&&(this.arrFlag=!1),this.buffer+=t;else{if(""===this.buffer)return this.parseError=!0,s;const e=w(this.buffer,C(this.url));if(e===s)return s;if(this.url.host=e,this.buffer="",this.state="port","hostname"===this.stateOverride)return!1}return!0},N.prototype["parse port"]=function(e,t){if(o(e))this.buffer+=t;else{if(!(isNaN(e)||47===e||63===e||35===e||C(this.url)&&92===e||this.stateOverride))return this.parseError=!0,s;if(""!==this.buffer){const e=parseInt(this.buffer);if(e>Math.pow(2,16)-1)return this.parseError=!0,s;this.url.port=e===(a=this.url.scheme,n[a])?null:e,this.buffer=""}if(this.stateOverride)return!1;this.state="path start",--this.pointer}var a;return!0};const D=new Set([47,92,63,35]);N.prototype["parse file"]=function(e){var t,a;return this.url.scheme="file",47===e||92===e?(92===e&&(this.parseError=!0),this.state="file slash"):null!==this.base&&"file"===this.base.scheme?isNaN(e)?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query):63===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):(this.input.length-this.pointer-1==0||(t=e,a=this.input[this.pointer+1],!g(t)||58!==a&&124!==a)||this.input.length-this.pointer-1>=2&&!D.has(this.input[this.pointer+2])?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),E(this.url)):this.parseError=!0,this.state="path",--this.pointer):(this.state="path",--this.pointer),!0},N.prototype["parse file slash"]=function(e){var t;return 47===e||92===e?(92===e&&(this.parseError=!0),this.state="file host"):(null!==this.base&&"file"===this.base.scheme&&(2===(t=this.base.path[0]).length&&g(t.codePointAt(0))&&":"===t[1]?this.url.path.push(this.base.path[0]):this.url.host=this.base.host),this.state="path",--this.pointer),!0},N.prototype["parse file host"]=function(e,t){if(isNaN(e)||47===e||92===e||63===e||35===e)if(--this.pointer,!this.stateOverride&&c(this.buffer))this.parseError=!0,this.state="path";else if(""===this.buffer){if(this.url.host="",this.stateOverride)return!1;this.state="path start"}else{let e=w(this.buffer,C(this.url));if(e===s)return s;if("localhost"===e&&(e=""),this.url.host=e,this.stateOverride)return!1;this.buffer="",this.state="path start"}else this.buffer+=t;return!0},N.prototype["parse path start"]=function(e){return C(this.url)?(92===e&&(this.parseError=!0),this.state="path",47!==e&&92!==e&&--this.pointer):this.stateOverride||63!==e?this.stateOverride||35!==e?void 0!==e&&(this.state="path",47!==e&&--this.pointer):(this.url.fragment="",this.state="fragment"):(this.url.query="",this.state="query"),!0},N.prototype["parse path"]=function(e){if(isNaN(e)||47===e||C(this.url)&&92===e||!this.stateOverride&&(63===e||35===e)){if(C(this.url)&&92===e&&(this.parseError=!0),".."===(t=(t=this.buffer).toLowerCase())||"%2e."===t||".%2e"===t||"%2e%2e"===t?(E(this.url),47===e||C(this.url)&&92===e||this.url.path.push("")):!A(this.buffer)||47===e||C(this.url)&&92===e?A(this.buffer)||("file"===this.url.scheme&&0===this.url.path.length&&c(this.buffer)&&(""!==this.url.host&&null!==this.url.host&&(this.parseError=!0,this.url.host=""),this.buffer=this.buffer[0]+":"),this.url.path.push(this.buffer)):this.url.path.push(""),this.buffer="","file"===this.url.scheme&&(void 0===e||63===e||35===e))for(;this.url.path.length>1&&""===this.url.path[0];)this.parseError=!0,this.url.path.shift();63===e&&(this.url.query="",this.state="query"),35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||l(this.input[this.pointer+1])&&l(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=y(e,f);var t;return!0},N.prototype["parse cannot-be-a-base-URL path"]=function(e){return 63===e?(this.url.query="",this.state="query"):35===e?(this.url.fragment="",this.state="fragment"):(isNaN(e)||37===e||(this.parseError=!0),37!==e||l(this.input[this.pointer+1])&&l(this.input[this.pointer+2])||(this.parseError=!0),isNaN(e)||(this.url.path[0]=this.url.path[0]+y(e,u))),!0},N.prototype["parse query"]=function(e,t){if(isNaN(e)||!this.stateOverride&&35===e){C(this.url)&&"ws"!==this.url.scheme&&"wss"!==this.url.scheme||(this.encodingOverride="utf-8");const t=new Buffer(this.buffer);for(let e=0;e<t.length;++e)t[e]<33||t[e]>126||34===t[e]||35===t[e]||60===t[e]||62===t[e]?this.url.query+=m(t[e]):this.url.query+=String.fromCodePoint(t[e]);this.buffer="",35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||l(this.input[this.pointer+1])&&l(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=t;return!0},N.prototype["parse fragment"]=function(e){return isNaN(e)||(0===e?this.parseError=!0:(37!==e||l(this.input[this.pointer+1])&&l(this.input[this.pointer+2])||(this.parseError=!0),this.url.fragment+=y(e,u))),!0},e.exports.serializeURL=function(e,t){let a=e.scheme+":";if(null!==e.host?(a+="//",""===e.username&&""===e.password||(a+=e.username,""!==e.password&&(a+=":"+e.password),a+="@"),a+=S(e.host),null!==e.port&&(a+=":"+e.port)):null===e.host&&"file"===e.scheme&&(a+="//"),e.cannotBeABaseURL)a+=e.path[0];else for(const t of e.path)a+="/"+t;return null!==e.query&&(a+="?"+e.query),t||null===e.fragment||(a+="#"+e.fragment),a},e.exports.serializeURLOrigin=function(t){switch(t.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(t.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return function(e){let t=e.scheme+"://";return t+=S(e.host),null!==e.port&&(t+=":"+e.port),t}({scheme:t.scheme,host:t.host,port:t.port});case"file":return"file://";default:return"null"}},e.exports.basicURLParse=function(e,t){void 0===t&&(t={});const a=new N(e,t.baseURL,t.encodingOverride,t.url,t.stateOverride);return a.failure?"failure":a.url},e.exports.setTheUsername=function(e,t){e.username="";const a=i.ucs2.decode(t);for(let t=0;t<a.length;++t)e.username+=y(a[t],_)},e.exports.setThePassword=function(e,t){e.password="";const a=i.ucs2.decode(t);for(let t=0;t<a.length;++t)e.password+=y(a[t],_)},e.exports.serializeHost=S,e.exports.cannotHaveAUsernamePasswordPort=function(e){return null===e.host||""===e.host||e.cannotBeABaseURL||"file"===e.scheme},e.exports.serializeInteger=function(e){return String(e)},e.exports.parseURL=function(t,a){return void 0===a&&(a={}),e.exports.basicURLParse(t,{baseURL:a.baseURL,encodingOverride:a.encodingOverride})}},9581:e=>{"use strict";e.exports.mixin=function(e,t){const a=Object.getOwnPropertyNames(t);for(let i=0;i<a.length;++i)Object.defineProperty(e,a[i],Object.getOwnPropertyDescriptor(t,a[i]))},e.exports.wrapperSymbol=Symbol("wrapper"),e.exports.implSymbol=Symbol("impl"),e.exports.wrapperForImpl=function(t){return t[e.exports.wrapperSymbol]},e.exports.implForWrapper=function(t){return t[e.exports.implSymbol]}},8777:(e,t,a)=>{"use strict";const i=a(8762);i.createWebSocketStream=a(404),i.Server=a(9284),i.Receiver=a(2957),i.Sender=a(7330),e.exports=i},977:(e,t,a)=>{"use strict";const{EMPTY_BUFFER:i}=a(1872);function p(e,t){if(0===e.length)return i;if(1===e.length)return e[0];const a=Buffer.allocUnsafe(t);let p=0;for(let t=0;t<e.length;t++){const i=e[t];a.set(i,p),p+=i.length}return p<t?a.slice(0,p):a}function n(e,t,a,i,p){for(let n=0;n<p;n++)a[i+n]=e[n]^t[3&n]}function s(e,t){const a=e.length;for(let i=0;i<a;i++)e[i]^=t[3&i]}function d(e){return e.byteLength===e.buffer.byteLength?e.buffer:e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}function r(e){if(r.readOnly=!0,Buffer.isBuffer(e))return e;let t;return e instanceof ArrayBuffer?t=Buffer.from(e):ArrayBuffer.isView(e)?t=Buffer.from(e.buffer,e.byteOffset,e.byteLength):(t=Buffer.from(e),r.readOnly=!1),t}try{const t=a(Object(function(){var e=new Error("Cannot find module 'bufferutil'");throw e.code="MODULE_NOT_FOUND",e}())),i=t.BufferUtil||t;e.exports={concat:p,mask(e,t,a,p,s){s<48?n(e,t,a,p,s):i.mask(e,t,a,p,s)},toArrayBuffer:d,toBuffer:r,unmask(e,t){e.length<32?s(e,t):i.unmask(e,t)}}}catch(t){e.exports={concat:p,mask:n,toArrayBuffer:d,toBuffer:r,unmask:s}}},1872:e=>{"use strict";e.exports={BINARY_TYPES:["nodebuffer","arraybuffer","fragments"],GUID:"258EAFA5-E914-47DA-95CA-C5AB0DC85B11",kStatusCode:Symbol("status-code"),kWebSocket:Symbol("websocket"),EMPTY_BUFFER:Buffer.alloc(0),NOOP:()=>{}}},62:e=>{"use strict";class t{constructor(e,t){this.target=t,this.type=e}}class a extends t{constructor(e,t){super("message",t),this.data=e}}class i extends t{constructor(e,t,a){super("close",a),this.wasClean=a._closeFrameReceived&&a._closeFrameSent,this.reason=t,this.code=e}}class p extends t{constructor(e){super("open",e)}}class n extends t{constructor(e,t){super("error",t),this.message=e.message,this.error=e}}const s={addEventListener(e,t,s){if("function"!=typeof t)return;function d(e){t.call(this,new a(e,this))}function r(e,a){t.call(this,new i(e,a,this))}function o(e){t.call(this,new n(e,this))}function g(){t.call(this,new p(this))}const l=s&&s.once?"once":"on";"message"===e?(d._listener=t,this[l](e,d)):"close"===e?(r._listener=t,this[l](e,r)):"error"===e?(o._listener=t,this[l](e,o)):"open"===e?(g._listener=t,this[l](e,g)):this[l](e,t)},removeEventListener(e,t){const a=this.listeners(e);for(let i=0;i<a.length;i++)a[i]!==t&&a[i]._listener!==t||this.removeListener(e,a[i])}};e.exports=s},1503:e=>{"use strict";const t=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0];function a(e,t,a){void 0===e[t]?e[t]=[a]:e[t].push(a)}e.exports={format:function(e){return Object.keys(e).map((t=>{let a=e[t];return Array.isArray(a)||(a=[a]),a.map((e=>[t].concat(Object.keys(e).map((t=>{let a=e[t];return Array.isArray(a)||(a=[a]),a.map((e=>!0===e?t:`${t}=${e}`)).join("; ")}))).join("; "))).join(", ")})).join(", ")},parse:function(e){const i=Object.create(null);if(void 0===e||""===e)return i;let p,n,s=Object.create(null),d=!1,r=!1,o=!1,g=-1,l=-1,A=0;for(;A<e.length;A++){const c=e.charCodeAt(A);if(void 0===p)if(-1===l&&1===t[c])-1===g&&(g=A);else if(32===c||9===c)-1===l&&-1!==g&&(l=A);else{if(59!==c&&44!==c)throw new SyntaxError(`Unexpected character at index ${A}`);{if(-1===g)throw new SyntaxError(`Unexpected character at index ${A}`);-1===l&&(l=A);const t=e.slice(g,l);44===c?(a(i,t,s),s=Object.create(null)):p=t,g=l=-1}}else if(void 0===n)if(-1===l&&1===t[c])-1===g&&(g=A);else if(32===c||9===c)-1===l&&-1!==g&&(l=A);else if(59===c||44===c){if(-1===g)throw new SyntaxError(`Unexpected character at index ${A}`);-1===l&&(l=A),a(s,e.slice(g,l),!0),44===c&&(a(i,p,s),s=Object.create(null),p=void 0),g=l=-1}else{if(61!==c||-1===g||-1!==l)throw new SyntaxError(`Unexpected character at index ${A}`);n=e.slice(g,A),g=l=-1}else if(r){if(1!==t[c])throw new SyntaxError(`Unexpected character at index ${A}`);-1===g?g=A:d||(d=!0),r=!1}else if(o)if(1===t[c])-1===g&&(g=A);else if(34===c&&-1!==g)o=!1,l=A;else{if(92!==c)throw new SyntaxError(`Unexpected character at index ${A}`);r=!0}else if(34===c&&61===e.charCodeAt(A-1))o=!0;else if(-1===l&&1===t[c])-1===g&&(g=A);else if(-1===g||32!==c&&9!==c){if(59!==c&&44!==c)throw new SyntaxError(`Unexpected character at index ${A}`);{if(-1===g)throw new SyntaxError(`Unexpected character at index ${A}`);-1===l&&(l=A);let t=e.slice(g,l);d&&(t=t.replace(/\\/g,""),d=!1),a(s,n,t),44===c&&(a(i,p,s),s=Object.create(null),p=void 0),n=void 0,g=l=-1}}else-1===l&&(l=A)}if(-1===g||o)throw new SyntaxError("Unexpected end of input");-1===l&&(l=A);const c=e.slice(g,l);return void 0===p?a(i,c,s):(void 0===n?a(s,c,!0):a(s,n,d?c.replace(/\\/g,""):c),a(i,p,s)),i}}},305:e=>{"use strict";const t=Symbol("kDone"),a=Symbol("kRun");e.exports=class{constructor(e){this[t]=()=>{this.pending--,this[a]()},this.concurrency=e||1/0,this.jobs=[],this.pending=0}add(e){this.jobs.push(e),this[a]()}[a](){if(this.pending!==this.concurrency&&this.jobs.length){const e=this.jobs.shift();this.pending++,e(this[t])}}}},5196:(e,t,a)=>{"use strict";const i=a(9796),p=a(977),n=a(305),{kStatusCode:s,NOOP:d}=a(1872),r=Buffer.from([0,0,255,255]),o=Symbol("permessage-deflate"),g=Symbol("total-length"),l=Symbol("callback"),A=Symbol("buffers"),c=Symbol("error");let I;function C(e){this[A].push(e),this[g]+=e.length}function m(e){this[g]+=e.length,this[o]._maxPayload<1||this[g]<=this[o]._maxPayload?this[A].push(e):(this[c]=new RangeError("Max payload size exceeded"),this[c].code="WS_ERR_UNSUPPORTED_MESSAGE_LENGTH",this[c][s]=1009,this.removeListener("data",m),this.reset())}function u(e){this[o]._inflate=null,e[s]=1007,this[l](e)}e.exports=class{constructor(e,t,a){if(this._maxPayload=0|a,this._options=e||{},this._threshold=void 0!==this._options.threshold?this._options.threshold:1024,this._isServer=!!t,this._deflate=null,this._inflate=null,this.params=null,!I){const e=void 0!==this._options.concurrencyLimit?this._options.concurrencyLimit:10;I=new n(e)}}static get extensionName(){return"permessage-deflate"}offer(){const e={};return this._options.serverNoContextTakeover&&(e.server_no_context_takeover=!0),this._options.clientNoContextTakeover&&(e.client_no_context_takeover=!0),this._options.serverMaxWindowBits&&(e.server_max_window_bits=this._options.serverMaxWindowBits),this._options.clientMaxWindowBits?e.client_max_window_bits=this._options.clientMaxWindowBits:null==this._options.clientMaxWindowBits&&(e.client_max_window_bits=!0),e}accept(e){return e=this.normalizeParams(e),this.params=this._isServer?this.acceptAsServer(e):this.acceptAsClient(e),this.params}cleanup(){if(this._inflate&&(this._inflate.close(),this._inflate=null),this._deflate){const e=this._deflate[l];this._deflate.close(),this._deflate=null,e&&e(new Error("The deflate stream was closed while data was being processed"))}}acceptAsServer(e){const t=this._options,a=e.find((e=>!(!1===t.serverNoContextTakeover&&e.server_no_context_takeover||e.server_max_window_bits&&(!1===t.serverMaxWindowBits||"number"==typeof t.serverMaxWindowBits&&t.serverMaxWindowBits>e.server_max_window_bits)||"number"==typeof t.clientMaxWindowBits&&!e.client_max_window_bits)));if(!a)throw new Error("None of the extension offers can be accepted");return t.serverNoContextTakeover&&(a.server_no_context_takeover=!0),t.clientNoContextTakeover&&(a.client_no_context_takeover=!0),"number"==typeof t.serverMaxWindowBits&&(a.server_max_window_bits=t.serverMaxWindowBits),"number"==typeof t.clientMaxWindowBits?a.client_max_window_bits=t.clientMaxWindowBits:!0!==a.client_max_window_bits&&!1!==t.clientMaxWindowBits||delete a.client_max_window_bits,a}acceptAsClient(e){const t=e[0];if(!1===this._options.clientNoContextTakeover&&t.client_no_context_takeover)throw new Error('Unexpected parameter "client_no_context_takeover"');if(t.client_max_window_bits){if(!1===this._options.clientMaxWindowBits||"number"==typeof this._options.clientMaxWindowBits&&t.client_max_window_bits>this._options.clientMaxWindowBits)throw new Error('Unexpected or invalid parameter "client_max_window_bits"')}else"number"==typeof this._options.clientMaxWindowBits&&(t.client_max_window_bits=this._options.clientMaxWindowBits);return t}normalizeParams(e){return e.forEach((e=>{Object.keys(e).forEach((t=>{let a=e[t];if(a.length>1)throw new Error(`Parameter "${t}" must have only a single value`);if(a=a[0],"client_max_window_bits"===t){if(!0!==a){const e=+a;if(!Number.isInteger(e)||e<8||e>15)throw new TypeError(`Invalid value for parameter "${t}": ${a}`);a=e}else if(!this._isServer)throw new TypeError(`Invalid value for parameter "${t}": ${a}`)}else if("server_max_window_bits"===t){const e=+a;if(!Number.isInteger(e)||e<8||e>15)throw new TypeError(`Invalid value for parameter "${t}": ${a}`);a=e}else{if("client_no_context_takeover"!==t&&"server_no_context_takeover"!==t)throw new Error(`Unknown parameter "${t}"`);if(!0!==a)throw new TypeError(`Invalid value for parameter "${t}": ${a}`)}e[t]=a}))})),e}decompress(e,t,a){I.add((i=>{this._decompress(e,t,((e,t)=>{i(),a(e,t)}))}))}compress(e,t,a){I.add((i=>{this._compress(e,t,((e,t)=>{i(),a(e,t)}))}))}_decompress(e,t,a){const n=this._isServer?"client":"server";if(!this._inflate){const e=`${n}_max_window_bits`,t="number"!=typeof this.params[e]?i.Z_DEFAULT_WINDOWBITS:this.params[e];this._inflate=i.createInflateRaw({...this._options.zlibInflateOptions,windowBits:t}),this._inflate[o]=this,this._inflate[g]=0,this._inflate[A]=[],this._inflate.on("error",u),this._inflate.on("data",m)}this._inflate[l]=a,this._inflate.write(e),t&&this._inflate.write(r),this._inflate.flush((()=>{const e=this._inflate[c];if(e)return this._inflate.close(),this._inflate=null,void a(e);const i=p.concat(this._inflate[A],this._inflate[g]);this._inflate._readableState.endEmitted?(this._inflate.close(),this._inflate=null):(this._inflate[g]=0,this._inflate[A]=[],t&&this.params[`${n}_no_context_takeover`]&&this._inflate.reset()),a(null,i)}))}_compress(e,t,a){const n=this._isServer?"server":"client";if(!this._deflate){const e=`${n}_max_window_bits`,t="number"!=typeof this.params[e]?i.Z_DEFAULT_WINDOWBITS:this.params[e];this._deflate=i.createDeflateRaw({...this._options.zlibDeflateOptions,windowBits:t}),this._deflate[g]=0,this._deflate[A]=[],this._deflate.on("error",d),this._deflate.on("data",C)}this._deflate[l]=a,this._deflate.write(e),this._deflate.flush(i.Z_SYNC_FLUSH,(()=>{if(!this._deflate)return;let e=p.concat(this._deflate[A],this._deflate[g]);t&&(e=e.slice(0,e.length-4)),this._deflate[l]=null,this._deflate[g]=0,this._deflate[A]=[],t&&this.params[`${n}_no_context_takeover`]&&this._deflate.reset(),a(null,e)}))}}},2957:(e,t,a)=>{"use strict";const{Writable:i}=a(2781),p=a(5196),{BINARY_TYPES:n,EMPTY_BUFFER:s,kStatusCode:d,kWebSocket:r}=a(1872),{concat:o,toArrayBuffer:g,unmask:l}=a(977),{isValidStatusCode:A,isValidUTF8:c}=a(6746);function I(e,t,a,i,p){const n=new e(a?`Invalid WebSocket frame: ${t}`:t);return Error.captureStackTrace(n,I),n.code=p,n[d]=i,n}e.exports=class extends i{constructor(e,t,a,i){super(),this._binaryType=e||n[0],this[r]=void 0,this._extensions=t||{},this._isServer=!!a,this._maxPayload=0|i,this._bufferedBytes=0,this._buffers=[],this._compressed=!1,this._payloadLength=0,this._mask=void 0,this._fragmented=0,this._masked=!1,this._fin=!1,this._opcode=0,this._totalPayloadLength=0,this._messageLength=0,this._fragments=[],this._state=0,this._loop=!1}_write(e,t,a){if(8===this._opcode&&0==this._state)return a();this._bufferedBytes+=e.length,this._buffers.push(e),this.startLoop(a)}consume(e){if(this._bufferedBytes-=e,e===this._buffers[0].length)return this._buffers.shift();if(e<this._buffers[0].length){const t=this._buffers[0];return this._buffers[0]=t.slice(e),t.slice(0,e)}const t=Buffer.allocUnsafe(e);do{const a=this._buffers[0],i=t.length-e;e>=a.length?t.set(this._buffers.shift(),i):(t.set(new Uint8Array(a.buffer,a.byteOffset,e),i),this._buffers[0]=a.slice(e)),e-=a.length}while(e>0);return t}startLoop(e){let t;this._loop=!0;do{switch(this._state){case 0:t=this.getInfo();break;case 1:t=this.getPayloadLength16();break;case 2:t=this.getPayloadLength64();break;case 3:this.getMask();break;case 4:t=this.getData(e);break;default:return void(this._loop=!1)}}while(this._loop);e(t)}getInfo(){if(this._bufferedBytes<2)return void(this._loop=!1);const e=this.consume(2);if(0!=(48&e[0]))return this._loop=!1,I(RangeError,"RSV2 and RSV3 must be clear",!0,1002,"WS_ERR_UNEXPECTED_RSV_2_3");const t=64==(64&e[0]);if(t&&!this._extensions[p.extensionName])return this._loop=!1,I(RangeError,"RSV1 must be clear",!0,1002,"WS_ERR_UNEXPECTED_RSV_1");if(this._fin=128==(128&e[0]),this._opcode=15&e[0],this._payloadLength=127&e[1],0===this._opcode){if(t)return this._loop=!1,I(RangeError,"RSV1 must be clear",!0,1002,"WS_ERR_UNEXPECTED_RSV_1");if(!this._fragmented)return this._loop=!1,I(RangeError,"invalid opcode 0",!0,1002,"WS_ERR_INVALID_OPCODE");this._opcode=this._fragmented}else if(1===this._opcode||2===this._opcode){if(this._fragmented)return this._loop=!1,I(RangeError,`invalid opcode ${this._opcode}`,!0,1002,"WS_ERR_INVALID_OPCODE");this._compressed=t}else{if(!(this._opcode>7&&this._opcode<11))return this._loop=!1,I(RangeError,`invalid opcode ${this._opcode}`,!0,1002,"WS_ERR_INVALID_OPCODE");if(!this._fin)return this._loop=!1,I(RangeError,"FIN must be set",!0,1002,"WS_ERR_EXPECTED_FIN");if(t)return this._loop=!1,I(RangeError,"RSV1 must be clear",!0,1002,"WS_ERR_UNEXPECTED_RSV_1");if(this._payloadLength>125)return this._loop=!1,I(RangeError,`invalid payload length ${this._payloadLength}`,!0,1002,"WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH")}if(this._fin||this._fragmented||(this._fragmented=this._opcode),this._masked=128==(128&e[1]),this._isServer){if(!this._masked)return this._loop=!1,I(RangeError,"MASK must be set",!0,1002,"WS_ERR_EXPECTED_MASK")}else if(this._masked)return this._loop=!1,I(RangeError,"MASK must be clear",!0,1002,"WS_ERR_UNEXPECTED_MASK");if(126===this._payloadLength)this._state=1;else{if(127!==this._payloadLength)return this.haveLength();this._state=2}}getPayloadLength16(){if(!(this._bufferedBytes<2))return this._payloadLength=this.consume(2).readUInt16BE(0),this.haveLength();this._loop=!1}getPayloadLength64(){if(this._bufferedBytes<8)return void(this._loop=!1);const e=this.consume(8),t=e.readUInt32BE(0);return t>Math.pow(2,21)-1?(this._loop=!1,I(RangeError,"Unsupported WebSocket frame: payload length > 2^53 - 1",!1,1009,"WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH")):(this._payloadLength=t*Math.pow(2,32)+e.readUInt32BE(4),this.haveLength())}haveLength(){if(this._payloadLength&&this._opcode<8&&(this._totalPayloadLength+=this._payloadLength,this._totalPayloadLength>this._maxPayload&&this._maxPayload>0))return this._loop=!1,I(RangeError,"Max payload size exceeded",!1,1009,"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH");this._masked?this._state=3:this._state=4}getMask(){this._bufferedBytes<4?this._loop=!1:(this._mask=this.consume(4),this._state=4)}getData(e){let t=s;if(this._payloadLength){if(this._bufferedBytes<this._payloadLength)return void(this._loop=!1);t=this.consume(this._payloadLength),this._masked&&l(t,this._mask)}return this._opcode>7?this.controlMessage(t):this._compressed?(this._state=5,void this.decompress(t,e)):(t.length&&(this._messageLength=this._totalPayloadLength,this._fragments.push(t)),this.dataMessage())}decompress(e,t){this._extensions[p.extensionName].decompress(e,this._fin,((e,a)=>{if(e)return t(e);if(a.length){if(this._messageLength+=a.length,this._messageLength>this._maxPayload&&this._maxPayload>0)return t(I(RangeError,"Max payload size exceeded",!1,1009,"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH"));this._fragments.push(a)}const i=this.dataMessage();if(i)return t(i);this.startLoop(t)}))}dataMessage(){if(this._fin){const e=this._messageLength,t=this._fragments;if(this._totalPayloadLength=0,this._messageLength=0,this._fragmented=0,this._fragments=[],2===this._opcode){let a;a="nodebuffer"===this._binaryType?o(t,e):"arraybuffer"===this._binaryType?g(o(t,e)):t,this.emit("message",a)}else{const a=o(t,e);if(!c(a))return this._loop=!1,I(Error,"invalid UTF-8 sequence",!0,1007,"WS_ERR_INVALID_UTF8");this.emit("message",a.toString())}}this._state=0}controlMessage(e){if(8===this._opcode)if(this._loop=!1,0===e.length)this.emit("conclude",1005,""),this.end();else{if(1===e.length)return I(RangeError,"invalid payload length 1",!0,1002,"WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH");{const t=e.readUInt16BE(0);if(!A(t))return I(RangeError,`invalid status code ${t}`,!0,1002,"WS_ERR_INVALID_CLOSE_CODE");const a=e.slice(2);if(!c(a))return I(Error,"invalid UTF-8 sequence",!0,1007,"WS_ERR_INVALID_UTF8");this.emit("conclude",t,a.toString()),this.end()}}else 9===this._opcode?this.emit("ping",e):this.emit("pong",e);this._state=0}}},7330:(e,t,a)=>{"use strict";a(1808),a(4404);const{randomFillSync:i}=a(6113),p=a(5196),{EMPTY_BUFFER:n}=a(1872),{isValidStatusCode:s}=a(6746),{mask:d,toBuffer:r}=a(977),o=Buffer.alloc(4);class g{constructor(e,t){this._extensions=t||{},this._socket=e,this._firstFragment=!0,this._compress=!1,this._bufferedBytes=0,this._deflating=!1,this._queue=[]}static frame(e,t){const a=t.mask&&t.readOnly;let p=t.mask?6:2,n=e.length;e.length>=65536?(p+=8,n=127):e.length>125&&(p+=2,n=126);const s=Buffer.allocUnsafe(a?e.length+p:p);return s[0]=t.fin?128|t.opcode:t.opcode,t.rsv1&&(s[0]|=64),s[1]=n,126===n?s.writeUInt16BE(e.length,2):127===n&&(s.writeUInt32BE(0,2),s.writeUInt32BE(e.length,6)),t.mask?(i(o,0,4),s[1]|=128,s[p-4]=o[0],s[p-3]=o[1],s[p-2]=o[2],s[p-1]=o[3],a?(d(e,o,s,p,e.length),[s]):(d(e,o,e,0,e.length),[s,e])):[s,e]}close(e,t,a,i){let p;if(void 0===e)p=n;else{if("number"!=typeof e||!s(e))throw new TypeError("First argument must be a valid error code number");if(void 0===t||""===t)p=Buffer.allocUnsafe(2),p.writeUInt16BE(e,0);else{const a=Buffer.byteLength(t);if(a>123)throw new RangeError("The message must not be greater than 123 bytes");p=Buffer.allocUnsafe(2+a),p.writeUInt16BE(e,0),p.write(t,2)}}this._deflating?this.enqueue([this.doClose,p,a,i]):this.doClose(p,a,i)}doClose(e,t,a){this.sendFrame(g.frame(e,{fin:!0,rsv1:!1,opcode:8,mask:t,readOnly:!1}),a)}ping(e,t,a){const i=r(e);if(i.length>125)throw new RangeError("The data size must not be greater than 125 bytes");this._deflating?this.enqueue([this.doPing,i,t,r.readOnly,a]):this.doPing(i,t,r.readOnly,a)}doPing(e,t,a,i){this.sendFrame(g.frame(e,{fin:!0,rsv1:!1,opcode:9,mask:t,readOnly:a}),i)}pong(e,t,a){const i=r(e);if(i.length>125)throw new RangeError("The data size must not be greater than 125 bytes");this._deflating?this.enqueue([this.doPong,i,t,r.readOnly,a]):this.doPong(i,t,r.readOnly,a)}doPong(e,t,a,i){this.sendFrame(g.frame(e,{fin:!0,rsv1:!1,opcode:10,mask:t,readOnly:a}),i)}send(e,t,a){const i=r(e),n=this._extensions[p.extensionName];let s=t.binary?2:1,d=t.compress;if(this._firstFragment?(this._firstFragment=!1,d&&n&&(d=i.length>=n._threshold),this._compress=d):(d=!1,s=0),t.fin&&(this._firstFragment=!0),n){const e={fin:t.fin,rsv1:d,opcode:s,mask:t.mask,readOnly:r.readOnly};this._deflating?this.enqueue([this.dispatch,i,this._compress,e,a]):this.dispatch(i,this._compress,e,a)}else this.sendFrame(g.frame(i,{fin:t.fin,rsv1:!1,opcode:s,mask:t.mask,readOnly:r.readOnly}),a)}dispatch(e,t,a,i){if(!t)return void this.sendFrame(g.frame(e,a),i);const n=this._extensions[p.extensionName];this._bufferedBytes+=e.length,this._deflating=!0,n.compress(e,a.fin,((t,p)=>{if(this._socket.destroyed){const e=new Error("The socket was closed while data was being compressed");"function"==typeof i&&i(e);for(let t=0;t<this._queue.length;t++){const a=this._queue[t][4];"function"==typeof a&&a(e)}}else this._bufferedBytes-=e.length,this._deflating=!1,a.readOnly=!1,this.sendFrame(g.frame(p,a),i),this.dequeue()}))}dequeue(){for(;!this._deflating&&this._queue.length;){const e=this._queue.shift();this._bufferedBytes-=e[1].length,Reflect.apply(e[0],this,e.slice(1))}}enqueue(e){this._bufferedBytes+=e[1].length,this._queue.push(e)}sendFrame(e,t){2===e.length?(this._socket.cork(),this._socket.write(e[0]),this._socket.write(e[1],t),this._socket.uncork()):this._socket.write(e[0],t)}}e.exports=g},404:(e,t,a)=>{"use strict";const{Duplex:i}=a(2781);function p(e){e.emit("close")}function n(){!this.destroyed&&this._writableState.finished&&this.destroy()}function s(e){this.removeListener("error",s),this.destroy(),0===this.listenerCount("error")&&this.emit("error",e)}e.exports=function(e,t){let a=!0,d=!0;function r(){a&&e._socket.resume()}e.readyState===e.CONNECTING?e.once("open",(function(){e._receiver.removeAllListeners("drain"),e._receiver.on("drain",r)})):(e._receiver.removeAllListeners("drain"),e._receiver.on("drain",r));const o=new i({...t,autoDestroy:!1,emitClose:!1,objectMode:!1,writableObjectMode:!1});return e.on("message",(function(t){o.push(t)||(a=!1,e._socket.pause())})),e.once("error",(function(e){o.destroyed||(d=!1,o.destroy(e))})),e.once("close",(function(){o.destroyed||o.push(null)})),o._destroy=function(t,a){if(e.readyState===e.CLOSED)return a(t),void process.nextTick(p,o);let i=!1;e.once("error",(function(e){i=!0,a(e)})),e.once("close",(function(){i||a(t),process.nextTick(p,o)})),d&&e.terminate()},o._final=function(t){e.readyState!==e.CONNECTING?null!==e._socket&&(e._socket._writableState.finished?(t(),o._readableState.endEmitted&&o.destroy()):(e._socket.once("finish",(function(){t()})),e.close())):e.once("open",(function(){o._final(t)}))},o._read=function(){e.readyState!==e.OPEN&&e.readyState!==e.CLOSING||a||(a=!0,e._receiver._writableState.needDrain||e._socket.resume())},o._write=function(t,a,i){e.readyState!==e.CONNECTING?e.send(t,i):e.once("open",(function(){o._write(t,a,i)}))},o.on("end",n),o.on("error",s),o}},6746:(e,t,a)=>{"use strict";function i(e){return e>=1e3&&e<=1014&&1004!==e&&1005!==e&&1006!==e||e>=3e3&&e<=4999}function p(e){const t=e.length;let a=0;for(;a<t;)if(0==(128&e[a]))a++;else if(192==(224&e[a])){if(a+1===t||128!=(192&e[a+1])||192==(254&e[a]))return!1;a+=2}else if(224==(240&e[a])){if(a+2>=t||128!=(192&e[a+1])||128!=(192&e[a+2])||224===e[a]&&128==(224&e[a+1])||237===e[a]&&160==(224&e[a+1]))return!1;a+=3}else{if(240!=(248&e[a]))return!1;if(a+3>=t||128!=(192&e[a+1])||128!=(192&e[a+2])||128!=(192&e[a+3])||240===e[a]&&128==(240&e[a+1])||244===e[a]&&e[a+1]>143||e[a]>244)return!1;a+=4}return!0}try{let t=a(Object(function(){var e=new Error("Cannot find module 'utf-8-validate'");throw e.code="MODULE_NOT_FOUND",e}()));"object"==typeof t&&(t=t.Validation.isValidUTF8),e.exports={isValidStatusCode:i,isValidUTF8:e=>e.length<150?p(e):t(e)}}catch(t){e.exports={isValidStatusCode:i,isValidUTF8:p}}},9284:(e,t,a)=>{"use strict";const i=a(2361),p=a(3685),{createHash:n}=(a(5687),a(1808),a(4404),a(6113)),s=a(5196),d=a(8762),{format:r,parse:o}=a(1503),{GUID:g,kWebSocket:l}=a(1872),A=/^[+/0-9A-Za-z]{22}==$/;function c(e){e._state=2,e.emit("close")}function I(){this.destroy()}function C(e,t,a,i){e.writable&&(a=a||p.STATUS_CODES[t],i={Connection:"close","Content-Type":"text/html","Content-Length":Buffer.byteLength(a),...i},e.write(`HTTP/1.1 ${t} ${p.STATUS_CODES[t]}\r\n`+Object.keys(i).map((e=>`${e}: ${i[e]}`)).join("\r\n")+"\r\n\r\n"+a)),e.removeListener("error",I),e.destroy()}function m(e){return e.trim()}e.exports=class extends i{constructor(e,t){if(super(),null==(e={maxPayload:104857600,perMessageDeflate:!1,handleProtocols:null,clientTracking:!0,verifyClient:null,noServer:!1,backlog:null,server:null,host:null,path:null,port:null,...e}).port&&!e.server&&!e.noServer||null!=e.port&&(e.server||e.noServer)||e.server&&e.noServer)throw new TypeError('One and only one of the "port", "server", or "noServer" options must be specified');if(null!=e.port?(this._server=p.createServer(((e,t)=>{const a=p.STATUS_CODES[426];t.writeHead(426,{"Content-Length":a.length,"Content-Type":"text/plain"}),t.end(a)})),this._server.listen(e.port,e.host,e.backlog,t)):e.server&&(this._server=e.server),this._server){const e=this.emit.bind(this,"connection");this._removeListeners=function(e,t){for(const a of Object.keys(t))e.on(a,t[a]);return function(){for(const a of Object.keys(t))e.removeListener(a,t[a])}}(this._server,{listening:this.emit.bind(this,"listening"),error:this.emit.bind(this,"error"),upgrade:(t,a,i)=>{this.handleUpgrade(t,a,i,e)}})}!0===e.perMessageDeflate&&(e.perMessageDeflate={}),e.clientTracking&&(this.clients=new Set),this.options=e,this._state=0}address(){if(this.options.noServer)throw new Error('The server is operating in "noServer" mode');return this._server?this._server.address():null}close(e){if(e&&this.once("close",e),2===this._state)return void process.nextTick(c,this);if(1===this._state)return;if(this._state=1,this.clients)for(const e of this.clients)e.terminate();const t=this._server;t&&(this._removeListeners(),this._removeListeners=this._server=null,null!=this.options.port)?t.close(c.bind(void 0,this)):process.nextTick(c,this)}shouldHandle(e){if(this.options.path){const t=e.url.indexOf("?");if((-1!==t?e.url.slice(0,t):e.url)!==this.options.path)return!1}return!0}handleUpgrade(e,t,a,i){t.on("error",I);const p=void 0!==e.headers["sec-websocket-key"]&&e.headers["sec-websocket-key"].trim(),n=+e.headers["sec-websocket-version"],d={};if("GET"!==e.method||"websocket"!==e.headers.upgrade.toLowerCase()||!p||!A.test(p)||8!==n&&13!==n||!this.shouldHandle(e))return C(t,400);if(this.options.perMessageDeflate){const a=new s(this.options.perMessageDeflate,!0,this.options.maxPayload);try{const t=o(e.headers["sec-websocket-extensions"]);t[s.extensionName]&&(a.accept(t[s.extensionName]),d[s.extensionName]=a)}catch(e){return C(t,400)}}if(this.options.verifyClient){const s={origin:e.headers[8===n?"sec-websocket-origin":"origin"],secure:!(!e.socket.authorized&&!e.socket.encrypted),req:e};if(2===this.options.verifyClient.length)return void this.options.verifyClient(s,((n,s,r,o)=>{if(!n)return C(t,s||401,r,o);this.completeUpgrade(p,d,e,t,a,i)}));if(!this.options.verifyClient(s))return C(t,401)}this.completeUpgrade(p,d,e,t,a,i)}completeUpgrade(e,t,a,i,p,o){if(!i.readable||!i.writable)return i.destroy();if(i[l])throw new Error("server.handleUpgrade() was called more than once with the same socket, possibly due to a misconfiguration");if(this._state>0)return C(i,503);const A=["HTTP/1.1 101 Switching Protocols","Upgrade: websocket","Connection: Upgrade",`Sec-WebSocket-Accept: ${n("sha1").update(e+g).digest("base64")}`],c=new d(null);let u=a.headers["sec-websocket-protocol"];if(u&&(u=u.split(",").map(m),u=this.options.handleProtocols?this.options.handleProtocols(u,a):u[0],u&&(A.push(`Sec-WebSocket-Protocol: ${u}`),c._protocol=u)),t[s.extensionName]){const e=t[s.extensionName].params,a=r({[s.extensionName]:[e]});A.push(`Sec-WebSocket-Extensions: ${a}`),c._extensions=t}this.emit("headers",A,a),i.write(A.concat("\r\n").join("\r\n")),i.removeListener("error",I),c.setSocket(i,p,this.options.maxPayload),this.clients&&(this.clients.add(c),c.on("close",(()=>this.clients.delete(c)))),o(c,a)}}},8762:(e,t,a)=>{"use strict";const i=a(2361),p=a(5687),n=a(3685),s=a(1808),d=a(4404),{randomBytes:r,createHash:o}=a(6113),{Readable:g}=a(2781),{URL:l}=a(7310),A=a(5196),c=a(2957),I=a(7330),{BINARY_TYPES:C,EMPTY_BUFFER:m,GUID:u,kStatusCode:h,kWebSocket:f,NOOP:v}=a(1872),{addEventListener:_,removeEventListener:y}=a(62),{format:b,parse:w}=a(1503),{toBuffer:S}=a(977),E=["CONNECTING","OPEN","CLOSING","CLOSED"],T=[8,13];class N extends i{constructor(e,t,a){super(),this._binaryType=C[0],this._closeCode=1006,this._closeFrameReceived=!1,this._closeFrameSent=!1,this._closeMessage="",this._closeTimer=null,this._extensions={},this._protocol="",this._readyState=N.CONNECTING,this._receiver=null,this._sender=null,this._socket=null,null!==e?(this._bufferedAmount=0,this._isServer=!1,this._redirects=0,Array.isArray(t)?t=t.join(", "):"object"==typeof t&&null!==t&&(a=t,t=void 0),D(this,e,t,a)):this._isServer=!0}get binaryType(){return this._binaryType}set binaryType(e){C.includes(e)&&(this._binaryType=e,this._receiver&&(this._receiver._binaryType=e))}get bufferedAmount(){return this._socket?this._socket._writableState.length+this._sender._bufferedBytes:this._bufferedAmount}get extensions(){return Object.keys(this._extensions).join()}get onclose(){}set onclose(e){}get onerror(){}set onerror(e){}get onopen(){}set onopen(e){}get onmessage(){}set onmessage(e){}get protocol(){return this._protocol}get readyState(){return this._readyState}get url(){return this._url}setSocket(e,t,a){const i=new c(this.binaryType,this._extensions,this._isServer,a);this._sender=new I(e,this._extensions),this._receiver=i,this._socket=e,i[f]=this,e[f]=this,i.on("conclude",B),i.on("drain",U),i.on("error",P),i.on("message",G),i.on("ping",M),i.on("pong",j),e.setTimeout(0),e.setNoDelay(),t.length>0&&e.unshift(t),e.on("close",Y),e.on("data",W),e.on("end",J),e.on("error",H),this._readyState=N.OPEN,this.emit("open")}emitClose(){if(!this._socket)return this._readyState=N.CLOSED,void this.emit("close",this._closeCode,this._closeMessage);this._extensions[A.extensionName]&&this._extensions[A.extensionName].cleanup(),this._receiver.removeAllListeners(),this._readyState=N.CLOSED,this.emit("close",this._closeCode,this._closeMessage)}close(e,t){if(this.readyState!==N.CLOSED){if(this.readyState===N.CONNECTING){const e="WebSocket was closed before the connection was established";return V(this,this._req,e)}this.readyState!==N.CLOSING?(this._readyState=N.CLOSING,this._sender.close(e,t,!this._isServer,(e=>{e||(this._closeFrameSent=!0,(this._closeFrameReceived||this._receiver._writableState.errorEmitted)&&this._socket.end())})),this._closeTimer=setTimeout(this._socket.destroy.bind(this._socket),3e4)):this._closeFrameSent&&(this._closeFrameReceived||this._receiver._writableState.errorEmitted)&&this._socket.end()}}ping(e,t,a){if(this.readyState===N.CONNECTING)throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");"function"==typeof e?(a=e,e=t=void 0):"function"==typeof t&&(a=t,t=void 0),"number"==typeof e&&(e=e.toString()),this.readyState===N.OPEN?(void 0===t&&(t=!this._isServer),this._sender.ping(e||m,t,a)):x(this,e,a)}pong(e,t,a){if(this.readyState===N.CONNECTING)throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");"function"==typeof e?(a=e,e=t=void 0):"function"==typeof t&&(a=t,t=void 0),"number"==typeof e&&(e=e.toString()),this.readyState===N.OPEN?(void 0===t&&(t=!this._isServer),this._sender.pong(e||m,t,a)):x(this,e,a)}send(e,t,a){if(this.readyState===N.CONNECTING)throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");if("function"==typeof t&&(a=t,t={}),"number"==typeof e&&(e=e.toString()),this.readyState!==N.OPEN)return void x(this,e,a);const i={binary:"string"!=typeof e,mask:!this._isServer,compress:!0,fin:!0,...t};this._extensions[A.extensionName]||(i.compress=!1),this._sender.send(e||m,i,a)}terminate(){if(this.readyState!==N.CLOSED){if(this.readyState===N.CONNECTING){const e="WebSocket was closed before the connection was established";return V(this,this._req,e)}this._socket&&(this._readyState=N.CLOSING,this._socket.destroy())}}}function D(e,t,a,i){const s={protocolVersion:T[1],maxPayload:104857600,perMessageDeflate:!0,followRedirects:!1,maxRedirects:10,...i,createConnection:void 0,socketPath:void 0,hostname:void 0,protocol:void 0,timeout:void 0,method:void 0,host:void 0,path:void 0,port:void 0};if(!T.includes(s.protocolVersion))throw new RangeError(`Unsupported protocol version: ${s.protocolVersion} (supported versions: ${T.join(", ")})`);let d;t instanceof l?(d=t,e._url=t.href):(d=new l(t),e._url=t);const g="ws+unix:"===d.protocol;if(!(d.host||g&&d.pathname)){const t=new Error(`Invalid URL: ${e.url}`);if(0===e._redirects)throw t;return void R(e,t)}const c="wss:"===d.protocol||"https:"===d.protocol,I=c?443:80,C=r(16).toString("base64"),m=c?p.get:n.get;let h;if(s.createConnection=c?k:O,s.defaultPort=s.defaultPort||I,s.port=d.port||I,s.host=d.hostname.startsWith("[")?d.hostname.slice(1,-1):d.hostname,s.headers={"Sec-WebSocket-Version":s.protocolVersion,"Sec-WebSocket-Key":C,Connection:"Upgrade",Upgrade:"websocket",...s.headers},s.path=d.pathname+d.search,s.timeout=s.handshakeTimeout,s.perMessageDeflate&&(h=new A(!0!==s.perMessageDeflate?s.perMessageDeflate:{},!1,s.maxPayload),s.headers["Sec-WebSocket-Extensions"]=b({[A.extensionName]:h.offer()})),a&&(s.headers["Sec-WebSocket-Protocol"]=a),s.origin&&(s.protocolVersion<13?s.headers["Sec-WebSocket-Origin"]=s.origin:s.headers.Origin=s.origin),(d.username||d.password)&&(s.auth=`${d.username}:${d.password}`),g){const e=s.path.split(":");s.socketPath=e[0],s.path=e[1]}if(s.followRedirects){if(0===e._redirects){e._originalUnixSocket=g,e._originalSecure=c,e._originalHostOrSocketPath=g?s.socketPath:d.host;const t=i&&i.headers;if(i={...i,headers:{}},t)for(const[e,a]of Object.entries(t))i.headers[e.toLowerCase()]=a}else{const t=g?!!e._originalUnixSocket&&s.socketPath===e._originalHostOrSocketPath:!e._originalUnixSocket&&d.host===e._originalHostOrSocketPath;(!t||e._originalSecure&&!c)&&(delete s.headers.authorization,delete s.headers.cookie,t||delete s.headers.host,s.auth=void 0)}s.auth&&!i.headers.authorization&&(i.headers.authorization="Basic "+Buffer.from(s.auth).toString("base64"))}let f=e._req=m(s);s.timeout&&f.on("timeout",(()=>{V(e,f,"Opening handshake has timed out")})),f.on("error",(t=>{null===f||f.aborted||(f=e._req=null,R(e,t))})),f.on("response",(p=>{const n=p.headers.location,d=p.statusCode;if(n&&s.followRedirects&&d>=300&&d<400){if(++e._redirects>s.maxRedirects)return void V(e,f,"Maximum redirects exceeded");let p;f.abort();try{p=new l(n,t)}catch(t){return void R(e,t)}D(e,p,a,i)}else e.emit("unexpected-response",f,p)||V(e,f,`Unexpected server response: ${p.statusCode}`)})),f.on("upgrade",((t,i,p)=>{if(e.emit("upgrade",t),e.readyState!==N.CONNECTING)return;if(f=e._req=null,"websocket"!==t.headers.upgrade.toLowerCase())return void V(e,i,"Invalid Upgrade header");const n=o("sha1").update(C+u).digest("base64");if(t.headers["sec-websocket-accept"]!==n)return void V(e,i,"Invalid Sec-WebSocket-Accept header");const d=t.headers["sec-websocket-protocol"],r=(a||"").split(/, */);let g;if(!a&&d?g="Server sent a subprotocol but none was requested":a&&!d?g="Server sent no subprotocol":d&&!r.includes(d)&&(g="Server sent an invalid subprotocol"),g)return void V(e,i,g);d&&(e._protocol=d);const l=t.headers["sec-websocket-extensions"];if(void 0!==l){if(!h)return void V(e,i,"Server sent a Sec-WebSocket-Extensions header but no extension was requested");let t;try{t=w(l)}catch(t){return void V(e,i,"Invalid Sec-WebSocket-Extensions header")}const a=Object.keys(t);if(a.length){if(1!==a.length||a[0]!==A.extensionName)return void V(e,i,"Server indicated an extension that was not requested");try{h.accept(t[A.extensionName])}catch(t){return void V(e,i,"Invalid Sec-WebSocket-Extensions header")}e._extensions[A.extensionName]=h}}e.setSocket(i,p,s.maxPayload)}))}function R(e,t){e._readyState=N.CLOSING,e.emit("error",t),e.emitClose()}function O(e){return e.path=e.socketPath,s.connect(e)}function k(e){return e.path=void 0,e.servername||""===e.servername||(e.servername=s.isIP(e.host)?"":e.host),d.connect(e)}function V(e,t,a){e._readyState=N.CLOSING;const i=new Error(a);Error.captureStackTrace(i,V),t.setHeader?(t.abort(),t.socket&&!t.socket.destroyed&&t.socket.destroy(),t.once("abort",e.emitClose.bind(e)),e.emit("error",i)):(t.destroy(i),t.once("error",e.emit.bind(e,"error")),t.once("close",e.emitClose.bind(e)))}function x(e,t,a){if(t){const a=S(t).length;e._socket?e._sender._bufferedBytes+=a:e._bufferedAmount+=a}a&&a(new Error(`WebSocket is not open: readyState ${e.readyState} (${E[e.readyState]})`))}function B(e,t){const a=this[f];a._closeFrameReceived=!0,a._closeMessage=t,a._closeCode=e,void 0!==a._socket[f]&&(a._socket.removeListener("data",W),process.nextTick(F,a._socket),1005===e?a.close():a.close(e,t))}function U(){this[f]._socket.resume()}function P(e){const t=this[f];void 0!==t._socket[f]&&(t._socket.removeListener("data",W),process.nextTick(F,t._socket),t.close(e[h])),t.emit("error",e)}function L(){this[f].emitClose()}function G(e){this[f].emit("message",e)}function M(e){const t=this[f];t.pong(e,!t._isServer,v),t.emit("ping",e)}function j(e){this[f].emit("pong",e)}function F(e){e.resume()}function Y(){const e=this[f];let t;this.removeListener("close",Y),this.removeListener("data",W),this.removeListener("end",J),e._readyState=N.CLOSING,this._readableState.endEmitted||e._closeFrameReceived||e._receiver._writableState.errorEmitted||null===(t=e._socket.read())||e._receiver.write(t),e._receiver.end(),this[f]=void 0,clearTimeout(e._closeTimer),e._receiver._writableState.finished||e._receiver._writableState.errorEmitted?e.emitClose():(e._receiver.on("error",L),e._receiver.on("finish",L))}function W(e){this[f]._receiver.write(e)||this.pause()}function J(){const e=this[f];e._readyState=N.CLOSING,e._receiver.end(),this.end()}function H(){const e=this[f];this.removeListener("error",H),this.on("error",v),e&&(e._readyState=N.CLOSING,this.destroy())}Object.defineProperty(N,"CONNECTING",{enumerable:!0,value:E.indexOf("CONNECTING")}),Object.defineProperty(N.prototype,"CONNECTING",{enumerable:!0,value:E.indexOf("CONNECTING")}),Object.defineProperty(N,"OPEN",{enumerable:!0,value:E.indexOf("OPEN")}),Object.defineProperty(N.prototype,"OPEN",{enumerable:!0,value:E.indexOf("OPEN")}),Object.defineProperty(N,"CLOSING",{enumerable:!0,value:E.indexOf("CLOSING")}),Object.defineProperty(N.prototype,"CLOSING",{enumerable:!0,value:E.indexOf("CLOSING")}),Object.defineProperty(N,"CLOSED",{enumerable:!0,value:E.indexOf("CLOSED")}),Object.defineProperty(N.prototype,"CLOSED",{enumerable:!0,value:E.indexOf("CLOSED")}),["binaryType","bufferedAmount","extensions","protocol","readyState","url"].forEach((e=>{Object.defineProperty(N.prototype,e,{enumerable:!0})})),["open","error","close","message"].forEach((e=>{Object.defineProperty(N.prototype,`on${e}`,{enumerable:!0,get(){const t=this.listeners(e);for(let e=0;e<t.length;e++)if(t[e]._listener)return t[e]._listener},set(t){const a=this.listeners(e);for(let t=0;t<a.length;t++)a[t]._listener&&this.removeListener(e,a[t]);this.addEventListener(e,t)}})})),N.prototype.addEventListener=_,N.prototype.removeEventListener=y,e.exports=N},9491:e=>{"use strict";e.exports=require("assert")},6113:e=>{"use strict";e.exports=require("crypto")},1891:e=>{"use strict";e.exports=require("dgram")},2361:e=>{"use strict";e.exports=require("events")},7147:e=>{"use strict";e.exports=require("fs")},3292:e=>{"use strict";e.exports=require("fs/promises")},3685:e=>{"use strict";e.exports=require("http")},5687:e=>{"use strict";e.exports=require("https")},1808:e=>{"use strict";e.exports=require("net")},2037:e=>{"use strict";e.exports=require("os")},1017:e=>{"use strict";e.exports=require("path")},5477:e=>{"use strict";e.exports=require("punycode")},2781:e=>{"use strict";e.exports=require("stream")},9512:e=>{"use strict";e.exports=require("timers")},4404:e=>{"use strict";e.exports=require("tls")},6224:e=>{"use strict";e.exports=require("tty")},7310:e=>{"use strict";e.exports=require("url")},3837:e=>{"use strict";e.exports=require("util")},9796:e=>{"use strict";e.exports=require("zlib")},2764:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},7359:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.runEntrypoint=void 0;const i=a(1460),p=a(9913),n=i.__importDefault(a(3292)),s=a(2068),d=a(6453);a(9262);const r=a(8221);let o,g=!1;t.runEntrypoint=function(e,t){Promise.resolve().then((async()=>{if(g)throw new Error("runEntrypoint can only be called once");g=!0;const a=process.env.MODULE_MANIFEST;if(!a)throw new Error("Module initialise is missing MODULE_MANIFEST");const i=await n.default.readFile(a),l=JSON.parse(i.toString());if(l.runtime?.api!==p.HostApiNodeJsIpc)throw new Error("Module manifest 'api' mismatch");if(!l.runtime.apiVersion)throw new Error("Module manifest 'apiVersion' missing");const A=l.runtime.apiVersion;if(!process.send)throw new Error("Module is not being run with ipc");console.log(`Starting up module class: ${e.name}`);const c=process.env.CONNECTION_ID;if("string"!=typeof c||!c)throw new Error("Module initialise is missing CONNECTION_ID");const I=process.env.VERIFICATION_TOKEN;if("string"!=typeof I||!I)throw new Error("Module initialise is missing VERIFICATION_TOKEN");const C=process.env.SENTRY_DSN,m=process.env.SENTRY_USERID,u=process.env.SENTRY_COMPANION_VERSION;C&&m&&"https://"==C.substring(0,8)?(console.log("Sentry enabled"),(0,d.init)({dsn:C,release:`${l.name}@${l.version}`,beforeSend:e=>(e.exception&&console.log("sentry","error",e.exception),e)}),(0,d.configureScope)((e=>{e.setUser({id:m}),e.setTag("companion",u)}))):console.log("Sentry disabled");const h=new r.IpcWrapper({},(e=>{process.send(e)}),5e3);process.once("message",(e=>{h.receivedMessage(e)})),o=new e((0,s.literal)({id:c,upgradeScripts:t,_isInstanceBaseProps:!0})),h.sendWithCb("register",{apiVersion:A,connectionId:c,verificationToken:I}).then((()=>{console.log("Module-host accepted registration")}),(e=>{console.error("Module registration failed",e),process.exit(11)}))})).catch((e=>{console.error("Failed to startup module:"),console.error(e.stack||e.message),process.exit(1)}))}},1972:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UDPHelper=t.TelnetHelper=t.TCPHelper=void 0;var i=a(9159);Object.defineProperty(t,"TCPHelper",{enumerable:!0,get:function(){return i.TCPHelper}});var p=a(6226);Object.defineProperty(t,"TelnetHelper",{enumerable:!0,get:function(){return p.TelnetHelper}});var n=a(8473);Object.defineProperty(t,"UDPHelper",{enumerable:!0,get:function(){return n.UDPHelper}})},9159:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TCPHelper=void 0;const i=a(1460).__importDefault(a(1808)),p=a(6729),n=a(609);class s extends p.EventEmitter{#e;#t;_socket;#a;#i=!1;#p=!1;#n=!1;#s;#d;get isConnected(){return this.#i}get isConnecting(){return this.#p}get isDestroyed(){return this.#n}constructor(e,t,a){super(),this.#e=e,this.#t=t,this.#a={reconnect_interval:2e3,reconnect:!0,...a},this._socket=new i.default.Socket,this._socket.setKeepAlive(!0),this._socket.setNoDelay(!0),this._socket.on("error",(e=>{this.#p=!1,this.#i=!1,this.#a.reconnect&&this.#r(),this.#o(n.InstanceStatus.UnknownError,e.message),this.emit("error",e)})),this._socket.on("ready",(()=>{this.#i=!0,this.#p=!1,this.#o(n.InstanceStatus.Ok),this.emit("connect")})),this._socket.on("end",(()=>{this.#i=!1,this.#o(n.InstanceStatus.Disconnected),!this.#p&&this.#a.reconnect&&this.#r(),this.emit("end")})),this._socket.on("data",(e=>this.emit("data",e))),this._socket.on("drain",(()=>this.emit("drain"))),setImmediate((()=>this.connect())),setTimeout((()=>{this.#n||this.listenerCount("error")||console.error(`Danger: TCP client for ${this.#e}:${this.#t} is missing an error handler!`)}),5e3)}connect(){if(this.#n)throw new Error("Cannot connect destroyed socket");return!this.#p&&(this.#p=!0,this._socket.connect(this.#t,this.#e),!0)}async send(e){if(this.#n||this._socket.destroyed)throw new Error("Cannot write to destroyed socket");if(!e||!e.length)throw new Error("No message to send");if(!this.#i)return!1;try{return new Promise(((t,a)=>{this._socket.write(e,(e=>{e?a(e):t(!0)}))}))}catch(e){this.#i=!1;const t=e instanceof Error?e:new Error(`${e}`);throw this.#o(n.InstanceStatus.UnknownError,t.message),this.emit("error",t),t}}destroy(){this.#n=!0,void 0!==this.#d&&clearTimeout(this.#d),this._socket.removeAllListeners(),this.removeAllListeners(),this._socket.destroy()}#r(){void 0!==this.#d&&clearTimeout(this.#d),this.#d=setTimeout((()=>{this.#d=void 0,this.#o(n.InstanceStatus.Connecting),this.connect()}),this.#a.reconnect_interval)}#o(e,t){this.#s!=e&&(this.#s=e,this.emit("status_change",e,t))}}t.TCPHelper=s},6226:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TelnetHelper=void 0;const i=a(1460).__importDefault(a(6729)),p=a(2781),n=a(9159);class s extends i.default{#g;#l;get isConnected(){return this.#g.isConnected}get isConnecting(){return this.#g.isConnecting}get isDestroyed(){return this.#g.isDestroyed}constructor(e,t,a){super(),this.#g=new n.TCPHelper(e,t,a),this.#l=new d,this.#g._socket.pipe(this.#l),this.#g.on("connect",(()=>this.emit("connect"))),this.#g.on("end",(()=>this.emit("end"))),this.#g.on("error",(e=>this.emit("error",e))),this.#g.on("status_change",((e,t)=>this.emit("status_change",e,t))),this.#l.on("iac",((e,t)=>this.emit("iac",e,t))),this.#l.on("sb",(e=>this.emit("sb",e))),this.#l.on("data",(e=>this.emit("data",e))),this.#l.on("drain",(()=>this.emit("drain"))),setTimeout((()=>{this.isDestroyed||this.listenerCount("error")||console.error(`Danger: Telnet client for ${e}:${t} is missing an error handler!`)}),5e3)}connect(){return this.#g.connect()}async send(e){return this.#g.send(e)}destroy(){this.#g.destroy(),this.#l.removeAllListeners(),this.#l.destroy()}}t.TelnetHelper=s;class d extends p.Transform{#A;#c;#I;constructor(e){super(e),this.#A=Buffer.alloc(0),this.#c=Buffer.alloc(0),this.#I=0}_transform(e,t,a){for(let t=0;t<e.length;++t)this.#C(e[t]);const i=this.#m();i.length&&this.push(i),a()}#C(e){if(0===this.#I){if(255===e)return void(this.#I=255);this.#A=Buffer.concat([this.#A,Buffer.from([e])])}else if(255===this.#I)switch(e){case 250:case 251:case 252:case 253:case 254:this.#I=e;break;default:this.#I=0}else{if(this.#I>=251&&this.#I<=254){let t;switch(this.#I){case 251:t="WILL";break;case 252:t="WONT";break;case 253:t="DO";break;case 254:t="DONT";break;default:return}return this.emit("iac",t,e),void(this.#I=0)}if(250===this.#I){if(240===e)return this.emit("sb",this.#c),this.#I=0,void(this.#c=Buffer.alloc(0));this.#c=Buffer.concat([this.#c,Buffer.from([e])])}}}#m(){const e=this.#A;return this.#A=Buffer.alloc(0),e}}},8473:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UDPHelper=void 0;const i=a(1460).__importDefault(a(1891)),p=a(6729),n=a(609);class s extends p.EventEmitter{#e;#t;#u;#a;#n=!1;#s;get isDestroyed(){return this.#n}constructor(e,t,a){super(),this.#e=e,this.#t=t,this.#a={...a},this.#u=i.default.createSocket("udp4");try{this.#u.bind(this.#a.bind_port||0,this.#a.bind_ip)}catch(e){throw new Error(`Unable to bind to ip/port: ${this.#a.bind_ip}:${this.#a.bind_port}`)}this.#a.broadcast&&this.#u.setBroadcast(!0),void 0!==this.#a.ttl&&this.#u.setTTL(this.#a.ttl),void 0!==this.#a.multicast_ttl&&this.#u.setMulticastTTL(this.#a.multicast_ttl),this.#u.on("error",(e=>{this.#o(n.InstanceStatus.UnknownError,e.message),this.emit("error",e)})),this.#u.on("listening",(()=>{this.#a.multicast_interface&&this.#u.setMulticastInterface(this.#a.multicast_interface),this.#o(n.InstanceStatus.Ok),this.emit("listening")})),this.#u.on("message",(e=>this.emit("data",e))),setTimeout((()=>{this.#n||this.listenerCount("error")||console.error(`Danger: UDP socket for ${this.#e}:${this.#t} is missing an error handler!`)}),5e3)}async send(e){if(this.#n)throw new Error("Cannot write to destroyed socket");if(!e||!e.length)throw new Error("No message to send");return new Promise(((t,a)=>{this.#u.send(e,this.#t,this.#e,(e=>{e?a(e):t()}))}))}destroy(){this.#n=!0,this.#u.removeAllListeners(),this.#u.close(),this.removeAllListeners()}#o(e,t){this.#s!=e&&(this.#s=e,this.emit("status_change",e,t))}}t.UDPHelper=s},8221:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.IpcWrapper=void 0;const i=a(1460),p=a(4300),n=a(2068),s=i.__importDefault(a(2559));t.IpcWrapper=class{#h;#f;#v;#_={};constructor(e,t,a){this.#h=e,this.#f=t,this.#v=a}async sendWithCb(e,t,a,i=0){i<=0&&(i=this.#v);const n={timeout:void 0,resolve:()=>null,reject:()=>null},d=new Promise(((e,t)=>{n.resolve=e,n.reject=t})),r=(0,p.nanoid)();this.#_[r]=n,this.#f({direction:"call",name:String(e),payload:s.default.stringify(t),callbackId:r});const o=new Error("Call timed out");return n.timeout=setTimeout((()=>{n.reject(a?a():o)}),i),d}sendWithNoCb(e,t){this.#f({direction:"call",name:String(e),payload:s.default.stringify(t),callbackId:void 0})}receivedMessage(e){const t=e;switch(e.direction){case"call":{const t=this.#h[e.name];if(!t)return void(e.callbackId&&this.#f({direction:"response",callbackId:e.callbackId,success:!1,payload:s.default.stringify({message:`Unknown command "${e.name}"`})}));t(e.payload?s.default.parse(e.payload):void 0).then((t=>{e.callbackId&&this.#f({direction:"response",callbackId:e.callbackId,success:!0,payload:s.default.stringify(t)})}),(t=>{e.callbackId&&this.#f({direction:"response",callbackId:e.callbackId,success:!1,payload:t instanceof Error?JSON.stringify(t,Object.getOwnPropertyNames(t)):s.default.stringify(t)})}));break}case"response":{if(!e.callbackId)return void console.error("Ipc: Response message has no callbackId");const t=this.#_[e.callbackId];if(!t)return;clearTimeout(t.timeout);const a=e.payload?s.default.parse(e.payload):void 0;if(e.success)t.resolve(a);else{let e=a;a&&"message"in a&&(e=new Error(a.message),a.stack&&(e.stack=a.stack)),t.reject(e)}break}default:(0,n.assertNever)(e),console.error(`Ipc: Message of unknown direction "${t.direction}"`)}}}},9913:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.HostApiNodeJsIpc=void 0,t.HostApiNodeJsIpc="nodejs-ipc"},8049:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.runEntrypoint=t.assertNever=t.splitRgb=t.combineRgb=t.literal=void 0;const i=a(1460);i.__exportStar(a(7517),t),i.__exportStar(a(4911),t),i.__exportStar(a(2764),t);var p=a(2068);Object.defineProperty(t,"literal",{enumerable:!0,get:function(){return p.literal}}),Object.defineProperty(t,"combineRgb",{enumerable:!0,get:function(){return p.combineRgb}}),Object.defineProperty(t,"splitRgb",{enumerable:!0,get:function(){return p.splitRgb}}),Object.defineProperty(t,"assertNever",{enumerable:!0,get:function(){return p.assertNever}}),i.__exportStar(a(1972),t);var n=a(7359);Object.defineProperty(t,"runEntrypoint",{enumerable:!0,get:function(){return n.runEntrypoint}})},4391:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ActionManager=void 0;const i=a(2557);function p(e){return{id:e.id,actionId:e.actionId,controlId:e.controlId,options:e.options}}t.ActionManager=class{#y;#b;#w;#S=new Map;#E=new Map;constructor(e,t,a){this.#y=e,this.#b=t,this.#w=a}async handleExecuteAction(e){const t=this.#S.get(e.action.actionId);if(!t)throw new Error(`Unknown action: ${e.action.actionId}`);const a={parseVariablesInString:async t=>(await this.#y({text:t,controlId:e.action.controlId,actionInstanceId:e.action.id,feedbackInstanceId:void 0})).text};await t.callback({id:e.action.id,actionId:e.action.actionId,controlId:e.action.controlId,options:e.action.options,_deviceId:e.deviceId,_page:e.action.page,_bank:e.action.bank},a)}handleUpdateActions(e){for(const[t,a]of Object.entries(e)){const e=this.#E.get(t);if(e){const t=this.#S.get(e.actionId);if(t?.unsubscribe){const a={parseVariablesInString:async t=>(await this.#y({text:t,controlId:e.controlId,actionInstanceId:e.id,feedbackInstanceId:void 0})).text};Promise.resolve(t.unsubscribe(p(e),a)).catch((t=>{this.#w("error",`Action unsubscribe failed: ${JSON.stringify(e)} - ${t?.message??t} ${t?.stack}`)}))}}if(!a||a.disabled)this.#E.delete(t);else{this.#E.set(t,a);const e=this.#S.get(a.actionId);if(e?.subscribe){const t={parseVariablesInString:async e=>(await this.#y({text:e,controlId:a.controlId,actionInstanceId:a.id,feedbackInstanceId:void 0})).text};Promise.resolve(e.subscribe(p(a),t)).catch((e=>{this.#w("error",`Action subscribe failed: ${JSON.stringify(a)} - ${e?.message??e} ${e?.stack}`)}))}}}}async handleLearnAction(e){const t=this.#S.get(e.action.actionId);if(t&&t.learn){const a={parseVariablesInString:async t=>(await this.#y({text:t,controlId:e.action.controlId,actionInstanceId:e.action.id,feedbackInstanceId:void 0})).text};return{options:await t.learn({id:e.action.id,actionId:e.action.actionId,controlId:e.action.controlId,options:e.action.options,_deviceId:void 0,_page:e.action.page,_bank:e.action.bank},a)}}return{options:void 0}}setActionDefinitions(e){const t=[];this.#S.clear();for(const[a,p]of Object.entries(e))p&&(t.push({id:a,name:p.name,description:p.description,options:(0,i.serializeIsVisibleFn)(p.options),hasLearn:!!p.learn}),this.#S.set(a,p));this.#b({actions:t})}_getAllActions(){return Array.from(this.#E.values()).map((e=>({id:e.id,actionId:e.actionId,controlId:e.controlId,options:e.options})))}subscribeActions(e){let t=Array.from(this.#E.values());const a=new Set(e);a.size&&(t=t.filter((e=>a.has(e.actionId))));for(const e of t){const t=this.#S.get(e.actionId);if(t?.subscribe){const a={parseVariablesInString:async t=>(await this.#y({text:t,controlId:e.controlId,actionInstanceId:e.id,feedbackInstanceId:void 0})).text};Promise.resolve(t.subscribe(p(e),a)).catch((t=>{this.#w("error",`Action subscribe failed: ${JSON.stringify(e)} - ${t?.message??t} ${t?.stack}`)}))}}}unsubscribeActions(e){let t=Array.from(this.#E.values());const a=new Set(e);a.size&&(t=t.filter((e=>a.has(e.actionId))));for(const e of t){const t=this.#S.get(e.actionId);if(t&&t.unsubscribe){const a={parseVariablesInString:async t=>(await this.#y({text:t,controlId:e.controlId,actionInstanceId:e.id,feedbackInstanceId:void 0})).text};Promise.resolve(t.unsubscribe(p(e),a)).catch((t=>{this.#w("error",`Action unsubscribe failed: ${JSON.stringify(e)} - ${t?.message??t} ${t?.stack}`)}))}}}}},2557:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isInstanceBaseProps=t.serializeIsVisibleFn=void 0,t.serializeIsVisibleFn=function(e){return e.map((e=>"isVisible"in e&&"function"==typeof e.isVisible?{...e,isVisibleFn:e.isVisible.toString(),isVisible:void 0}:{...e,isVisibleFn:void 0}))},t.isInstanceBaseProps=function(e){const t=e;return"object"==typeof t&&"string"==typeof t.id&&!0===t._isInstanceBaseProps}},7550:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FeedbackManager=void 0;const i=a(1460),p=a(2557),n=i.__importDefault(a(7319));function s(e,t){return{type:e,id:t.id,feedbackId:t.feedbackId,controlId:t.controlId,options:t.options}}t.FeedbackManager=class{#y;#T;#N;#w;#D=new Map;#R=new Map;#O=new Map;#k=new Map;#V;get parseVariablesContext(){return this.#V}constructor(e,t,a,i){this.#y=e,this.#T=t,this.#N=a,this.#w=i}getDefinitionIds(){return Array.from(this.#D.keys())}getInstanceIds(){return Array.from(this.#R.keys())}handleUpdateFeedbacks(e){for(const[t,a]of Object.entries(e)){const e=this.#R.get(t);if(e){const t=this.#D.get(e.feedbackId);if(t?.unsubscribe){const a={parseVariablesInString:async t=>(await this.#y({text:t,controlId:e.controlId,actionInstanceId:void 0,feedbackInstanceId:e.id})).text};Promise.resolve(t.unsubscribe(s(t.type,e),a)).catch((t=>{this.#w("error",`Feedback unsubscribe failed: ${JSON.stringify(e)} - ${t?.message??t} ${t?.stack}`)}))}}if(!a||a.disabled)this.#R.delete(t);else{this.#R.set(t,{...a,referencedVariables:null});const e=this.#D.get(a.feedbackId);if(e?.subscribe){const t={parseVariablesInString:async e=>(await this.#y({text:e,controlId:a.controlId,actionInstanceId:void 0,feedbackInstanceId:a.id})).text};Promise.resolve(e.subscribe(s(e.type,a),t)).catch((e=>{this.#w("error",`Feedback subscribe failed: ${JSON.stringify(a)} - ${e?.message??e} ${e?.stack}`)}))}this.#x(t)}}}async handleLearnFeedback(e){const t=this.#D.get(e.feedback.feedbackId);if(t&&t.learn){const a={parseVariablesInString:async t=>(await this.#y({text:t,controlId:e.feedback.controlId,actionInstanceId:void 0,feedbackInstanceId:e.feedback.id})).text};return{options:await t.learn({id:e.feedback.id,feedbackId:e.feedback.feedbackId,controlId:e.feedback.controlId,options:e.feedback.options,type:t.type},a)}}return{options:void 0}}handleVariablesChanged(e){if(!e.variablesIds.length)return;const t=new Set(e.variablesIds);for(const t of this.#k.values())for(const a of e.variablesIds)t.changedVariables.add(a);const a=new Set;for(const e of this.#R.values())if(!this.#k.has(e.id)&&e.referencedVariables)for(const i of e.referencedVariables)if(t.has(i)){a.add(e.id);break}for(const e of a)setImmediate((()=>{this.#x(e)}))}#x(e){const t=this.#k.get(e);if(t)return void(t.needsRecheck=!0);const a=this.#R.get(e);if(!a)return;const i=a,p={needsRecheck:!1,changedVariables:new Set};this.#k.set(e,p),Promise.resolve().then((async()=>{const t=this.#D.get(i.feedbackId);let a;const p=new Set;if(t){this.#V=`Feedback ${i.feedbackId} (${e})`;const n={parseVariablesInString:async t=>{const a=await this.#y({text:t,controlId:i.controlId,actionInstanceId:void 0,feedbackInstanceId:e});if(a.variableIds&&a.variableIds.length)for(const e of a.variableIds)p.add(e);return a.text}};a="boolean"===t.type?t.callback({...s("boolean",i),type:"boolean",_rawBank:i.rawBank},n):t.callback({...s("advanced",i),type:"advanced",image:i.image,_page:i.page,_bank:i.bank,_rawBank:i.rawBank},n),this.#V=void 0}this.#O.set(e,{id:e,controlId:i.controlId,value:await a}),this.#B(),i.referencedVariables=p.size>0?Array.from(p):null})).catch((e=>{console.error(`Feedback check failed: ${JSON.stringify(i)} - ${e?.message??e} ${e?.stack}`)})).finally((()=>{this.#V=void 0,this.#k.delete(e);let t=!1;if(i.referencedVariables)for(const e of i.referencedVariables)if(p.changedVariables.has(e)){t=!0;break}(t||p.needsRecheck)&&setImmediate((()=>{this.#x(e)}))}))}#B=(0,n.default)((()=>{const e=this.#O;this.#O=new Map,e.size>0&&this.#T({values:Array.from(e.values())})}),{wait:5,maxWait:25});setFeedbackDefinitions(e){const t=[];this.#D.clear();for(const[a,i]of Object.entries(e))i&&(t.push({id:a,name:i.name,description:i.description,options:(0,p.serializeIsVisibleFn)(i.options),type:i.type,defaultStyle:"defaultStyle"in i?i.defaultStyle:void 0,hasLearn:!!i.learn}),this.#D.set(a,i));this.#N({feedbacks:t})}checkFeedbacks(e){const t=new Set(e);for(const[e,a]of this.#R.entries())if(this.#D.get(a.feedbackId)){if(t.size>0&&!t.has(a.feedbackId))continue;this.#x(e)}}checkFeedbacksById(e){for(const t of e)this.#x(t)}_getAllFeedbacks(){return Array.from(this.#R.values()).map((e=>({id:e.id,feedbackId:e.feedbackId,controlId:e.controlId,options:e.options})))}subscribeFeedbacks(e){let t=Array.from(this.#R.values());const a=new Set(e);a.size&&(t=t.filter((e=>a.has(e.feedbackId))));for(const e of t){const t=this.#D.get(e.feedbackId);if(t?.subscribe){const a={parseVariablesInString:async t=>(await this.#y({text:t,controlId:e.controlId,actionInstanceId:void 0,feedbackInstanceId:e.id})).text};Promise.resolve(t.subscribe(s(t.type,e),a)).catch((t=>{this.#w("error",`Feedback subscribe failed: ${JSON.stringify(e)} - ${t?.message??t} ${t?.stack}`)}))}}}unsubscribeFeedbacks(e){let t=Array.from(this.#R.values());const a=new Set(e);a.size&&(t=t.filter((e=>a.has(e.feedbackId))));for(const e of t){const t=this.#D.get(e.feedbackId);if(t&&t.unsubscribe){const a={parseVariablesInString:async t=>(await this.#y({text:t,controlId:e.controlId,actionInstanceId:void 0,feedbackInstanceId:e.id})).text};Promise.resolve(t.unsubscribe(s(t.type,e),a)).catch((t=>{this.#w("error",`Feedback unsubscribe failed: ${JSON.stringify(e)} - ${t?.message??t} ${t?.stack}`)}))}}}}},1806:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.runThroughUpgradeScripts=void 0,t.runThroughUpgradeScripts=function(e,t,a,i,p){const n=new Map,s=e=>{let t=n.get(e);return t||(t={actions:[],feedbacks:[]},n.set(e,t)),t};for(const t of Object.values(e)){const e=t?.upgradeIndex??a;t&&"number"==typeof e&&s(e).actions.push(t.id)}for(const e of Object.values(t)){const t=e?.upgradeIndex??a;e&&"number"==typeof t&&s(t).feedbacks.push(e.id)}const d={},r={};if(n.size>0){const s=Array.from(n.keys()).sort(),o=Math.min(...s,a??Number.POSITIVE_INFINITY)+1,g=[],l=[],A=i.length;for(let s=o;s<A;s++){const o=n.get(s-1);o&&(g.push(...o.actions),l.push(...o.feedbacks));const A=void 0!==p&&null!==a&&s>a;if(!A&&0===g.length&&0===l.length)continue;const c=(0,i[s])({},{config:A?p:null,actions:g.map((t=>{const a=e[t];if(a)return{id:a.id,controlId:a.controlId,actionId:a.actionId,options:a.options}})).filter((e=>!!e)),feedbacks:l.map((e=>{const a=t[e];if(a)return{id:a.id,controlId:a.controlId,feedbackId:a.feedbackId,options:a.options}})).filter((e=>!!e))});A&&c.updatedConfig&&(p=c.updatedConfig);for(const t of c.updatedActions)if(t){const a=e[t.id];a&&(a.actionId=t.actionId,a.options=t.options,r[t.id]=a)}for(const e of c.updatedFeedbacks)if(e){const a=t[e.id];a&&(a.feedbackId=e.feedbackId,a.options=e.options,d[e.id]={...a,style:d[e.id]?.style??e.style})}}for(const[t,a]of Object.entries(e))r[t]||"number"!=typeof a?.upgradeIndex||(r[t]=a);for(const[e,a]of Object.entries(t))d[e]||"number"!=typeof a?.upgradeIndex||(d[e]=a)}return{updatedActions:r,updatedFeedbacks:d,updatedConfig:p}}},7517:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.validateManifest=void 0;const i=a(1460).__importDefault(a(4618));t.validateManifest=function(e){if(!(0,i.default)(e)){const e=i.default.errors;if(!e)throw new Error("Manifest failed validation with unknown reason");throw new Error(`Manifest validation failed: ${JSON.stringify(e)}`)}}},8322:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},5203:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.InstanceBase=void 0;const i=a(1460),p=a(2068),n=i.__importDefault(a(5860)),s=a(2557),d=a(1806),r=a(7550),o=a(8221),g=a(4391);t.InstanceBase=class{#U;#P;id;#L=new n.default({concurrency:1});#G=!1;#M=!1;#j;#F;#Y=new Map;#W=new Map;#a;get instanceOptions(){return this.#a}constructor(e){if(!(0,s.isInstanceBaseProps)(e)||!e._isInstanceBaseProps)throw new Error("Module instance is being constructed incorrectly. Make sure you aren't trying to do this manually");this.#a={disableVariableValidation:!1},this.#U=new o.IpcWrapper({init:this._handleInit.bind(this),destroy:this._handleDestroy.bind(this),updateConfig:this._handleConfigUpdate.bind(this),executeAction:this._handleExecuteAction.bind(this),updateFeedbacks:this._handleUpdateFeedbacks.bind(this),updateActions:this._handleUpdateActions.bind(this),getConfigFields:this._handleGetConfigFields.bind(this),handleHttpRequest:this._handleHttpRequest.bind(this),learnAction:this._handleLearnAction.bind(this),learnFeedback:this._handleLearnFeedback.bind(this),startStopRecordActions:this._handleStartStopRecordActions.bind(this),variablesChanged:this._handleVariablesChanged.bind(this)},(e=>{process.send(e)}),5e3),process.on("message",(e=>{this.#U.receivedMessage(e)})),this.#j=new g.ActionManager((async e=>this.#U.sendWithCb("parseVariablesInString",e)),(e=>this.#U.sendWithNoCb("setActionDefinitions",e)),this.log.bind(this)),this.#F=new r.FeedbackManager((async e=>this.#U.sendWithCb("parseVariablesInString",e)),(e=>this.#U.sendWithNoCb("updateFeedbackValues",e)),(e=>this.#U.sendWithNoCb("setFeedbackDefinitions",e)),this.log.bind(this)),this.#P=e.upgradeScripts,this.id=e.id,this.log("debug","Initializing")}async _handleInit(e){return this.#L.add((async()=>{if(this.#G)throw new Error("Already initialized");const t=e.actions,a=e.feedbacks;let i=e.config;if(e.isFirstInit){const e={},t=this.getConfigFields();for(const a of t)"default"in a&&(e[a.id]=a.default);i=e,this.saveConfig(i)}const{updatedActions:p,updatedFeedbacks:n,updatedConfig:s}=(0,d.runThroughUpgradeScripts)(t,a,e.lastUpgradeIndex,this.#P,i);i=s??i;const r=this.#U.sendWithCb("upgradedItems",{updatedActions:p,updatedFeedbacks:n});try{await this.init(i,!!e.isFirstInit),this.#G=!0}catch(e){throw console.trace(`Init failed: ${e}`),e}finally{await r}return setImmediate((()=>{this._handleUpdateActions({actions:t},!0).catch((e=>{this.log("error",`Receive actions failed: ${e}`)})),this._handleUpdateFeedbacks({feedbacks:a},!0).catch((e=>{this.log("error",`Receive feedbacks failed: ${e}`)}))})),{hasHttpHandler:"function"==typeof this.handleHttpRequest,hasRecordActionsHandler:"function"==typeof this.handleStartStopRecordActions,newUpgradeIndex:this.#P.length-1,updatedConfig:i}}))}async _handleDestroy(){await this.#L.add((async()=>{if(!this.#G)throw new Error("Not initialized");await this.destroy(),this.#G=!1}))}async _handleConfigUpdate(e){await this.#L.add((async()=>{if(!this.#G)throw new Error("Not initialized");await this.configUpdated(e)}))}async _handleExecuteAction(e){return this.#j.handleExecuteAction(e)}async _handleUpdateFeedbacks(e,t){if(!t){const t=(0,d.runThroughUpgradeScripts)({},e.feedbacks,null,this.#P,void 0);this.#U.sendWithCb("upgradedItems",{updatedActions:t.updatedActions,updatedFeedbacks:t.updatedFeedbacks}).catch((e=>{this.log("error",`Failed to save upgraded feedbacks: ${e}`)}))}this.#F.handleUpdateFeedbacks(e.feedbacks)}async _handleUpdateActions(e,t){if(!t){const t=(0,d.runThroughUpgradeScripts)(e.actions,{},null,this.#P,void 0);this.#U.sendWithCb("upgradedItems",{updatedActions:t.updatedActions,updatedFeedbacks:t.updatedFeedbacks}).catch((e=>{this.log("error",`Failed to save upgraded actions: ${e}`)}))}this.#j.handleUpdateActions(e.actions)}async _handleGetConfigFields(e){return{fields:(0,s.serializeIsVisibleFn)(this.getConfigFields())}}async _handleHttpRequest(e){if(!this.handleHttpRequest)throw new Error("handleHttpRequest is not supported!");return{response:await this.handleHttpRequest(e.request)}}async _handleLearnAction(e){return this.#j.handleLearnAction(e)}async _handleLearnFeedback(e){return this.#F.handleLearnFeedback(e)}async _handleStartStopRecordActions(e){if(e.recording){if(this.#M)return}else if(!this.#M)return;if(!this.handleStartStopRecordActions)throw this.#M=!1,new Error("Recording actions is not supported by this module!");this.#M=e.recording,this.handleStartStopRecordActions(this.#M)}async _handleVariablesChanged(e){this.#F.handleVariablesChanged(e)}saveConfig(e){this.#U.sendWithNoCb("saveConfig",{config:e})}setActionDefinitions(e){this.#j.setActionDefinitions(e)}setFeedbackDefinitions(e){this.#F.setFeedbackDefinitions(e)}setPresetDefinitions(e){const t=[];for(const[a,i]of Object.entries(e))i&&t.push({...i,id:a});this.#U.sendWithNoCb("setPresetDefinitions",{presets:t})}setVariableDefinitions(e){const t=[];this.#Y.clear();for(const a of e)t.push({id:a.variableId,name:a.name}),this.#Y.set(a.variableId,a),this.#W.has(a.variableId)||this.#W.set(a.variableId,"");if(!this.#a.disableVariableValidation){const e=new Set(this.#Y.keys());for(const t of this.#W.keys())e.has(t)||this.#W.delete(t)}this.#U.sendWithNoCb("setVariableDefinitions",{variables:t})}setVariableValues(e){const t=[];for(const[a,i]of Object.entries(e))this.#a.disableVariableValidation?(void 0===i?this.#W.delete(a):this.#W.set(a,i),t.push({id:a,value:i})):this.#Y.has(a)?(this.#W.set(a,i??""),t.push({id:a,value:i??""})):t.push({id:a,value:void 0});this.#U.sendWithNoCb("setVariableValues",{newValues:t})}getVariableValue(e){return this.#W.get(e)}async parseVariablesInString(e){const t=this.#F.parseVariablesContext;return t&&this.log("debug",`parseVariablesInString called while in: ${t}. You should use the parseVariablesInString provided to the callback instead`),(await this.#U.sendWithCb("parseVariablesInString",{text:e,controlId:void 0,actionInstanceId:void 0,feedbackInstanceId:void 0})).text}checkFeedbacks(...e){this.#F.checkFeedbacks(e)}checkFeedbacksById(...e){this.#F.checkFeedbacksById(e)}_getAllActions(){return this.#j._getAllActions()}subscribeActions(...e){this.#j.subscribeActions(e)}unsubscribeActions(...e){this.#j.unsubscribeActions(e)}_getAllFeedbacks(){return this.#F._getAllFeedbacks()}subscribeFeedbacks(...e){this.#F.subscribeFeedbacks(e)}unsubscribeFeedbacks(...e){this.#F.unsubscribeFeedbacks(e)}recordAction(e,t){if(!this.#M)throw new Error("Not currently recording actions");this.#U.sendWithNoCb("recordAction",{uniquenessId:t??null,actionId:e.actionId,options:e.options})}setCustomVariableValue(e,t){this.#U.sendWithNoCb("setCustomVariable",{customVariableId:e,value:t})}oscSend(e,t,a,i){this.#U.sendWithNoCb("send-osc",(0,p.literal)({host:e,port:t,path:a,args:i}))}updateStatus(e,t){this.#U.sendWithNoCb("set-status",(0,p.literal)({status:e,message:t??null}))}log(e,t){this.#U.sendWithNoCb("log-message",(0,p.literal)({level:e,message:t}))}}},9051:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},609:(e,t)=>{"use strict";var a,i;Object.defineProperty(t,"__esModule",{value:!0}),t.Regex=t.InstanceStatus=void 0,(i=t.InstanceStatus||(t.InstanceStatus={})).Ok="ok",i.Connecting="connecting",i.Disconnected="disconnected",i.ConnectionFailure="connection_failure",i.BadConfig="bad_config",i.UnknownError="unknown_error",i.UnknownWarning="unknown_warning",(a=t.Regex||(t.Regex={})).IP="/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/",a.HOSTNAME="/^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9])$/",a.BOOLEAN="/^(true|false|0|1)$/i",a.PORT="/^([1-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-8][0-9]{3}|9[0-8][0-9]{2}|99[0-8][0-9]|999[0-9]|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-4])$/",a.PERCENT="/^(100|[0-9]|[0-9][0-9])$/",a.FLOAT="/^([0-9]*\\.)?[0-9]+$/",a.SIGNED_FLOAT="/^[+-]?([0-9]*\\.)?[0-9]+$/",a.FLOAT_OR_INT="/^([0-9]+)(\\.[0-9]+)?$/",a.NUMBER="/^\\d+$/",a.SIGNED_NUMBER="/^[+-]?\\d+$/",a.SOMETHING="/^.+$/",a.TIMECODE="/^(0*[0-9]|1[0-9]|2[0-4]):(0*[0-9]|[1-5][0-9]|60):(0*[0-9]|[1-5][0-9]|60):(0*[0-9]|[12][0-9]|30)$/"},4334:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},2490:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},4911:(e,t,a)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=a(1460);i.__exportStar(a(8322),t),i.__exportStar(a(5203),t),i.__exportStar(a(9051),t),i.__exportStar(a(609),t),i.__exportStar(a(4334),t),i.__exportStar(a(2490),t),i.__exportStar(a(3646),t),i.__exportStar(a(3558),t),i.__exportStar(a(4788),t),i.__exportStar(a(521),t),i.__exportStar(a(6870),t)},3646:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},3558:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},4788:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},521:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CreateConvertToBooleanFeedbackUpgradeScript=t.EmptyUpgradeScript=void 0,t.EmptyUpgradeScript=()=>({updatedConfig:null,updatedActions:[],updatedFeedbacks:[]}),t.CreateConvertToBooleanFeedbackUpgradeScript=function(e){return(t,a)=>{const i=[];for(const t of a.feedbacks){let a=e[t.feedbackId];if(!0===a&&(a={bg:"bgcolor",bgcolor:"bgcolor",fg:"color",color:"color",png64:"png64",png:"png64"}),a){t.style||(t.style={});for(const[e,p]of Object.entries(a))void 0!==t.options[e]&&(t.style[p]=t.options[e],delete t.options[e],i.push(t))}}return{updatedConfig:null,updatedActions:[],updatedFeedbacks:i}}}},6870:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},2068:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.splitRgb=t.combineRgb=t.assertNever=t.literal=void 0,t.literal=function(e){return e},t.assertNever=function(e){},t.combineRgb=function(e,t,a){return(255&e)<<16|(255&t)<<8|255&a},t.splitRgb=function(e){return{r:(16711680&e)>>16,g:(65280&e)>>8,b:255&e}}},4618:(e,t,a)=>{"use strict";e.exports=n,e.exports.default=n;const i={$schema:"http://json-schema.org/draft-07/schema#",type:"object",title:"ModuleManifest",properties:{id:{type:"string",description:"Unique identifier for the module"},name:{type:"string",description:"Name of the module"},shortname:{type:"string"},description:{type:"string",description:"Description of the module "},version:{type:"string",description:"Current version of the module"},license:{type:"string",description:"SPDX identifier for license of the module"},repository:{type:"string",description:"URL to the source repository"},bugs:{type:"string",description:"URL to bug tracker"},maintainers:{type:"array",description:"List of active maintiners",uniqueItems:!0,items:{type:"object",title:"ModuleManifestMaintainer",properties:{name:{type:"string"},email:{type:"string"},github:{type:"string"}},required:["name"]}},legacyIds:{type:"array",description:"If the module had a different unique identifier previously, then specify it here",uniqueItems:!0,items:{type:"string"}},runtime:{type:"object",title:"ModuleManifestRuntime",description:"Information on how to execute the module",properties:{type:{type:"string",description:"Type of the module. Must be: node18"},api:{type:"string",description:"Which host-api does it use. In the future alternate options will be allowed",enum:["nodejs-ipc"]},apiVersion:{type:"string",description:"The version of the host-api used"},entrypoint:{type:"string",description:"Entrypoint to pass to the runtime. eg index.js"}},required:["type","api","apiVersion","entrypoint"]},manufacturer:{type:"string"},products:{type:"array",uniqueItems:!0,items:{type:"string"}},keywords:{type:"array",uniqueItems:!0,items:{type:"string"}}},required:["id","name","shortname","description","version","license","repository","bugs","maintainers","legacyIds","runtime","manufacturer","products","keywords"]},p=a(7056).Z;function n(e,{instancePath:t="",parentData:a,parentDataProperty:s,rootData:d=e}={}){if(!e||"object"!=typeof e||Array.isArray(e))return n.errors=[{instancePath:t,schemaPath:"#/type",keyword:"type",params:{type:"object"},message:"must be object"}],!1;{let a;if(void 0===e.id&&(a="id")||void 0===e.name&&(a="name")||void 0===e.shortname&&(a="shortname")||void 0===e.description&&(a="description")||void 0===e.version&&(a="version")||void 0===e.license&&(a="license")||void 0===e.repository&&(a="repository")||void 0===e.bugs&&(a="bugs")||void 0===e.maintainers&&(a="maintainers")||void 0===e.legacyIds&&(a="legacyIds")||void 0===e.runtime&&(a="runtime")||void 0===e.manufacturer&&(a="manufacturer")||void 0===e.products&&(a="products")||void 0===e.keywords&&(a="keywords"))return n.errors=[{instancePath:t,schemaPath:"#/required",keyword:"required",params:{missingProperty:a},message:"must have required property '"+a+"'"}],!1;if(void 0!==e.id){const a=0;if("string"!=typeof e.id)return n.errors=[{instancePath:t+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=0===a}else r=!0;if(r){if(void 0!==e.name){const a=0;if("string"!=typeof e.name)return n.errors=[{instancePath:t+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;r=0===a}else r=!0;if(r){if(void 0!==e.shortname){const a=0;if("string"!=typeof e.shortname)return n.errors=[{instancePath:t+"/shortname",schemaPath:"#/properties/shortname/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;r=0===a}else r=!0;if(r){if(void 0!==e.description){const a=0;if("string"!=typeof e.description)return n.errors=[{instancePath:t+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;r=0===a}else r=!0;if(r){if(void 0!==e.version){const a=0;if("string"!=typeof e.version)return n.errors=[{instancePath:t+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;r=0===a}else r=!0;if(r){if(void 0!==e.license){const a=0;if("string"!=typeof e.license)return n.errors=[{instancePath:t+"/license",schemaPath:"#/properties/license/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;r=0===a}else r=!0;if(r){if(void 0!==e.repository){const a=0;if("string"!=typeof e.repository)return n.errors=[{instancePath:t+"/repository",schemaPath:"#/properties/repository/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;r=0===a}else r=!0;if(r){if(void 0!==e.bugs){const a=0;if("string"!=typeof e.bugs)return n.errors=[{instancePath:t+"/bugs",schemaPath:"#/properties/bugs/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;r=0===a}else r=!0;if(r){if(void 0!==e.maintainers){let a=e.maintainers;const i=0;if(0===i){if(!Array.isArray(a))return n.errors=[{instancePath:t+"/maintainers",schemaPath:"#/properties/maintainers/type",keyword:"type",params:{type:"array"},message:"must be array"}],!1;{var o=!0;const e=a.length;for(let i=0;i<e;i++){let e=a[i];const p=0;if(0===p){if(!e||"object"!=typeof e||Array.isArray(e))return n.errors=[{instancePath:t+"/maintainers/"+i,schemaPath:"#/properties/maintainers/items/type",keyword:"type",params:{type:"object"},message:"must be object"}],!1;{let a;if(void 0===e.name&&(a="name"))return n.errors=[{instancePath:t+"/maintainers/"+i,schemaPath:"#/properties/maintainers/items/required",keyword:"required",params:{missingProperty:a},message:"must have required property '"+a+"'"}],!1;if(void 0!==e.name){const a=0;if("string"!=typeof e.name)return n.errors=[{instancePath:t+"/maintainers/"+i+"/name",schemaPath:"#/properties/maintainers/items/properties/name/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var g=0===a}else g=!0;if(g){if(void 0!==e.email){const a=0;if("string"!=typeof e.email)return n.errors=[{instancePath:t+"/maintainers/"+i+"/email",schemaPath:"#/properties/maintainers/items/properties/email/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;g=0===a}else g=!0;if(g)if(void 0!==e.github){const a=0;if("string"!=typeof e.github)return n.errors=[{instancePath:t+"/maintainers/"+i+"/github",schemaPath:"#/properties/maintainers/items/properties/github/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;g=0===a}else g=!0}}}if(!(o=0===p))break}if(o){let e,i=a.length;if(i>1)for(;i--;)for(e=i;e--;)if(p(a[i],a[e]))return n.errors=[{instancePath:t+"/maintainers",schemaPath:"#/properties/maintainers/uniqueItems",keyword:"uniqueItems",params:{i,j:e},message:"must NOT have duplicate items (items ## "+e+" and "+i+" are identical)"}],!1}}}r=0===i}else r=!0;if(r){if(void 0!==e.legacyIds){let a=e.legacyIds;const i=0;if(0===i){if(!Array.isArray(a))return n.errors=[{instancePath:t+"/legacyIds",schemaPath:"#/properties/legacyIds/type",keyword:"type",params:{type:"array"},message:"must be array"}],!1;{var l=!0;const e=a.length;for(let i=0;i<e;i++){const e=0;if("string"!=typeof a[i])return n.errors=[{instancePath:t+"/legacyIds/"+i,schemaPath:"#/properties/legacyIds/items/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;if(!(l=0===e))break}if(l){let e,i=a.length;if(i>1){const p={};for(;i--;){let s=a[i];if("string"==typeof s){if("number"==typeof p[s])return e=p[s],n.errors=[{instancePath:t+"/legacyIds",schemaPath:"#/properties/legacyIds/uniqueItems",keyword:"uniqueItems",params:{i,j:e},message:"must NOT have duplicate items (items ## "+e+" and "+i+" are identical)"}],!1;p[s]=i}}}}}}r=0===i}else r=!0;if(r){if(void 0!==e.runtime){let a=e.runtime;const p=0;if(0===p){if(!a||"object"!=typeof a||Array.isArray(a))return n.errors=[{instancePath:t+"/runtime",schemaPath:"#/properties/runtime/type",keyword:"type",params:{type:"object"},message:"must be object"}],!1;{let e;if(void 0===a.type&&(e="type")||void 0===a.api&&(e="api")||void 0===a.apiVersion&&(e="apiVersion")||void 0===a.entrypoint&&(e="entrypoint"))return n.errors=[{instancePath:t+"/runtime",schemaPath:"#/properties/runtime/required",keyword:"required",params:{missingProperty:e},message:"must have required property '"+e+"'"}],!1;if(void 0!==a.type){const e=0;if("string"!=typeof a.type)return n.errors=[{instancePath:t+"/runtime/type",schemaPath:"#/properties/runtime/properties/type/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var A=0===e}else A=!0;if(A){if(void 0!==a.api){let e=a.api;const p=0;if("string"!=typeof e)return n.errors=[{instancePath:t+"/runtime/api",schemaPath:"#/properties/runtime/properties/api/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;if("nodejs-ipc"!==e)return n.errors=[{instancePath:t+"/runtime/api",schemaPath:"#/properties/runtime/properties/api/enum",keyword:"enum",params:{allowedValues:i.properties.runtime.properties.api.enum},message:"must be equal to one of the allowed values"}],!1;A=0===p}else A=!0;if(A){if(void 0!==a.apiVersion){const e=0;if("string"!=typeof a.apiVersion)return n.errors=[{instancePath:t+"/runtime/apiVersion",schemaPath:"#/properties/runtime/properties/apiVersion/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;A=0===e}else A=!0;if(A)if(void 0!==a.entrypoint){const e=0;if("string"!=typeof a.entrypoint)return n.errors=[{instancePath:t+"/runtime/entrypoint",schemaPath:"#/properties/runtime/properties/entrypoint/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;A=0===e}else A=!0}}}}r=0===p}else r=!0;if(r){if(void 0!==e.manufacturer){const a=0;if("string"!=typeof e.manufacturer)return n.errors=[{instancePath:t+"/manufacturer",schemaPath:"#/properties/manufacturer/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;r=0===a}else r=!0;if(r){if(void 0!==e.products){let a=e.products;const i=0;if(0===i){if(!Array.isArray(a))return n.errors=[{instancePath:t+"/products",schemaPath:"#/properties/products/type",keyword:"type",params:{type:"array"},message:"must be array"}],!1;{var c=!0;const e=a.length;for(let i=0;i<e;i++){const e=0;if("string"!=typeof a[i])return n.errors=[{instancePath:t+"/products/"+i,schemaPath:"#/properties/products/items/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;if(!(c=0===e))break}if(c){let e,i=a.length;if(i>1){const p={};for(;i--;){let s=a[i];if("string"==typeof s){if("number"==typeof p[s])return e=p[s],n.errors=[{instancePath:t+"/products",schemaPath:"#/properties/products/uniqueItems",keyword:"uniqueItems",params:{i,j:e},message:"must NOT have duplicate items (items ## "+e+" and "+i+" are identical)"}],!1;p[s]=i}}}}}}r=0===i}else r=!0;if(r)if(void 0!==e.keywords){let a=e.keywords;const i=0;if(0===i){if(!Array.isArray(a))return n.errors=[{instancePath:t+"/keywords",schemaPath:"#/properties/keywords/type",keyword:"type",params:{type:"array"},message:"must be array"}],!1;{var I=!0;const e=a.length;for(let i=0;i<e;i++){const e=0;if("string"!=typeof a[i])return n.errors=[{instancePath:t+"/keywords/"+i,schemaPath:"#/properties/keywords/items/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;if(!(I=0===e))break}if(I){let e,i=a.length;if(i>1){const p={};for(;i--;){let s=a[i];if("string"==typeof s){if("number"==typeof p[s])return e=p[s],n.errors=[{instancePath:t+"/keywords",schemaPath:"#/properties/keywords/uniqueItems",keyword:"uniqueItems",params:{i,j:e},message:"must NOT have duplicate items (items ## "+e+" and "+i+" are identical)"}],!1;p[s]=i}}}}}}r=0===i}else r=!0}}}}}}}}}}}}}return n.errors=null,!0}},4300:(e,t,a)=>{let i,p,n=a(6113),{urlAlphabet:s}=a(3792),d=e=>{!i||i.length<e?(i=Buffer.allocUnsafe(128*e),n.randomFillSync(i),p=0):p+e>i.length&&(n.randomFillSync(i),p=0),p+=e},r=e=>(d(e-=0),i.subarray(p-e,p)),o=(e,t,a)=>{let i=(2<<31-Math.clz32(e.length-1|1))-1,p=Math.ceil(1.6*i*t/e.length);return(n=t)=>{let s="";for(;;){let t=a(p),d=p;for(;d--;)if(s+=e[t[d]&i]||"",s.length===n)return s}}};e.exports={nanoid:(e=21)=>{d(e-=0);let t="";for(let a=p-e;a<p;a++)t+=s[63&i[a]];return t},customAlphabet:(e,t=21)=>o(e,t,r),customRandom:o,urlAlphabet:s,random:r}},3792:e=>{e.exports={urlAlphabet:"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict"}},6292:(e,t,a)=>{"use strict";a.r(t),a.d(t,{FetchError:()=>c,Headers:()=>R,Request:()=>H,Response:()=>L,default:()=>X});var i=a(2781),p=a(3685),n=a(7310),s=a(7347),d=a(5687),r=a(9796);const o=i.Readable,g=Symbol("buffer"),l=Symbol("type");class A{constructor(){this[l]="";const e=arguments[0],t=arguments[1],a=[];let i=0;if(e){const t=e,p=Number(t.length);for(let e=0;e<p;e++){const p=t[e];let n;n=p instanceof Buffer?p:ArrayBuffer.isView(p)?Buffer.from(p.buffer,p.byteOffset,p.byteLength):p instanceof ArrayBuffer?Buffer.from(p):p instanceof A?p[g]:Buffer.from("string"==typeof p?p:String(p)),i+=n.length,a.push(n)}}this[g]=Buffer.concat(a);let p=t&&void 0!==t.type&&String(t.type).toLowerCase();p&&!/[^\u0020-\u007E]/.test(p)&&(this[l]=p)}get size(){return this[g].length}get type(){return this[l]}text(){return Promise.resolve(this[g].toString())}arrayBuffer(){const e=this[g],t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(t)}stream(){const e=new o;return e._read=function(){},e.push(this[g]),e.push(null),e}toString(){return"[object Blob]"}slice(){const e=this.size,t=arguments[0],a=arguments[1];let i,p;i=void 0===t?0:t<0?Math.max(e+t,0):Math.min(t,e),p=void 0===a?e:a<0?Math.max(e+a,0):Math.min(a,e);const n=Math.max(p-i,0),s=this[g].slice(i,i+n),d=new A([],{type:arguments[2]});return d[g]=s,d}}function c(e,t,a){Error.call(this,e),this.message=e,this.type=t,a&&(this.code=this.errno=a.code),Error.captureStackTrace(this,this.constructor)}let I;Object.defineProperties(A.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(A.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0}),c.prototype=Object.create(Error.prototype),c.prototype.constructor=c,c.prototype.name="FetchError";try{I=require("encoding").convert}catch(e){}const C=Symbol("Body internals"),m=i.PassThrough;function u(e){var t=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},p=a.size;let n=void 0===p?0:p;var s=a.timeout;let d=void 0===s?0:s;null==e?e=null:f(e)?e=Buffer.from(e.toString()):v(e)||Buffer.isBuffer(e)||("[object ArrayBuffer]"===Object.prototype.toString.call(e)?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof i||(e=Buffer.from(String(e)))),this[C]={body:e,disturbed:!1,error:null},this.size=n,this.timeout=d,e instanceof i&&e.on("error",(function(e){const a="AbortError"===e.name?e:new c(`Invalid response body while trying to fetch ${t.url}: ${e.message}`,"system",e);t[C].error=a}))}function h(){var e=this;if(this[C].disturbed)return u.Promise.reject(new TypeError(`body used already for: ${this.url}`));if(this[C].disturbed=!0,this[C].error)return u.Promise.reject(this[C].error);let t=this.body;if(null===t)return u.Promise.resolve(Buffer.alloc(0));if(v(t)&&(t=t.stream()),Buffer.isBuffer(t))return u.Promise.resolve(t);if(!(t instanceof i))return u.Promise.resolve(Buffer.alloc(0));let a=[],p=0,n=!1;return new u.Promise((function(i,s){let d;e.timeout&&(d=setTimeout((function(){n=!0,s(new c(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))}),e.timeout)),t.on("error",(function(t){"AbortError"===t.name?(n=!0,s(t)):s(new c(`Invalid response body while trying to fetch ${e.url}: ${t.message}`,"system",t))})),t.on("data",(function(t){if(!n&&null!==t){if(e.size&&p+t.length>e.size)return n=!0,void s(new c(`content size at ${e.url} over limit: ${e.size}`,"max-size"));p+=t.length,a.push(t)}})),t.on("end",(function(){if(!n){clearTimeout(d);try{i(Buffer.concat(a,p))}catch(t){s(new c(`Could not create Buffer from response body for ${e.url}: ${t.message}`,"system",t))}}}))}))}function f(e){return"object"==typeof e&&"function"==typeof e.append&&"function"==typeof e.delete&&"function"==typeof e.get&&"function"==typeof e.getAll&&"function"==typeof e.has&&"function"==typeof e.set&&("URLSearchParams"===e.constructor.name||"[object URLSearchParams]"===Object.prototype.toString.call(e)||"function"==typeof e.sort)}function v(e){return"object"==typeof e&&"function"==typeof e.arrayBuffer&&"string"==typeof e.type&&"function"==typeof e.stream&&"function"==typeof e.constructor&&"string"==typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function _(e){let t,a,p=e.body;if(e.bodyUsed)throw new Error("cannot clone body after it is used");return p instanceof i&&"function"!=typeof p.getBoundary&&(t=new m,a=new m,p.pipe(t),p.pipe(a),e[C].body=t,p=a),p}function y(e){return null===e?null:"string"==typeof e?"text/plain;charset=UTF-8":f(e)?"application/x-www-form-urlencoded;charset=UTF-8":v(e)?e.type||null:Buffer.isBuffer(e)||"[object ArrayBuffer]"===Object.prototype.toString.call(e)||ArrayBuffer.isView(e)?null:"function"==typeof e.getBoundary?`multipart/form-data;boundary=${e.getBoundary()}`:e instanceof i?null:"text/plain;charset=UTF-8"}function b(e){const t=e.body;return null===t?0:v(t)?t.size:Buffer.isBuffer(t)?t.length:t&&"function"==typeof t.getLengthSync&&(t._lengthRetrievers&&0==t._lengthRetrievers.length||t.hasKnownLength&&t.hasKnownLength())?t.getLengthSync():null}u.prototype={get body(){return this[C].body},get bodyUsed(){return this[C].disturbed},arrayBuffer(){return h.call(this).then((function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}))},blob(){let e=this.headers&&this.headers.get("content-type")||"";return h.call(this).then((function(t){return Object.assign(new A([],{type:e.toLowerCase()}),{[g]:t})}))},json(){var e=this;return h.call(this).then((function(t){try{return JSON.parse(t.toString())}catch(t){return u.Promise.reject(new c(`invalid json response body at ${e.url} reason: ${t.message}`,"invalid-json"))}}))},text(){return h.call(this).then((function(e){return e.toString()}))},buffer(){return h.call(this)},textConverted(){var e=this;return h.call(this).then((function(t){return function(e,t){if("function"!=typeof I)throw new Error("The package `encoding` must be installed to use the textConverted() function");const a=t.get("content-type");let i,p,n="utf-8";return a&&(i=/charset=([^;]*)/i.exec(a)),p=e.slice(0,1024).toString(),!i&&p&&(i=/<meta.+?charset=(['"])(.+?)\1/i.exec(p)),!i&&p&&(i=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(p),i||(i=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(p),i&&i.pop()),i&&(i=/charset=(.*)/i.exec(i.pop()))),!i&&p&&(i=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(p)),i&&(n=i.pop(),"gb2312"!==n&&"gbk"!==n||(n="gb18030")),I(e,"UTF-8",n).toString()}(t,e.headers)}))}},Object.defineProperties(u.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),u.mixIn=function(e){for(const t of Object.getOwnPropertyNames(u.prototype))if(!(t in e)){const a=Object.getOwnPropertyDescriptor(u.prototype,t);Object.defineProperty(e,t,a)}},u.Promise=global.Promise;const w=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,S=/[^\t\x20-\x7e\x80-\xff]/;function E(e){if(e=`${e}`,w.test(e)||""===e)throw new TypeError(`${e} is not a legal HTTP header name`)}function T(e){if(e=`${e}`,S.test(e))throw new TypeError(`${e} is not a legal HTTP header value`)}function N(e,t){t=t.toLowerCase();for(const a in e)if(a.toLowerCase()===t)return a}const D=Symbol("map");class R{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(this[D]=Object.create(null),e instanceof R){const t=e.raw(),a=Object.keys(t);for(const e of a)for(const a of t[e])this.append(e,a)}else if(null==e);else{if("object"!=typeof e)throw new TypeError("Provided initializer must be an object");{const t=e[Symbol.iterator];if(null!=t){if("function"!=typeof t)throw new TypeError("Header pairs must be iterable");const a=[];for(const t of e){if("object"!=typeof t||"function"!=typeof t[Symbol.iterator])throw new TypeError("Each header pair must be iterable");a.push(Array.from(t))}for(const e of a){if(2!==e.length)throw new TypeError("Each header pair must be a name/value tuple");this.append(e[0],e[1])}}else for(const t of Object.keys(e)){const a=e[t];this.append(t,a)}}}}get(e){E(e=`${e}`);const t=N(this[D],e);return void 0===t?null:this[D][t].join(", ")}forEach(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,a=O(this),i=0;for(;i<a.length;){var p=a[i];const n=p[0],s=p[1];e.call(t,s,n,this),a=O(this),i++}}set(e,t){t=`${t}`,E(e=`${e}`),T(t);const a=N(this[D],e);this[D][void 0!==a?a:e]=[t]}append(e,t){t=`${t}`,E(e=`${e}`),T(t);const a=N(this[D],e);void 0!==a?this[D][a].push(t):this[D][e]=[t]}has(e){return E(e=`${e}`),void 0!==N(this[D],e)}delete(e){E(e=`${e}`);const t=N(this[D],e);void 0!==t&&delete this[D][t]}raw(){return this[D]}keys(){return V(this,"key")}values(){return V(this,"value")}[Symbol.iterator](){return V(this,"key+value")}}function O(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"key+value";const a=Object.keys(e[D]).sort();return a.map("key"===t?function(e){return e.toLowerCase()}:"value"===t?function(t){return e[D][t].join(", ")}:function(t){return[t.toLowerCase(),e[D][t].join(", ")]})}R.prototype.entries=R.prototype[Symbol.iterator],Object.defineProperty(R.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(R.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});const k=Symbol("internal");function V(e,t){const a=Object.create(x);return a[k]={target:e,kind:t,index:0},a}const x=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==x)throw new TypeError("Value of `this` is not a HeadersIterator");var e=this[k];const t=e.target,a=e.kind,i=e.index,p=O(t,a);return i>=p.length?{value:void 0,done:!0}:(this[k].index=i+1,{value:p[i],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));function B(e){const t=Object.assign({__proto__:null},e[D]),a=N(e[D],"Host");return void 0!==a&&(t[a]=t[a][0]),t}Object.defineProperty(x,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});const U=Symbol("Response internals"),P=p.STATUS_CODES;class L{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};u.call(this,e,t);const a=t.status||200,i=new R(t.headers);if(null!=e&&!i.has("Content-Type")){const t=y(e);t&&i.append("Content-Type",t)}this[U]={url:t.url,status:a,statusText:t.statusText||P[a],headers:i,counter:t.counter}}get url(){return this[U].url||""}get status(){return this[U].status}get ok(){return this[U].status>=200&&this[U].status<300}get redirected(){return this[U].counter>0}get statusText(){return this[U].statusText}get headers(){return this[U].headers}clone(){return new L(_(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}u.mixIn(L.prototype),Object.defineProperties(L.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(L.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});const G=Symbol("Request internals"),M=n.URL||s.URL,j=n.parse,F=n.format;function Y(e){return/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)&&(e=new M(e).toString()),j(e)}const W="destroy"in i.Readable.prototype;function J(e){return"object"==typeof e&&"object"==typeof e[G]}class H{constructor(e){let t,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};J(e)?t=Y(e.url):(t=e&&e.href?Y(e.href):Y(`${e}`),e={});let i=a.method||e.method||"GET";if(i=i.toUpperCase(),(null!=a.body||J(e)&&null!==e.body)&&("GET"===i||"HEAD"===i))throw new TypeError("Request with GET/HEAD method cannot have body");let p=null!=a.body?a.body:J(e)&&null!==e.body?_(e):null;u.call(this,p,{timeout:a.timeout||e.timeout||0,size:a.size||e.size||0});const n=new R(a.headers||e.headers||{});if(null!=p&&!n.has("Content-Type")){const e=y(p);e&&n.append("Content-Type",e)}let s=J(e)?e.signal:null;if("signal"in a&&(s=a.signal),null!=s&&!function(e){const t=e&&"object"==typeof e&&Object.getPrototypeOf(e);return!(!t||"AbortSignal"!==t.constructor.name)}(s))throw new TypeError("Expected signal to be an instanceof AbortSignal");this[G]={method:i,redirect:a.redirect||e.redirect||"follow",headers:n,parsedURL:t,signal:s},this.follow=void 0!==a.follow?a.follow:void 0!==e.follow?e.follow:20,this.compress=void 0!==a.compress?a.compress:void 0===e.compress||e.compress,this.counter=a.counter||e.counter||0,this.agent=a.agent||e.agent}get method(){return this[G].method}get url(){return F(this[G].parsedURL)}get headers(){return this[G].headers}get redirect(){return this[G].redirect}get signal(){return this[G].signal}clone(){return new H(this)}}function Z(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}u.mixIn(H.prototype),Object.defineProperty(H.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(H.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}}),Z.prototype=Object.create(Error.prototype),Z.prototype.constructor=Z,Z.prototype.name="AbortError";const z=n.URL||s.URL,Q=i.PassThrough;function q(e,t){if(!q.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return u.Promise=q.Promise,new q.Promise((function(a,n){const s=new H(e,t),o=function(e){const t=e[G].parsedURL,a=new R(e[G].headers);if(a.has("Accept")||a.set("Accept","*/*"),!t.protocol||!t.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(t.protocol))throw new TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof i.Readable&&!W)throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let p=null;if(null==e.body&&/^(POST|PUT)$/i.test(e.method)&&(p="0"),null!=e.body){const t=b(e);"number"==typeof t&&(p=String(t))}p&&a.set("Content-Length",p),a.has("User-Agent")||a.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!a.has("Accept-Encoding")&&a.set("Accept-Encoding","gzip,deflate");let n=e.agent;return"function"==typeof n&&(n=n(t)),a.has("Connection")||n||a.set("Connection","close"),Object.assign({},t,{method:e.method,headers:B(a),agent:n})}(s),g=("https:"===o.protocol?d:p).request,l=s.signal;let A=null;const I=function(){let e=new Z("The user aborted a request.");n(e),s.body&&s.body instanceof i.Readable&&K(s.body,e),A&&A.body&&A.body.emit("error",e)};if(l&&l.aborted)return void I();const C=function(){I(),h()},m=g(o);let u;function h(){m.abort(),l&&l.removeEventListener("abort",C),clearTimeout(u)}l&&l.addEventListener("abort",C),s.timeout&&m.once("socket",(function(e){u=setTimeout((function(){n(new c(`network timeout at: ${s.url}`,"request-timeout")),h()}),s.timeout)})),m.on("error",(function(e){n(new c(`request to ${s.url} failed, reason: ${e.message}`,"system",e)),A&&A.body&&K(A.body,e),h()})),function(e,t){let a;e.on("socket",(function(e){a=e})),e.on("response",(function(e){const i=e.headers;"chunked"!==i["transfer-encoding"]||i["content-length"]||e.once("close",(function(e){if(a.listenerCount("data")>0&&!e){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",t(e)}}))}))}(m,(function(e){l&&l.aborted||K(A.body,e)})),parseInt(process.version.substring(1))<14&&m.on("socket",(function(e){e.addListener("close",(function(t){const a=e.listenerCount("data")>0;if(A&&a&&!t&&(!l||!l.aborted)){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",A.body.emit("error",e)}}))})),m.on("response",(function(e){clearTimeout(u);const t=function(e){const t=new R;for(const a of Object.keys(e))if(!w.test(a))if(Array.isArray(e[a]))for(const i of e[a])S.test(i)||(void 0===t[D][a]?t[D][a]=[i]:t[D][a].push(i));else S.test(e[a])||(t[D][a]=[e[a]]);return t}(e.headers);if(q.isRedirect(e.statusCode)){const p=t.get("Location");let d=null;try{d=null===p?null:new z(p,s.url).toString()}catch(e){if("manual"!==s.redirect)return n(new c(`uri requested responds with an invalid redirect URL: ${p}`,"invalid-redirect")),void h()}switch(s.redirect){case"error":return n(new c(`uri requested responds with a redirect, redirect mode is set to error: ${s.url}`,"no-redirect")),void h();case"manual":if(null!==d)try{t.set("Location",d)}catch(e){n(e)}break;case"follow":if(null===d)break;if(s.counter>=s.follow)return n(new c(`maximum redirect reached at: ${s.url}`,"max-redirect")),void h();const p={headers:new R(s.headers),follow:s.follow,counter:s.counter+1,agent:s.agent,compress:s.compress,method:s.method,body:s.body,signal:s.signal,timeout:s.timeout,size:s.size};if(!function(e,t){const a=new z(t).hostname,i=new z(e).hostname;return a===i||"."===a[a.length-i.length-1]&&a.endsWith(i)}(s.url,d)||(i=s.url,new z(d).protocol!==new z(i).protocol))for(const e of["authorization","www-authenticate","cookie","cookie2"])p.headers.delete(e);return 303!==e.statusCode&&s.body&&null===b(s)?(n(new c("Cannot follow redirect with body being a readable stream","unsupported-redirect")),void h()):(303!==e.statusCode&&(301!==e.statusCode&&302!==e.statusCode||"POST"!==s.method)||(p.method="GET",p.body=void 0,p.headers.delete("content-length")),a(q(new H(d,p))),void h())}}var i;e.once("end",(function(){l&&l.removeEventListener("abort",C)}));let p=e.pipe(new Q);const d={url:s.url,status:e.statusCode,statusText:e.statusMessage,headers:t,size:s.size,timeout:s.timeout,counter:s.counter},o=t.get("Content-Encoding");if(!s.compress||"HEAD"===s.method||null===o||204===e.statusCode||304===e.statusCode)return A=new L(p,d),void a(A);const g={flush:r.Z_SYNC_FLUSH,finishFlush:r.Z_SYNC_FLUSH};if("gzip"==o||"x-gzip"==o)return p=p.pipe(r.createGunzip(g)),A=new L(p,d),void a(A);if("deflate"==o||"x-deflate"==o){const t=e.pipe(new Q);return t.once("data",(function(e){p=8==(15&e[0])?p.pipe(r.createInflate()):p.pipe(r.createInflateRaw()),A=new L(p,d),a(A)})),void t.on("end",(function(){A||(A=new L(p,d),a(A))}))}if("br"==o&&"function"==typeof r.createBrotliDecompress)return p=p.pipe(r.createBrotliDecompress()),A=new L(p,d),void a(A);A=new L(p,d),a(A)})),function(e,t){const a=t.body;null===a?e.end():v(a)?a.stream().pipe(e):Buffer.isBuffer(a)?(e.write(a),e.end()):a.pipe(e)}(m,s)}))}function K(e,t){e.destroy?e.destroy(t):(e.emit("error",t),e.end())}q.isRedirect=function(e){return 301===e||302===e||303===e||307===e||308===e},q.Promise=global.Promise;const X=q},2020:e=>{"use strict";e.exports=JSON.parse('[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1000,1000],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6000],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8000,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8000]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9000],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[30000]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13000,13000],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43000,43000],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64000,64000],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66000,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[120000,120000],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128000,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23000]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149000]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32000]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195000,195000],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[40000]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918000,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]')}},t={};function a(i){var p=t[i];if(void 0!==p)return p.exports;var n=t[i]={id:i,loaded:!1,exports:{}};return e[i].call(n.exports,n,n.exports,a),n.loaded=!0,n.exports}a.c=t,a.d=(e,t)=>{for(var i in t)a.o(t,i)&&!a.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},a.hmd=e=>((e=Object.create(e)).children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:()=>{throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e),a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a(a.s=5590)})();