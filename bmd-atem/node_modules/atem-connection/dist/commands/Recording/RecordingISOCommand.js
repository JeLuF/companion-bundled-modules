"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RecordingISOCommand = void 0;
const CommandBase_1 = require("../CommandBase");
const state_1 = require("../../state");
const enums_1 = require("../../enums");
class RecordingISOCommand extends CommandBase_1.SymmetricalCommand {
    constructor(recordAllInputs) {
        super({ recordAllInputs });
    }
    serialize() {
        const buffer = Buffer.alloc(4);
        buffer.writeUInt8(this.properties.recordAllInputs ? 1 : 0, 0);
        return buffer;
    }
    static deserialize(rawCommand) {
        const recordAllInputs = rawCommand.readUInt8(0) > 0;
        return new RecordingISOCommand(recordAllInputs);
    }
    applyToState(state) {
        if (!state.recording) {
            throw new state_1.InvalidIdError('Recording');
        }
        state.recording.recordAllInputs = this.properties.recordAllInputs;
        return `recording.recordAllInputs`;
    }
}
exports.RecordingISOCommand = RecordingISOCommand;
RecordingISOCommand.rawName = 'ISOi';
RecordingISOCommand.minimumVersion = enums_1.ProtocolVersion.V8_1_1;
//# sourceMappingURL=RecordingISOCommand.js.map